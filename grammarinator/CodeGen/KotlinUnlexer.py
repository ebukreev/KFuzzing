# Generated by Grammarinator 19.3

from itertools import chain
from random import randint

from grammarinator.runtime import *

charset_0 = list(chain(*multirange_diff(printable_unicode_ranges, [(10, 11),(13, 14)])))
charset_1 = list(chain(*multirange_diff(printable_unicode_ranges, [(10, 11),(13, 14)])))
charset_2 = list(chain(range(32, 33), range(9, 10), range(12, 13)))
charset_3 = list(chain(range(102, 103), range(70, 71)))
charset_4 = list(chain(range(101, 102), range(69, 70)))
charset_5 = list(chain(range(101, 102), range(69, 70)))
charset_6 = list(chain(range(101, 102), range(69, 70)))
charset_7 = list(chain(range(101, 102), range(69, 70)))
charset_8 = list(chain(range(101, 102), range(69, 70)))
charset_9 = list(chain(range(101, 102), range(69, 70)))
charset_10 = list(chain(range(101, 102), range(69, 70)))
charset_11 = list(chain(range(101, 102), range(69, 70)))
charset_12 = list(chain(range(120, 121), range(88, 89)))
charset_13 = list(chain(range(48, 58), range(97, 103), range(65, 71)))
charset_14 = list(chain(range(98, 99), range(66, 67)))
charset_15 = list(chain(range(48, 49), range(49, 50)))
charset_16 = list(chain(*multirange_diff(printable_unicode_ranges, [(96, 97)])))
charset_17 = list(chain(*multirange_diff(printable_unicode_ranges, [(34, 35),(36, 37),(92, 93)])))
charset_18 = list(chain(*multirange_diff(printable_unicode_ranges, [(34, 35),(36, 37),(92, 93)])))


class KotlinUnlexer(Grammarinator):

    def __init__(self, *, max_depth=float('inf'), weights=None, cooldown=1.0):
        super(KotlinUnlexer, self).__init__()
        self.unlexer = self
        self.max_depth = max_depth
        self.weights = weights or dict()
        self.cooldown = cooldown

    def EOF(self, *args, **kwargs):
        pass

    @depthcontrol
    def ShebangLine(self):
        current = self.create_node(UnlexerRule(name='ShebangLine'))
        current += self.create_node(UnlexerRule(src='#!'))
        if self.unlexer.max_depth >= 0:
            for _ in self.zero_or_more():
                current += UnlexerRule(src=self.char_from_list(charset_0))

        return current
    ShebangLine.min_depth = 0

    @depthcontrol
    def DelimitedComment(self):
        current = self.create_node(UnlexerRule(name='DelimitedComment'))
        current += self.create_node(UnlexerRule(src='/*'))
        if self.unlexer.max_depth >= 0:
            for _ in self.zero_or_more():
                choice = self.choice([0 if [1, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_4', i), 1) for i, w in enumerate([1, 1])])
                self.unlexer.weights[('alt_4', choice)] = self.unlexer.weights.get(('alt_4', choice), 1) * self.unlexer.cooldown
                if choice == 0:
                    current += self.unlexer.DelimitedComment()
                elif choice == 1:
                    current += UnlexerRule(src=self.any_char())

        current += self.create_node(UnlexerRule(src='*/'))
        return current
    DelimitedComment.min_depth = 0

    @depthcontrol
    def LineComment(self):
        current = self.create_node(UnlexerRule(name='LineComment'))
        current += self.create_node(UnlexerRule(src='//'))
        if self.unlexer.max_depth >= 0:
            for _ in self.zero_or_more():
                current += UnlexerRule(src=self.char_from_list(charset_1))

        return current
    LineComment.min_depth = 0

    @depthcontrol
    def WS(self):
        current = self.create_node(UnlexerRule(name='WS'))
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_2)))
        return current
    WS.min_depth = 0

    @depthcontrol
    def NL(self):
        current = self.create_node(UnlexerRule(name='NL'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_10', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_10', choice)] = self.unlexer.weights.get(('alt_10', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='\u000A'))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='\u000D'))
            current += self.create_node(UnlexerRule(src='\u000A'))
        return current
    NL.min_depth = 0

    @depthcontrol
    def RESERVED(self):
        current = self.create_node(UnlexerRule(name='RESERVED'))
        current += self.create_node(UnlexerRule(src='...'))
        return current
    RESERVED.min_depth = 0

    @depthcontrol
    def DOT(self):
        current = self.create_node(UnlexerRule(name='DOT'))
        current += self.create_node(UnlexerRule(src='.'))
        return current
    DOT.min_depth = 0

    @depthcontrol
    def COMMA(self):
        current = self.create_node(UnlexerRule(name='COMMA'))
        current += self.create_node(UnlexerRule(src=','))
        return current
    COMMA.min_depth = 0

    @depthcontrol
    def LPAREN(self):
        current = self.create_node(UnlexerRule(name='LPAREN'))
        current += self.create_node(UnlexerRule(src='('))
        return current
    LPAREN.min_depth = 0

    @depthcontrol
    def RPAREN(self):
        current = self.create_node(UnlexerRule(name='RPAREN'))
        current += self.create_node(UnlexerRule(src=')'))
        return current
    RPAREN.min_depth = 0

    @depthcontrol
    def LSQUARE(self):
        current = self.create_node(UnlexerRule(name='LSQUARE'))
        current += self.create_node(UnlexerRule(src='['))
        return current
    LSQUARE.min_depth = 0

    @depthcontrol
    def RSQUARE(self):
        current = self.create_node(UnlexerRule(name='RSQUARE'))
        current += self.create_node(UnlexerRule(src=']'))
        return current
    RSQUARE.min_depth = 0

    @depthcontrol
    def LCURL(self):
        current = self.create_node(UnlexerRule(name='LCURL'))
        current += self.create_node(UnlexerRule(src='{'))
        return current
    LCURL.min_depth = 0

    @depthcontrol
    def RCURL(self):
        current = self.create_node(UnlexerRule(name='RCURL'))
        current += self.create_node(UnlexerRule(src='}'))
        return current
    RCURL.min_depth = 0

    @depthcontrol
    def MULT(self):
        current = self.create_node(UnlexerRule(name='MULT'))
        current += self.create_node(UnlexerRule(src='*'))
        return current
    MULT.min_depth = 0

    @depthcontrol
    def MOD(self):
        current = self.create_node(UnlexerRule(name='MOD'))
        current += self.create_node(UnlexerRule(src='%'))
        return current
    MOD.min_depth = 0

    @depthcontrol
    def DIV(self):
        current = self.create_node(UnlexerRule(name='DIV'))
        current += self.create_node(UnlexerRule(src='/'))
        return current
    DIV.min_depth = 0

    @depthcontrol
    def ADD(self):
        current = self.create_node(UnlexerRule(name='ADD'))
        current += self.create_node(UnlexerRule(src='+'))
        return current
    ADD.min_depth = 0

    @depthcontrol
    def SUB(self):
        current = self.create_node(UnlexerRule(name='SUB'))
        current += self.create_node(UnlexerRule(src='-'))
        return current
    SUB.min_depth = 0

    @depthcontrol
    def INCR(self):
        current = self.create_node(UnlexerRule(name='INCR'))
        current += self.create_node(UnlexerRule(src='++'))
        return current
    INCR.min_depth = 0

    @depthcontrol
    def DECR(self):
        current = self.create_node(UnlexerRule(name='DECR'))
        current += self.create_node(UnlexerRule(src='--'))
        return current
    DECR.min_depth = 0

    @depthcontrol
    def CONJ(self):
        current = self.create_node(UnlexerRule(name='CONJ'))
        current += self.create_node(UnlexerRule(src='&&'))
        return current
    CONJ.min_depth = 0

    @depthcontrol
    def DISJ(self):
        current = self.create_node(UnlexerRule(name='DISJ'))
        current += self.create_node(UnlexerRule(src='||'))
        return current
    DISJ.min_depth = 0

    @depthcontrol
    def EXCL(self):
        current = self.create_node(UnlexerRule(name='EXCL'))
        current += self.create_node(UnlexerRule(src='!'))
        return current
    EXCL.min_depth = 0

    @depthcontrol
    def COLON(self):
        current = self.create_node(UnlexerRule(name='COLON'))
        current += self.create_node(UnlexerRule(src=':'))
        return current
    COLON.min_depth = 0

    @depthcontrol
    def SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='SEMICOLON'))
        current += self.create_node(UnlexerRule(src=';'))
        return current
    SEMICOLON.min_depth = 0

    @depthcontrol
    def ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='='))
        return current
    ASSIGNMENT.min_depth = 0

    @depthcontrol
    def ADD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='ADD_ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='+='))
        return current
    ADD_ASSIGNMENT.min_depth = 0

    @depthcontrol
    def SUB_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='SUB_ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='-='))
        return current
    SUB_ASSIGNMENT.min_depth = 0

    @depthcontrol
    def MULT_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='MULT_ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='*='))
        return current
    MULT_ASSIGNMENT.min_depth = 0

    @depthcontrol
    def DIV_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='DIV_ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='/='))
        return current
    DIV_ASSIGNMENT.min_depth = 0

    @depthcontrol
    def MOD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='MOD_ASSIGNMENT'))
        current += self.create_node(UnlexerRule(src='%='))
        return current
    MOD_ASSIGNMENT.min_depth = 0

    @depthcontrol
    def ARROW(self):
        current = self.create_node(UnlexerRule(name='ARROW'))
        current += self.create_node(UnlexerRule(src='->'))
        return current
    ARROW.min_depth = 0

    @depthcontrol
    def DOUBLE_ARROW(self):
        current = self.create_node(UnlexerRule(name='DOUBLE_ARROW'))
        current += self.create_node(UnlexerRule(src='=>'))
        return current
    DOUBLE_ARROW.min_depth = 0

    @depthcontrol
    def RANGE(self):
        current = self.create_node(UnlexerRule(name='RANGE'))
        current += self.create_node(UnlexerRule(src='..'))
        return current
    RANGE.min_depth = 0

    @depthcontrol
    def COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='COLONCOLON'))
        current += self.create_node(UnlexerRule(src='::'))
        return current
    COLONCOLON.min_depth = 0

    @depthcontrol
    def Q_COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='Q_COLONCOLON'))
        current += self.create_node(UnlexerRule(src='?::'))
        return current
    Q_COLONCOLON.min_depth = 0

    @depthcontrol
    def DOUBLE_SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='DOUBLE_SEMICOLON'))
        current += self.create_node(UnlexerRule(src=';;'))
        return current
    DOUBLE_SEMICOLON.min_depth = 0

    @depthcontrol
    def HASH(self):
        current = self.create_node(UnlexerRule(name='HASH'))
        current += self.create_node(UnlexerRule(src='#'))
        return current
    HASH.min_depth = 0

    @depthcontrol
    def AT(self):
        current = self.create_node(UnlexerRule(name='AT'))
        current += self.create_node(UnlexerRule(src='@'))
        return current
    AT.min_depth = 0

    @depthcontrol
    def QUEST(self):
        current = self.create_node(UnlexerRule(name='QUEST'))
        current += self.create_node(UnlexerRule(src='?'))
        return current
    QUEST.min_depth = 0

    @depthcontrol
    def ELVIS(self):
        current = self.create_node(UnlexerRule(name='ELVIS'))
        current += self.create_node(UnlexerRule(src='?:'))
        return current
    ELVIS.min_depth = 0

    @depthcontrol
    def LANGLE(self):
        current = self.create_node(UnlexerRule(name='LANGLE'))
        current += self.create_node(UnlexerRule(src='<'))
        return current
    LANGLE.min_depth = 0

    @depthcontrol
    def RANGLE(self):
        current = self.create_node(UnlexerRule(name='RANGLE'))
        current += self.create_node(UnlexerRule(src='>'))
        return current
    RANGLE.min_depth = 0

    @depthcontrol
    def LE(self):
        current = self.create_node(UnlexerRule(name='LE'))
        current += self.create_node(UnlexerRule(src='<='))
        return current
    LE.min_depth = 0

    @depthcontrol
    def GE(self):
        current = self.create_node(UnlexerRule(name='GE'))
        current += self.create_node(UnlexerRule(src='>='))
        return current
    GE.min_depth = 0

    @depthcontrol
    def EXCL_EQ(self):
        current = self.create_node(UnlexerRule(name='EXCL_EQ'))
        current += self.create_node(UnlexerRule(src='!='))
        return current
    EXCL_EQ.min_depth = 0

    @depthcontrol
    def EXCL_EQEQ(self):
        current = self.create_node(UnlexerRule(name='EXCL_EQEQ'))
        current += self.create_node(UnlexerRule(src='!=='))
        return current
    EXCL_EQEQ.min_depth = 0

    @depthcontrol
    def AS_SAFE(self):
        current = self.create_node(UnlexerRule(name='AS_SAFE'))
        current += self.create_node(UnlexerRule(src='as?'))
        return current
    AS_SAFE.min_depth = 0

    @depthcontrol
    def EQEQ(self):
        current = self.create_node(UnlexerRule(name='EQEQ'))
        current += self.create_node(UnlexerRule(src='=='))
        return current
    EQEQ.min_depth = 0

    @depthcontrol
    def EQEQEQ(self):
        current = self.create_node(UnlexerRule(name='EQEQEQ'))
        current += self.create_node(UnlexerRule(src='==='))
        return current
    EQEQEQ.min_depth = 0

    @depthcontrol
    def SINGLE_QUOTE(self):
        current = self.create_node(UnlexerRule(name='SINGLE_QUOTE'))
        current += self.create_node(UnlexerRule(src='\''))
        return current
    SINGLE_QUOTE.min_depth = 0

    @depthcontrol
    def RETURN_AT(self):
        current = self.create_node(UnlexerRule(name='RETURN_AT'))
        current += self.create_node(UnlexerRule(src='return@'))
        current += self.unlexer.Identifier()
        return current
    RETURN_AT.min_depth = 1

    @depthcontrol
    def CONTINUE_AT(self):
        current = self.create_node(UnlexerRule(name='CONTINUE_AT'))
        current += self.create_node(UnlexerRule(src='continue@'))
        current += self.unlexer.Identifier()
        return current
    CONTINUE_AT.min_depth = 1

    @depthcontrol
    def BREAK_AT(self):
        current = self.create_node(UnlexerRule(name='BREAK_AT'))
        current += self.create_node(UnlexerRule(src='break@'))
        current += self.unlexer.Identifier()
        return current
    BREAK_AT.min_depth = 1

    @depthcontrol
    def FILE(self):
        current = self.create_node(UnlexerRule(name='FILE'))
        current += self.create_node(UnlexerRule(src='@file'))
        return current
    FILE.min_depth = 0

    @depthcontrol
    def PACKAGE(self):
        current = self.create_node(UnlexerRule(name='PACKAGE'))
        current += self.create_node(UnlexerRule(src='package'))
        return current
    PACKAGE.min_depth = 0

    @depthcontrol
    def IMPORT(self):
        current = self.create_node(UnlexerRule(name='IMPORT'))
        current += self.create_node(UnlexerRule(src='import'))
        return current
    IMPORT.min_depth = 0

    @depthcontrol
    def CLASS(self):
        current = self.create_node(UnlexerRule(name='CLASS'))
        current += self.create_node(UnlexerRule(src='class'))
        return current
    CLASS.min_depth = 0

    @depthcontrol
    def INTERFACE(self):
        current = self.create_node(UnlexerRule(name='INTERFACE'))
        current += self.create_node(UnlexerRule(src='interface'))
        return current
    INTERFACE.min_depth = 0

    @depthcontrol
    def FUN(self):
        current = self.create_node(UnlexerRule(name='FUN'))
        current += self.create_node(UnlexerRule(src='fun'))
        return current
    FUN.min_depth = 0

    @depthcontrol
    def OBJECT(self):
        current = self.create_node(UnlexerRule(name='OBJECT'))
        current += self.create_node(UnlexerRule(src='object'))
        return current
    OBJECT.min_depth = 0

    @depthcontrol
    def VAL(self):
        current = self.create_node(UnlexerRule(name='VAL'))
        current += self.create_node(UnlexerRule(src='val'))
        return current
    VAL.min_depth = 0

    @depthcontrol
    def VAR(self):
        current = self.create_node(UnlexerRule(name='VAR'))
        current += self.create_node(UnlexerRule(src='var'))
        return current
    VAR.min_depth = 0

    @depthcontrol
    def TYPE_ALIAS(self):
        current = self.create_node(UnlexerRule(name='TYPE_ALIAS'))
        current += self.create_node(UnlexerRule(src='typealias'))
        return current
    TYPE_ALIAS.min_depth = 0

    @depthcontrol
    def CONSTRUCTOR(self):
        current = self.create_node(UnlexerRule(name='CONSTRUCTOR'))
        current += self.create_node(UnlexerRule(src='constructor'))
        return current
    CONSTRUCTOR.min_depth = 0

    @depthcontrol
    def BY(self):
        current = self.create_node(UnlexerRule(name='BY'))
        current += self.create_node(UnlexerRule(src='by'))
        return current
    BY.min_depth = 0

    @depthcontrol
    def COMPANION(self):
        current = self.create_node(UnlexerRule(name='COMPANION'))
        current += self.create_node(UnlexerRule(src='companion'))
        return current
    COMPANION.min_depth = 0

    @depthcontrol
    def INIT(self):
        current = self.create_node(UnlexerRule(name='INIT'))
        current += self.create_node(UnlexerRule(src='init'))
        return current
    INIT.min_depth = 0

    @depthcontrol
    def THIS(self):
        current = self.create_node(UnlexerRule(name='THIS'))
        current += self.create_node(UnlexerRule(src='this'))
        return current
    THIS.min_depth = 0

    @depthcontrol
    def SUPER(self):
        current = self.create_node(UnlexerRule(name='SUPER'))
        current += self.create_node(UnlexerRule(src='super'))
        return current
    SUPER.min_depth = 0

    @depthcontrol
    def TYPEOF(self):
        current = self.create_node(UnlexerRule(name='TYPEOF'))
        current += self.create_node(UnlexerRule(src='typeof'))
        return current
    TYPEOF.min_depth = 0

    @depthcontrol
    def WHERE(self):
        current = self.create_node(UnlexerRule(name='WHERE'))
        current += self.create_node(UnlexerRule(src='where'))
        return current
    WHERE.min_depth = 0

    @depthcontrol
    def IF(self):
        current = self.create_node(UnlexerRule(name='IF'))
        current += self.create_node(UnlexerRule(src='if'))
        return current
    IF.min_depth = 0

    @depthcontrol
    def ELSE(self):
        current = self.create_node(UnlexerRule(name='ELSE'))
        current += self.create_node(UnlexerRule(src='else'))
        return current
    ELSE.min_depth = 0

    @depthcontrol
    def WHEN(self):
        current = self.create_node(UnlexerRule(name='WHEN'))
        current += self.create_node(UnlexerRule(src='when'))
        return current
    WHEN.min_depth = 0

    @depthcontrol
    def TRY(self):
        current = self.create_node(UnlexerRule(name='TRY'))
        current += self.create_node(UnlexerRule(src='try'))
        return current
    TRY.min_depth = 0

    @depthcontrol
    def CATCH(self):
        current = self.create_node(UnlexerRule(name='CATCH'))
        current += self.create_node(UnlexerRule(src='catch'))
        return current
    CATCH.min_depth = 0

    @depthcontrol
    def FINALLY(self):
        current = self.create_node(UnlexerRule(name='FINALLY'))
        current += self.create_node(UnlexerRule(src='finally'))
        return current
    FINALLY.min_depth = 0

    @depthcontrol
    def FOR(self):
        current = self.create_node(UnlexerRule(name='FOR'))
        current += self.create_node(UnlexerRule(src='for'))
        return current
    FOR.min_depth = 0

    @depthcontrol
    def DO(self):
        current = self.create_node(UnlexerRule(name='DO'))
        current += self.create_node(UnlexerRule(src='do'))
        return current
    DO.min_depth = 0

    @depthcontrol
    def WHILE(self):
        current = self.create_node(UnlexerRule(name='WHILE'))
        current += self.create_node(UnlexerRule(src='while'))
        return current
    WHILE.min_depth = 0

    @depthcontrol
    def THROW(self):
        current = self.create_node(UnlexerRule(name='THROW'))
        current += self.create_node(UnlexerRule(src='throw'))
        return current
    THROW.min_depth = 0

    @depthcontrol
    def RETURN(self):
        current = self.create_node(UnlexerRule(name='RETURN'))
        current += self.create_node(UnlexerRule(src='return'))
        return current
    RETURN.min_depth = 0

    @depthcontrol
    def CONTINUE(self):
        current = self.create_node(UnlexerRule(name='CONTINUE'))
        current += self.create_node(UnlexerRule(src='continue'))
        return current
    CONTINUE.min_depth = 0

    @depthcontrol
    def BREAK(self):
        current = self.create_node(UnlexerRule(name='BREAK'))
        current += self.create_node(UnlexerRule(src='break'))
        return current
    BREAK.min_depth = 0

    @depthcontrol
    def AS(self):
        current = self.create_node(UnlexerRule(name='AS'))
        current += self.create_node(UnlexerRule(src='as'))
        return current
    AS.min_depth = 0

    @depthcontrol
    def IS(self):
        current = self.create_node(UnlexerRule(name='IS'))
        current += self.create_node(UnlexerRule(src='is'))
        return current
    IS.min_depth = 0

    @depthcontrol
    def IN(self):
        current = self.create_node(UnlexerRule(name='IN'))
        current += self.create_node(UnlexerRule(src='in'))
        return current
    IN.min_depth = 0

    @depthcontrol
    def NOT_IS(self):
        current = self.create_node(UnlexerRule(name='NOT_IS'))
        current += self.create_node(UnlexerRule(src='!is'))
        if self.unlexer.max_depth >= 0:
            for _ in self.one_or_more():
                choice = self.choice([0 if [1, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_101', i), 1) for i, w in enumerate([1, 1])])
                self.unlexer.weights[('alt_101', choice)] = self.unlexer.weights.get(('alt_101', choice), 1) * self.unlexer.cooldown
                if choice == 0:
                    current += self.unlexer.WS()
                elif choice == 1:
                    current += self.unlexer.NL()

        return current
    NOT_IS.min_depth = 1

    @depthcontrol
    def NOT_IN(self):
        current = self.create_node(UnlexerRule(name='NOT_IN'))
        current += self.create_node(UnlexerRule(src='!in'))
        if self.unlexer.max_depth >= 0:
            for _ in self.one_or_more():
                choice = self.choice([0 if [1, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_105', i), 1) for i, w in enumerate([1, 1])])
                self.unlexer.weights[('alt_105', choice)] = self.unlexer.weights.get(('alt_105', choice), 1) * self.unlexer.cooldown
                if choice == 0:
                    current += self.unlexer.WS()
                elif choice == 1:
                    current += self.unlexer.NL()

        return current
    NOT_IN.min_depth = 1

    @depthcontrol
    def OUT(self):
        current = self.create_node(UnlexerRule(name='OUT'))
        current += self.create_node(UnlexerRule(src='out'))
        return current
    OUT.min_depth = 0

    @depthcontrol
    def FIELD(self):
        current = self.create_node(UnlexerRule(name='FIELD'))
        current += self.create_node(UnlexerRule(src='@field'))
        return current
    FIELD.min_depth = 0

    @depthcontrol
    def PROPERTY(self):
        current = self.create_node(UnlexerRule(name='PROPERTY'))
        current += self.create_node(UnlexerRule(src='@property'))
        return current
    PROPERTY.min_depth = 0

    @depthcontrol
    def GET(self):
        current = self.create_node(UnlexerRule(name='GET'))
        current += self.create_node(UnlexerRule(src='@get'))
        return current
    GET.min_depth = 0

    @depthcontrol
    def SET(self):
        current = self.create_node(UnlexerRule(name='SET'))
        current += self.create_node(UnlexerRule(src='@set'))
        return current
    SET.min_depth = 0

    @depthcontrol
    def GETTER(self):
        current = self.create_node(UnlexerRule(name='GETTER'))
        current += self.create_node(UnlexerRule(src='get'))
        return current
    GETTER.min_depth = 0

    @depthcontrol
    def SETTER(self):
        current = self.create_node(UnlexerRule(name='SETTER'))
        current += self.create_node(UnlexerRule(src='set'))
        return current
    SETTER.min_depth = 0

    @depthcontrol
    def RECEIVER(self):
        current = self.create_node(UnlexerRule(name='RECEIVER'))
        current += self.create_node(UnlexerRule(src='@receiver'))
        return current
    RECEIVER.min_depth = 0

    @depthcontrol
    def PARAM(self):
        current = self.create_node(UnlexerRule(name='PARAM'))
        current += self.create_node(UnlexerRule(src='@param'))
        return current
    PARAM.min_depth = 0

    @depthcontrol
    def SETPARAM(self):
        current = self.create_node(UnlexerRule(name='SETPARAM'))
        current += self.create_node(UnlexerRule(src='@setparam'))
        return current
    SETPARAM.min_depth = 0

    @depthcontrol
    def DELEGATE(self):
        current = self.create_node(UnlexerRule(name='DELEGATE'))
        current += self.create_node(UnlexerRule(src='@delegate'))
        return current
    DELEGATE.min_depth = 0

    @depthcontrol
    def DYNAMIC(self):
        current = self.create_node(UnlexerRule(name='DYNAMIC'))
        current += self.create_node(UnlexerRule(src='dynamic'))
        return current
    DYNAMIC.min_depth = 0

    @depthcontrol
    def PUBLIC(self):
        current = self.create_node(UnlexerRule(name='PUBLIC'))
        current += self.create_node(UnlexerRule(src='public'))
        return current
    PUBLIC.min_depth = 0

    @depthcontrol
    def PRIVATE(self):
        current = self.create_node(UnlexerRule(name='PRIVATE'))
        current += self.create_node(UnlexerRule(src='private'))
        return current
    PRIVATE.min_depth = 0

    @depthcontrol
    def PROTECTED(self):
        current = self.create_node(UnlexerRule(name='PROTECTED'))
        current += self.create_node(UnlexerRule(src='protected'))
        return current
    PROTECTED.min_depth = 0

    @depthcontrol
    def INTERNAL(self):
        current = self.create_node(UnlexerRule(name='INTERNAL'))
        current += self.create_node(UnlexerRule(src='internal'))
        return current
    INTERNAL.min_depth = 0

    @depthcontrol
    def ENUM(self):
        current = self.create_node(UnlexerRule(name='ENUM'))
        current += self.create_node(UnlexerRule(src='enum'))
        return current
    ENUM.min_depth = 0

    @depthcontrol
    def SEALED(self):
        current = self.create_node(UnlexerRule(name='SEALED'))
        current += self.create_node(UnlexerRule(src='sealed'))
        return current
    SEALED.min_depth = 0

    @depthcontrol
    def ANNOTATION(self):
        current = self.create_node(UnlexerRule(name='ANNOTATION'))
        current += self.create_node(UnlexerRule(src='annotation'))
        return current
    ANNOTATION.min_depth = 0

    @depthcontrol
    def DATA(self):
        current = self.create_node(UnlexerRule(name='DATA'))
        current += self.create_node(UnlexerRule(src='data'))
        return current
    DATA.min_depth = 0

    @depthcontrol
    def INNER(self):
        current = self.create_node(UnlexerRule(name='INNER'))
        current += self.create_node(UnlexerRule(src='inner'))
        return current
    INNER.min_depth = 0

    @depthcontrol
    def TAILREC(self):
        current = self.create_node(UnlexerRule(name='TAILREC'))
        current += self.create_node(UnlexerRule(src='tailrec'))
        return current
    TAILREC.min_depth = 0

    @depthcontrol
    def OPERATOR(self):
        current = self.create_node(UnlexerRule(name='OPERATOR'))
        current += self.create_node(UnlexerRule(src='operator'))
        return current
    OPERATOR.min_depth = 0

    @depthcontrol
    def INLINE(self):
        current = self.create_node(UnlexerRule(name='INLINE'))
        current += self.create_node(UnlexerRule(src='inline'))
        return current
    INLINE.min_depth = 0

    @depthcontrol
    def INFIX(self):
        current = self.create_node(UnlexerRule(name='INFIX'))
        current += self.create_node(UnlexerRule(src='infix'))
        return current
    INFIX.min_depth = 0

    @depthcontrol
    def EXTERNAL(self):
        current = self.create_node(UnlexerRule(name='EXTERNAL'))
        current += self.create_node(UnlexerRule(src='external'))
        return current
    EXTERNAL.min_depth = 0

    @depthcontrol
    def SUSPEND(self):
        current = self.create_node(UnlexerRule(name='SUSPEND'))
        current += self.create_node(UnlexerRule(src='suspend'))
        return current
    SUSPEND.min_depth = 0

    @depthcontrol
    def OVERRIDE(self):
        current = self.create_node(UnlexerRule(name='OVERRIDE'))
        current += self.create_node(UnlexerRule(src='override'))
        return current
    OVERRIDE.min_depth = 0

    @depthcontrol
    def ABSTRACT(self):
        current = self.create_node(UnlexerRule(name='ABSTRACT'))
        current += self.create_node(UnlexerRule(src='abstract'))
        return current
    ABSTRACT.min_depth = 0

    @depthcontrol
    def FINAL(self):
        current = self.create_node(UnlexerRule(name='FINAL'))
        current += self.create_node(UnlexerRule(src='final'))
        return current
    FINAL.min_depth = 0

    @depthcontrol
    def OPEN(self):
        current = self.create_node(UnlexerRule(name='OPEN'))
        current += self.create_node(UnlexerRule(src='open'))
        return current
    OPEN.min_depth = 0

    @depthcontrol
    def CONST(self):
        current = self.create_node(UnlexerRule(name='CONST'))
        current += self.create_node(UnlexerRule(src='const'))
        return current
    CONST.min_depth = 0

    @depthcontrol
    def LATEINIT(self):
        current = self.create_node(UnlexerRule(name='LATEINIT'))
        current += self.create_node(UnlexerRule(src='lateinit'))
        return current
    LATEINIT.min_depth = 0

    @depthcontrol
    def VARARG(self):
        current = self.create_node(UnlexerRule(name='VARARG'))
        current += self.create_node(UnlexerRule(src='vararg'))
        return current
    VARARG.min_depth = 0

    @depthcontrol
    def NOINLINE(self):
        current = self.create_node(UnlexerRule(name='NOINLINE'))
        current += self.create_node(UnlexerRule(src='noinline'))
        return current
    NOINLINE.min_depth = 0

    @depthcontrol
    def CROSSINLINE(self):
        current = self.create_node(UnlexerRule(name='CROSSINLINE'))
        current += self.create_node(UnlexerRule(src='crossinline'))
        return current
    CROSSINLINE.min_depth = 0

    @depthcontrol
    def REIFIED(self):
        current = self.create_node(UnlexerRule(name='REIFIED'))
        current += self.create_node(UnlexerRule(src='reified'))
        return current
    REIFIED.min_depth = 0

    @depthcontrol
    def QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='QUOTE_OPEN'))
        current += self.create_node(UnlexerRule(src='"'))
        return current
    QUOTE_OPEN.min_depth = 0

    @depthcontrol
    def TRIPLE_QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='TRIPLE_QUOTE_OPEN'))
        current += self.create_node(UnlexerRule(src='"""'))
        return current
    TRIPLE_QUOTE_OPEN.min_depth = 0

    @depthcontrol
    def RealLiteral(self):
        current = self.create_node(UnlexerRule(name='RealLiteral'))
        choice = self.choice([0 if [2, 3][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_147', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_147', choice)] = self.unlexer.weights.get(('alt_147', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.FloatLiteral()
        elif choice == 1:
            current += self.unlexer.DoubleLiteral()
        return current
    RealLiteral.min_depth = 2

    @depthcontrol
    def FloatLiteral(self):
        current = self.create_node(UnlexerRule(name='FloatLiteral'))
        choice = self.choice([0 if [3, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_150', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_150', choice)] = self.unlexer.weights.get(('alt_150', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.DoubleLiteral()
        elif choice == 1:
            current += self.unlexer.IntegerLiteral()
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_3)))
        return current
    FloatLiteral.min_depth = 1

    @depthcontrol
    def DoubleLiteral(self):
        current = self.create_node(UnlexerRule(name='DoubleLiteral'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_153', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_153', choice)] = self.unlexer.weights.get(('alt_153', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            if self.unlexer.max_depth >= 2:
                for _ in self.zero_or_one():
                    current += self.unlexer.DecDigitNoZero()
                    if self.unlexer.max_depth >= 2:
                        for _ in self.zero_or_more():
                            current += self.unlexer.DecDigit()


            current += self.create_node(UnlexerRule(src='.'))
        elif choice == 1:
            if self.unlexer.max_depth >= 2:
                for _ in self.zero_or_one():
                    current += self.unlexer.DecDigitNoZero()
                    if self.unlexer.max_depth >= 0:
                        for _ in self.zero_or_more():
                            choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_161', i), 1) for i, w in enumerate([1, 1])])
                            self.unlexer.weights[('alt_161', choice)] = self.unlexer.weights.get(('alt_161', choice), 1) * self.unlexer.cooldown
                            if choice == 0:
                                current += self.unlexer.DecDigit()
                            elif choice == 1:
                                current += self.create_node(UnlexerRule(src='_'))

                    current += self.unlexer.DecDigit()

            current += self.create_node(UnlexerRule(src='.'))
        choice = self.choice([0 if [2, 2, 2, 2, 2, 2][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_166', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_166', choice)] = self.unlexer.weights.get(('alt_166', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 1:
            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_173', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_173', choice)] = self.unlexer.weights.get(('alt_173', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        elif choice == 2:
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_4)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_178', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_178', choice)] = self.unlexer.weights.get(('alt_178', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 3:
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_5)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_184', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_184', choice)] = self.unlexer.weights.get(('alt_184', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_189', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_189', choice)] = self.unlexer.weights.get(('alt_189', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        elif choice == 4:
            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_193', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_193', choice)] = self.unlexer.weights.get(('alt_193', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_6)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_198', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_198', choice)] = self.unlexer.weights.get(('alt_198', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 5:
            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_203', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_203', choice)] = self.unlexer.weights.get(('alt_203', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_7)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_208', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_208', choice)] = self.unlexer.weights.get(('alt_208', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_213', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_213', choice)] = self.unlexer.weights.get(('alt_213', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        return current
    DoubleLiteral.min_depth = 2

    @depthcontrol
    def LongLiteral(self):
        current = self.create_node(UnlexerRule(name='LongLiteral'))
        choice = self.choice([0 if [1, 2, 2][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_217', i), 1) for i, w in enumerate([1, 1, 1])])
        self.unlexer.weights[('alt_217', choice)] = self.unlexer.weights.get(('alt_217', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.IntegerLiteral()
        elif choice == 1:
            current += self.unlexer.HexLiteral()
        elif choice == 2:
            current += self.unlexer.BinLiteral()
        current += self.create_node(UnlexerRule(src='L'))
        return current
    LongLiteral.min_depth = 1

    @depthcontrol
    def IntegerLiteral(self):
        current = self.create_node(UnlexerRule(name='IntegerLiteral'))
        choice = self.choice([0 if [0, 2, 2, 2, 2, 2, 2][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_222', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_222', choice)] = self.unlexer.weights.get(('alt_222', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='0'))
        elif choice == 1:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 2:
                for _ in self.zero_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 2:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_232', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_232', choice)] = self.unlexer.weights.get(('alt_232', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        elif choice == 3:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 2:
                for _ in self.zero_or_more():
                    current += self.unlexer.DecDigit()

            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_8)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_238', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_238', choice)] = self.unlexer.weights.get(('alt_238', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 4:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 2:
                for _ in self.zero_or_more():
                    current += self.unlexer.DecDigit()

            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_9)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_245', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_245', choice)] = self.unlexer.weights.get(('alt_245', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_250', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_250', choice)] = self.unlexer.weights.get(('alt_250', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        elif choice == 5:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_254', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_254', choice)] = self.unlexer.weights.get(('alt_254', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_10)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_259', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_259', choice)] = self.unlexer.weights.get(('alt_259', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += self.unlexer.DecDigit()

        elif choice == 6:
            current += self.unlexer.DecDigitNoZero()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_264', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_264', choice)] = self.unlexer.weights.get(('alt_264', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
            current += self.create_node(UnlexerRule(src=self.char_from_list(charset_11)))
            if self.unlexer.max_depth >= 0:
                for _ in self.zero_or_one():
                    choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_269', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_269', choice)] = self.unlexer.weights.get(('alt_269', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.create_node(UnlexerRule(src='+'))
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='-'))

            current += self.unlexer.DecDigit()
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_274', i), 1) for i, w in enumerate([1, 1])])
                    self.unlexer.weights[('alt_274', choice)] = self.unlexer.weights.get(('alt_274', choice), 1) * self.unlexer.cooldown
                    if choice == 0:
                        current += self.unlexer.DecDigit()
                    elif choice == 1:
                        current += self.create_node(UnlexerRule(src='_'))

            current += self.unlexer.DecDigit()
        return current
    IntegerLiteral.min_depth = 0

    @depthcontrol
    def DecDigit(self):
        current = self.create_node(UnlexerRule(name='DecDigit'))
        current += self.unlexer.UNICODE_CLASS_ND()
        return current
    DecDigit.min_depth = 1

    @depthcontrol
    def DecDigitNoZero(self):
        current = self.create_node(UnlexerRule(name='DecDigitNoZero'))
        current += self.unlexer.UNICODE_CLASS_ND_NoZeros()
        return current
    DecDigitNoZero.min_depth = 1

    @depthcontrol
    def UNICODE_CLASS_ND_NoZeros(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_ND_NoZeros'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_278', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_278', choice)] = self.unlexer.weights.get(('alt_278', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(49, 57))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1633, 1641))))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1777, 1785))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1985, 1993))))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2407, 2415))))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2535, 2543))))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2663, 2671))))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2791, 2799))))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2919, 2927))))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3047, 3055))))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3175, 3183))))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3303, 3311))))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3431, 3439))))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3559, 3567))))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3665, 3673))))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3793, 3801))))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3873, 3881))))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4161, 4169))))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4241, 4249))))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6113, 6121))))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6161, 6169))))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6471, 6479))))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6609, 6617))))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6785, 6793))))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6801, 6809))))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6993, 7001))))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7089, 7097))))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7233, 7241))))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7249, 7257))))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42529, 42537))))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43217, 43225))))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43265, 43273))))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43473, 43481))))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43505, 43513))))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43601, 43609))))
        elif choice == 35:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(44017, 44025))))
        elif choice == 36:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65297, 65305))))
        return current
    UNICODE_CLASS_ND_NoZeros.min_depth = 0

    @depthcontrol
    def HexLiteral(self):
        current = self.create_node(UnlexerRule(name='HexLiteral'))
        current += self.create_node(UnlexerRule(src='0'))
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_12)))
        current += self.unlexer.HexDigit()
        if self.unlexer.max_depth >= 0:
            for _ in self.zero_or_more():
                choice = self.choice([0 if [1, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_318', i), 1) for i, w in enumerate([1, 1])])
                self.unlexer.weights[('alt_318', choice)] = self.unlexer.weights.get(('alt_318', choice), 1) * self.unlexer.cooldown
                if choice == 0:
                    current += self.unlexer.HexDigit()
                elif choice == 1:
                    current += self.create_node(UnlexerRule(src='_'))

        return current
    HexLiteral.min_depth = 1

    @depthcontrol
    def HexDigit(self):
        current = self.create_node(UnlexerRule(name='HexDigit'))
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_13)))
        return current
    HexDigit.min_depth = 0

    @depthcontrol
    def BinLiteral(self):
        current = self.create_node(UnlexerRule(name='BinLiteral'))
        current += self.create_node(UnlexerRule(src='0'))
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_14)))
        current += self.unlexer.BinDigit()
        if self.unlexer.max_depth >= 0:
            for _ in self.zero_or_more():
                choice = self.choice([0 if [1, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_324', i), 1) for i, w in enumerate([1, 1])])
                self.unlexer.weights[('alt_324', choice)] = self.unlexer.weights.get(('alt_324', choice), 1) * self.unlexer.cooldown
                if choice == 0:
                    current += self.unlexer.BinDigit()
                elif choice == 1:
                    current += self.create_node(UnlexerRule(src='_'))

        return current
    BinLiteral.min_depth = 1

    @depthcontrol
    def BinDigit(self):
        current = self.create_node(UnlexerRule(name='BinDigit'))
        current += self.create_node(UnlexerRule(src=self.char_from_list(charset_15)))
        return current
    BinDigit.min_depth = 0

    @depthcontrol
    def BooleanLiteral(self):
        current = self.create_node(UnlexerRule(name='BooleanLiteral'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_328', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_328', choice)] = self.unlexer.weights.get(('alt_328', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='true'))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='false'))
        return current
    BooleanLiteral.min_depth = 0

    @depthcontrol
    def NullLiteral(self):
        current = self.create_node(UnlexerRule(name='NullLiteral'))
        current += self.create_node(UnlexerRule(src='null'))
        return current
    NullLiteral.min_depth = 0

    @depthcontrol
    def Identifier(self):
        current = self.create_node(UnlexerRule(name='Identifier'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_334', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_334', choice)] = self.unlexer.weights.get(('alt_334', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            # choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_337', i), 1) for i, w in enumerate([1, 1])])
            # self.unlexer.weights[('alt_337', choice)] = self.unlexer.weights.get(('alt_337', choice), 1) * self.unlexer.cooldown
            # if choice == 0:
            #     current += self.unlexer.Letter()
            # elif choice == 1:
            #     current += self.create_node(UnlexerRule(src='_'))
            # if self.unlexer.max_depth >= 0:
            #     for _ in self.zero_or_more():
            #         choice = self.choice([0 if [2, 0, 2][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_342', i), 1) for i, w in enumerate([1, 1, 1])])
            #         self.unlexer.weights[('alt_342', choice)] = self.unlexer.weights.get(('alt_342', choice), 1) * self.unlexer.cooldown
            #         if choice == 0:
            #             current += self.unlexer.Letter()
            #         elif choice == 1:
            #             current += self.create_node(UnlexerRule(src='_'))
            #         elif choice == 2:
            #             current += self.unlexer.DecDigit()
            current += self.create_node(UnlexerRule(src='x'))

        elif choice == 1:
            # current += self.create_node(UnlexerRule(src='`'))
            # if self.unlexer.max_depth >= 0:
            #     for _ in self.one_or_more():
            #         current += UnlexerRule(src=self.char_from_list(charset_16))
            #
            # current += self.create_node(UnlexerRule(src='`'))
            idents = ['result', 'A', 'foo', 'run', 'O']
            current += self.create_node(UnlexerRule(src=idents[randint(0, len(idents) - 1)]))
        return current
    Identifier.min_depth = 0

    @depthcontrol
    def LabelReference(self):
        current = self.create_node(UnlexerRule(name='LabelReference'))
        current += self.create_node(UnlexerRule(src='@'))
        current += self.unlexer.Identifier()
        return current
    LabelReference.min_depth = 1

    @depthcontrol
    def LabelDefinition(self):
        current = self.create_node(UnlexerRule(name='LabelDefinition'))
        current += self.unlexer.Identifier()
        current += self.create_node(UnlexerRule(src='@'))
        return current
    LabelDefinition.min_depth = 1

    @depthcontrol
    def FieldIdentifier(self):
        current = self.create_node(UnlexerRule(name='FieldIdentifier'))
        current += self.create_node(UnlexerRule(src='$'))
        current += self.unlexer.Identifier()
        return current
    FieldIdentifier.min_depth = 1

    @depthcontrol
    def CharacterLiteral(self):
        current = self.create_node(UnlexerRule(name='CharacterLiteral'))
        current += self.create_node(UnlexerRule(src='\''))
        choice = self.choice([0 if [2, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_353', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_353', choice)] = self.unlexer.weights.get(('alt_353', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.EscapeSeq()
        elif choice == 1:
            current += UnlexerRule(src=self.any_char())
        current += self.create_node(UnlexerRule(src='\''))
        return current
    CharacterLiteral.min_depth = 0

    @depthcontrol
    def EscapeSeq(self):
        current = self.create_node(UnlexerRule(name='EscapeSeq'))
        choice = self.choice([0 if [2, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_357', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_357', choice)] = self.unlexer.weights.get(('alt_357', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.UniCharacterLiteral()
        elif choice == 1:
            current += self.unlexer.EscapedIdentifier()
        return current
    EscapeSeq.min_depth = 1

    @depthcontrol
    def UniCharacterLiteral(self):
        current = self.create_node(UnlexerRule(name='UniCharacterLiteral'))
        current += self.create_node(UnlexerRule(src='\\'))
        current += self.create_node(UnlexerRule(src='u'))
        current += self.unlexer.HexDigit()
        current += self.unlexer.HexDigit()
        current += self.unlexer.HexDigit()
        current += self.unlexer.HexDigit()
        return current
    UniCharacterLiteral.min_depth = 1

    @depthcontrol
    def EscapedIdentifier(self):
        current = self.create_node(UnlexerRule(name='EscapedIdentifier'))
        current += self.create_node(UnlexerRule(src='\\'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_363', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_363', choice)] = self.unlexer.weights.get(('alt_363', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='t'))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='b'))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src='r'))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src='n'))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src='\''))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src='"'))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src='\\'))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src='$'))
        return current
    EscapedIdentifier.min_depth = 0

    @depthcontrol
    def Letter(self):
        current = self.create_node(UnlexerRule(name='Letter'))
        choice = self.choice([0 if [1, 1, 1, 1, 1, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_380', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_380', choice)] = self.unlexer.weights.get(('alt_380', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.UNICODE_CLASS_LL()
        elif choice == 1:
            current += self.unlexer.UNICODE_CLASS_LM()
        elif choice == 2:
            current += self.unlexer.UNICODE_CLASS_LO()
        elif choice == 3:
            current += self.unlexer.UNICODE_CLASS_LT()
        elif choice == 4:
            current += self.unlexer.UNICODE_CLASS_LU()
        elif choice == 5:
            current += self.unlexer.UNICODE_CLASS_NL()
        return current
    Letter.min_depth = 1

    @depthcontrol
    def Inside_RPAREN(self):
        current = self.create_node(UnlexerRule(name='Inside_RPAREN'))
        current += self.create_node(UnlexerRule(src=')'))
        return current
    Inside_RPAREN.min_depth = 0

    @depthcontrol
    def Inside_RSQUARE(self):
        current = self.create_node(UnlexerRule(name='Inside_RSQUARE'))
        current += self.create_node(UnlexerRule(src=']'))
        return current
    Inside_RSQUARE.min_depth = 0

    @depthcontrol
    def Inside_LPAREN(self):
        current = self.create_node(UnlexerRule(name='Inside_LPAREN'))
        current += self.unlexer.LPAREN()
        return current
    Inside_LPAREN.min_depth = 1

    @depthcontrol
    def Inside_LSQUARE(self):
        current = self.create_node(UnlexerRule(name='Inside_LSQUARE'))
        current += self.unlexer.LSQUARE()
        return current
    Inside_LSQUARE.min_depth = 1

    @depthcontrol
    def Inside_LCURL(self):
        current = self.create_node(UnlexerRule(name='Inside_LCURL'))
        current += self.unlexer.LCURL()
        return current
    Inside_LCURL.min_depth = 1

    @depthcontrol
    def Inside_RCURL(self):
        current = self.create_node(UnlexerRule(name='Inside_RCURL'))
        current += self.unlexer.RCURL()
        return current
    Inside_RCURL.min_depth = 1

    @depthcontrol
    def Inside_DOT(self):
        current = self.create_node(UnlexerRule(name='Inside_DOT'))
        current += self.unlexer.DOT()
        return current
    Inside_DOT.min_depth = 1

    @depthcontrol
    def Inside_COMMA(self):
        current = self.create_node(UnlexerRule(name='Inside_COMMA'))
        current += self.unlexer.COMMA()
        return current
    Inside_COMMA.min_depth = 1

    @depthcontrol
    def Inside_MULT(self):
        current = self.create_node(UnlexerRule(name='Inside_MULT'))
        current += self.unlexer.MULT()
        return current
    Inside_MULT.min_depth = 1

    @depthcontrol
    def Inside_MOD(self):
        current = self.create_node(UnlexerRule(name='Inside_MOD'))
        current += self.unlexer.MOD()
        return current
    Inside_MOD.min_depth = 1

    @depthcontrol
    def Inside_DIV(self):
        current = self.create_node(UnlexerRule(name='Inside_DIV'))
        current += self.unlexer.DIV()
        return current
    Inside_DIV.min_depth = 1

    @depthcontrol
    def Inside_ADD(self):
        current = self.create_node(UnlexerRule(name='Inside_ADD'))
        current += self.unlexer.ADD()
        return current
    Inside_ADD.min_depth = 1

    @depthcontrol
    def Inside_SUB(self):
        current = self.create_node(UnlexerRule(name='Inside_SUB'))
        current += self.unlexer.SUB()
        return current
    Inside_SUB.min_depth = 1

    @depthcontrol
    def Inside_INCR(self):
        current = self.create_node(UnlexerRule(name='Inside_INCR'))
        current += self.unlexer.INCR()
        return current
    Inside_INCR.min_depth = 1

    @depthcontrol
    def Inside_DECR(self):
        current = self.create_node(UnlexerRule(name='Inside_DECR'))
        current += self.unlexer.DECR()
        return current
    Inside_DECR.min_depth = 1

    @depthcontrol
    def Inside_CONJ(self):
        current = self.create_node(UnlexerRule(name='Inside_CONJ'))
        current += self.unlexer.CONJ()
        return current
    Inside_CONJ.min_depth = 1

    @depthcontrol
    def Inside_DISJ(self):
        current = self.create_node(UnlexerRule(name='Inside_DISJ'))
        current += self.unlexer.DISJ()
        return current
    Inside_DISJ.min_depth = 1

    @depthcontrol
    def Inside_EXCL(self):
        current = self.create_node(UnlexerRule(name='Inside_EXCL'))
        current += self.unlexer.EXCL()
        return current
    Inside_EXCL.min_depth = 1

    @depthcontrol
    def Inside_COLON(self):
        current = self.create_node(UnlexerRule(name='Inside_COLON'))
        current += self.unlexer.COLON()
        return current
    Inside_COLON.min_depth = 1

    @depthcontrol
    def Inside_SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='Inside_SEMICOLON'))
        current += self.unlexer.SEMICOLON()
        return current
    Inside_SEMICOLON.min_depth = 1

    @depthcontrol
    def Inside_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_ASSIGNMENT'))
        current += self.unlexer.ASSIGNMENT()
        return current
    Inside_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_ADD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_ADD_ASSIGNMENT'))
        current += self.unlexer.ADD_ASSIGNMENT()
        return current
    Inside_ADD_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_SUB_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_SUB_ASSIGNMENT'))
        current += self.unlexer.SUB_ASSIGNMENT()
        return current
    Inside_SUB_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_MULT_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_MULT_ASSIGNMENT'))
        current += self.unlexer.MULT_ASSIGNMENT()
        return current
    Inside_MULT_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_DIV_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_DIV_ASSIGNMENT'))
        current += self.unlexer.DIV_ASSIGNMENT()
        return current
    Inside_DIV_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_MOD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='Inside_MOD_ASSIGNMENT'))
        current += self.unlexer.MOD_ASSIGNMENT()
        return current
    Inside_MOD_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def Inside_ARROW(self):
        current = self.create_node(UnlexerRule(name='Inside_ARROW'))
        current += self.unlexer.ARROW()
        return current
    Inside_ARROW.min_depth = 1

    @depthcontrol
    def Inside_DOUBLE_ARROW(self):
        current = self.create_node(UnlexerRule(name='Inside_DOUBLE_ARROW'))
        current += self.unlexer.DOUBLE_ARROW()
        return current
    Inside_DOUBLE_ARROW.min_depth = 1

    @depthcontrol
    def Inside_RANGE(self):
        current = self.create_node(UnlexerRule(name='Inside_RANGE'))
        current += self.unlexer.RANGE()
        return current
    Inside_RANGE.min_depth = 1

    @depthcontrol
    def Inside_RESERVED(self):
        current = self.create_node(UnlexerRule(name='Inside_RESERVED'))
        current += self.unlexer.RESERVED()
        return current
    Inside_RESERVED.min_depth = 1

    @depthcontrol
    def Inside_COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='Inside_COLONCOLON'))
        current += self.unlexer.COLONCOLON()
        return current
    Inside_COLONCOLON.min_depth = 1

    @depthcontrol
    def Inside_Q_COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='Inside_Q_COLONCOLON'))
        current += self.unlexer.Q_COLONCOLON()
        return current
    Inside_Q_COLONCOLON.min_depth = 1

    @depthcontrol
    def Inside_DOUBLE_SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='Inside_DOUBLE_SEMICOLON'))
        current += self.unlexer.DOUBLE_SEMICOLON()
        return current
    Inside_DOUBLE_SEMICOLON.min_depth = 1

    @depthcontrol
    def Inside_HASH(self):
        current = self.create_node(UnlexerRule(name='Inside_HASH'))
        current += self.unlexer.HASH()
        return current
    Inside_HASH.min_depth = 1

    @depthcontrol
    def Inside_AT(self):
        current = self.create_node(UnlexerRule(name='Inside_AT'))
        current += self.unlexer.AT()
        return current
    Inside_AT.min_depth = 1

    @depthcontrol
    def Inside_QUEST(self):
        current = self.create_node(UnlexerRule(name='Inside_QUEST'))
        current += self.unlexer.QUEST()
        return current
    Inside_QUEST.min_depth = 1

    @depthcontrol
    def Inside_ELVIS(self):
        current = self.create_node(UnlexerRule(name='Inside_ELVIS'))
        current += self.unlexer.ELVIS()
        return current
    Inside_ELVIS.min_depth = 1

    @depthcontrol
    def Inside_LANGLE(self):
        current = self.create_node(UnlexerRule(name='Inside_LANGLE'))
        current += self.unlexer.LANGLE()
        return current
    Inside_LANGLE.min_depth = 1

    @depthcontrol
    def Inside_RANGLE(self):
        current = self.create_node(UnlexerRule(name='Inside_RANGLE'))
        current += self.unlexer.RANGLE()
        return current
    Inside_RANGLE.min_depth = 1

    @depthcontrol
    def Inside_LE(self):
        current = self.create_node(UnlexerRule(name='Inside_LE'))
        current += self.unlexer.LE()
        return current
    Inside_LE.min_depth = 1

    @depthcontrol
    def Inside_GE(self):
        current = self.create_node(UnlexerRule(name='Inside_GE'))
        current += self.unlexer.GE()
        return current
    Inside_GE.min_depth = 1

    @depthcontrol
    def Inside_EXCL_EQ(self):
        current = self.create_node(UnlexerRule(name='Inside_EXCL_EQ'))
        current += self.unlexer.EXCL_EQ()
        return current
    Inside_EXCL_EQ.min_depth = 1

    @depthcontrol
    def Inside_EXCL_EQEQ(self):
        current = self.create_node(UnlexerRule(name='Inside_EXCL_EQEQ'))
        current += self.unlexer.EXCL_EQEQ()
        return current
    Inside_EXCL_EQEQ.min_depth = 1

    @depthcontrol
    def Inside_NOT_IS(self):
        current = self.create_node(UnlexerRule(name='Inside_NOT_IS'))
        current += self.unlexer.NOT_IS()
        return current
    Inside_NOT_IS.min_depth = 2

    @depthcontrol
    def Inside_NOT_IN(self):
        current = self.create_node(UnlexerRule(name='Inside_NOT_IN'))
        current += self.unlexer.NOT_IN()
        return current
    Inside_NOT_IN.min_depth = 2

    @depthcontrol
    def Inside_AS_SAFE(self):
        current = self.create_node(UnlexerRule(name='Inside_AS_SAFE'))
        current += self.unlexer.AS_SAFE()
        return current
    Inside_AS_SAFE.min_depth = 1

    @depthcontrol
    def Inside_EQEQ(self):
        current = self.create_node(UnlexerRule(name='Inside_EQEQ'))
        current += self.unlexer.EQEQ()
        return current
    Inside_EQEQ.min_depth = 1

    @depthcontrol
    def Inside_EQEQEQ(self):
        current = self.create_node(UnlexerRule(name='Inside_EQEQEQ'))
        current += self.unlexer.EQEQEQ()
        return current
    Inside_EQEQEQ.min_depth = 1

    @depthcontrol
    def Inside_SINGLE_QUOTE(self):
        current = self.create_node(UnlexerRule(name='Inside_SINGLE_QUOTE'))
        current += self.unlexer.SINGLE_QUOTE()
        return current
    Inside_SINGLE_QUOTE.min_depth = 1

    @depthcontrol
    def Inside_QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='Inside_QUOTE_OPEN'))
        current += self.unlexer.QUOTE_OPEN()
        return current
    Inside_QUOTE_OPEN.min_depth = 1

    @depthcontrol
    def Inside_TRIPLE_QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='Inside_TRIPLE_QUOTE_OPEN'))
        current += self.unlexer.TRIPLE_QUOTE_OPEN()
        return current
    Inside_TRIPLE_QUOTE_OPEN.min_depth = 1

    @depthcontrol
    def Inside_VAL(self):
        current = self.create_node(UnlexerRule(name='Inside_VAL'))
        current += self.unlexer.VAL()
        return current
    Inside_VAL.min_depth = 1

    @depthcontrol
    def Inside_VAR(self):
        current = self.create_node(UnlexerRule(name='Inside_VAR'))
        current += self.unlexer.VAR()
        return current
    Inside_VAR.min_depth = 1

    @depthcontrol
    def Inside_OBJECT(self):
        current = self.create_node(UnlexerRule(name='Inside_OBJECT'))
        current += self.unlexer.OBJECT()
        return current
    Inside_OBJECT.min_depth = 1

    @depthcontrol
    def Inside_SUPER(self):
        current = self.create_node(UnlexerRule(name='Inside_SUPER'))
        current += self.unlexer.SUPER()
        return current
    Inside_SUPER.min_depth = 1

    @depthcontrol
    def Inside_IN(self):
        current = self.create_node(UnlexerRule(name='Inside_IN'))
        current += self.unlexer.IN()
        return current
    Inside_IN.min_depth = 1

    @depthcontrol
    def Inside_OUT(self):
        current = self.create_node(UnlexerRule(name='Inside_OUT'))
        current += self.unlexer.OUT()
        return current
    Inside_OUT.min_depth = 1

    @depthcontrol
    def Inside_FIELD(self):
        current = self.create_node(UnlexerRule(name='Inside_FIELD'))
        current += self.unlexer.FIELD()
        return current
    Inside_FIELD.min_depth = 1

    @depthcontrol
    def Inside_FILE(self):
        current = self.create_node(UnlexerRule(name='Inside_FILE'))
        current += self.unlexer.FILE()
        return current
    Inside_FILE.min_depth = 1

    @depthcontrol
    def Inside_PROPERTY(self):
        current = self.create_node(UnlexerRule(name='Inside_PROPERTY'))
        current += self.unlexer.PROPERTY()
        return current
    Inside_PROPERTY.min_depth = 1

    @depthcontrol
    def Inside_GET(self):
        current = self.create_node(UnlexerRule(name='Inside_GET'))
        current += self.unlexer.GET()
        return current
    Inside_GET.min_depth = 1

    @depthcontrol
    def Inside_SET(self):
        current = self.create_node(UnlexerRule(name='Inside_SET'))
        current += self.unlexer.SET()
        return current
    Inside_SET.min_depth = 1

    @depthcontrol
    def Inside_RECEIVER(self):
        current = self.create_node(UnlexerRule(name='Inside_RECEIVER'))
        current += self.unlexer.RECEIVER()
        return current
    Inside_RECEIVER.min_depth = 1

    @depthcontrol
    def Inside_PARAM(self):
        current = self.create_node(UnlexerRule(name='Inside_PARAM'))
        current += self.unlexer.PARAM()
        return current
    Inside_PARAM.min_depth = 1

    @depthcontrol
    def Inside_SETPARAM(self):
        current = self.create_node(UnlexerRule(name='Inside_SETPARAM'))
        current += self.unlexer.SETPARAM()
        return current
    Inside_SETPARAM.min_depth = 1

    @depthcontrol
    def Inside_DELEGATE(self):
        current = self.create_node(UnlexerRule(name='Inside_DELEGATE'))
        current += self.unlexer.DELEGATE()
        return current
    Inside_DELEGATE.min_depth = 1

    @depthcontrol
    def Inside_THROW(self):
        current = self.create_node(UnlexerRule(name='Inside_THROW'))
        current += self.unlexer.THROW()
        return current
    Inside_THROW.min_depth = 1

    @depthcontrol
    def Inside_RETURN(self):
        current = self.create_node(UnlexerRule(name='Inside_RETURN'))
        current += self.unlexer.RETURN()
        return current
    Inside_RETURN.min_depth = 1

    @depthcontrol
    def Inside_CONTINUE(self):
        current = self.create_node(UnlexerRule(name='Inside_CONTINUE'))
        current += self.unlexer.CONTINUE()
        return current
    Inside_CONTINUE.min_depth = 1

    @depthcontrol
    def Inside_BREAK(self):
        current = self.create_node(UnlexerRule(name='Inside_BREAK'))
        current += self.unlexer.BREAK()
        return current
    Inside_BREAK.min_depth = 1

    @depthcontrol
    def Inside_RETURN_AT(self):
        current = self.create_node(UnlexerRule(name='Inside_RETURN_AT'))
        current += self.unlexer.RETURN_AT()
        return current
    Inside_RETURN_AT.min_depth = 2

    @depthcontrol
    def Inside_CONTINUE_AT(self):
        current = self.create_node(UnlexerRule(name='Inside_CONTINUE_AT'))
        current += self.unlexer.CONTINUE_AT()
        return current
    Inside_CONTINUE_AT.min_depth = 2

    @depthcontrol
    def Inside_BREAK_AT(self):
        current = self.create_node(UnlexerRule(name='Inside_BREAK_AT'))
        current += self.unlexer.BREAK_AT()
        return current
    Inside_BREAK_AT.min_depth = 2

    @depthcontrol
    def Inside_IF(self):
        current = self.create_node(UnlexerRule(name='Inside_IF'))
        current += self.unlexer.IF()
        return current
    Inside_IF.min_depth = 1

    @depthcontrol
    def Inside_ELSE(self):
        current = self.create_node(UnlexerRule(name='Inside_ELSE'))
        current += self.unlexer.ELSE()
        return current
    Inside_ELSE.min_depth = 1

    @depthcontrol
    def Inside_WHEN(self):
        current = self.create_node(UnlexerRule(name='Inside_WHEN'))
        current += self.unlexer.WHEN()
        return current
    Inside_WHEN.min_depth = 1

    @depthcontrol
    def Inside_TRY(self):
        current = self.create_node(UnlexerRule(name='Inside_TRY'))
        current += self.unlexer.TRY()
        return current
    Inside_TRY.min_depth = 1

    @depthcontrol
    def Inside_CATCH(self):
        current = self.create_node(UnlexerRule(name='Inside_CATCH'))
        current += self.unlexer.CATCH()
        return current
    Inside_CATCH.min_depth = 1

    @depthcontrol
    def Inside_FINALLY(self):
        current = self.create_node(UnlexerRule(name='Inside_FINALLY'))
        current += self.unlexer.FINALLY()
        return current
    Inside_FINALLY.min_depth = 1

    @depthcontrol
    def Inside_FOR(self):
        current = self.create_node(UnlexerRule(name='Inside_FOR'))
        current += self.unlexer.FOR()
        return current
    Inside_FOR.min_depth = 1

    @depthcontrol
    def Inside_DO(self):
        current = self.create_node(UnlexerRule(name='Inside_DO'))
        current += self.unlexer.DO()
        return current
    Inside_DO.min_depth = 1

    @depthcontrol
    def Inside_WHILE(self):
        current = self.create_node(UnlexerRule(name='Inside_WHILE'))
        current += self.unlexer.WHILE()
        return current
    Inside_WHILE.min_depth = 1

    @depthcontrol
    def Inside_PUBLIC(self):
        current = self.create_node(UnlexerRule(name='Inside_PUBLIC'))
        current += self.unlexer.PUBLIC()
        return current
    Inside_PUBLIC.min_depth = 1

    @depthcontrol
    def Inside_PRIVATE(self):
        current = self.create_node(UnlexerRule(name='Inside_PRIVATE'))
        current += self.unlexer.PRIVATE()
        return current
    Inside_PRIVATE.min_depth = 1

    @depthcontrol
    def Inside_PROTECTED(self):
        current = self.create_node(UnlexerRule(name='Inside_PROTECTED'))
        current += self.unlexer.PROTECTED()
        return current
    Inside_PROTECTED.min_depth = 1

    @depthcontrol
    def Inside_INTERNAL(self):
        current = self.create_node(UnlexerRule(name='Inside_INTERNAL'))
        current += self.unlexer.INTERNAL()
        return current
    Inside_INTERNAL.min_depth = 1

    @depthcontrol
    def Inside_ENUM(self):
        current = self.create_node(UnlexerRule(name='Inside_ENUM'))
        current += self.unlexer.ENUM()
        return current
    Inside_ENUM.min_depth = 1

    @depthcontrol
    def Inside_SEALED(self):
        current = self.create_node(UnlexerRule(name='Inside_SEALED'))
        current += self.unlexer.SEALED()
        return current
    Inside_SEALED.min_depth = 1

    @depthcontrol
    def Inside_ANNOTATION(self):
        current = self.create_node(UnlexerRule(name='Inside_ANNOTATION'))
        current += self.unlexer.ANNOTATION()
        return current
    Inside_ANNOTATION.min_depth = 1

    @depthcontrol
    def Inside_DATA(self):
        current = self.create_node(UnlexerRule(name='Inside_DATA'))
        current += self.unlexer.DATA()
        return current
    Inside_DATA.min_depth = 1

    @depthcontrol
    def Inside_INNER(self):
        current = self.create_node(UnlexerRule(name='Inside_INNER'))
        current += self.unlexer.INNER()
        return current
    Inside_INNER.min_depth = 1

    @depthcontrol
    def Inside_TAILREC(self):
        current = self.create_node(UnlexerRule(name='Inside_TAILREC'))
        current += self.unlexer.TAILREC()
        return current
    Inside_TAILREC.min_depth = 1

    @depthcontrol
    def Inside_OPERATOR(self):
        current = self.create_node(UnlexerRule(name='Inside_OPERATOR'))
        current += self.unlexer.OPERATOR()
        return current
    Inside_OPERATOR.min_depth = 1

    @depthcontrol
    def Inside_INLINE(self):
        current = self.create_node(UnlexerRule(name='Inside_INLINE'))
        current += self.unlexer.INLINE()
        return current
    Inside_INLINE.min_depth = 1

    @depthcontrol
    def Inside_INFIX(self):
        current = self.create_node(UnlexerRule(name='Inside_INFIX'))
        current += self.unlexer.INFIX()
        return current
    Inside_INFIX.min_depth = 1

    @depthcontrol
    def Inside_EXTERNAL(self):
        current = self.create_node(UnlexerRule(name='Inside_EXTERNAL'))
        current += self.unlexer.EXTERNAL()
        return current
    Inside_EXTERNAL.min_depth = 1

    @depthcontrol
    def Inside_SUSPEND(self):
        current = self.create_node(UnlexerRule(name='Inside_SUSPEND'))
        current += self.unlexer.SUSPEND()
        return current
    Inside_SUSPEND.min_depth = 1

    @depthcontrol
    def Inside_OVERRIDE(self):
        current = self.create_node(UnlexerRule(name='Inside_OVERRIDE'))
        current += self.unlexer.OVERRIDE()
        return current
    Inside_OVERRIDE.min_depth = 1

    @depthcontrol
    def Inside_ABSTRACT(self):
        current = self.create_node(UnlexerRule(name='Inside_ABSTRACT'))
        current += self.unlexer.ABSTRACT()
        return current
    Inside_ABSTRACT.min_depth = 1

    @depthcontrol
    def Inside_FINAL(self):
        current = self.create_node(UnlexerRule(name='Inside_FINAL'))
        current += self.unlexer.FINAL()
        return current
    Inside_FINAL.min_depth = 1

    @depthcontrol
    def Inside_OPEN(self):
        current = self.create_node(UnlexerRule(name='Inside_OPEN'))
        current += self.unlexer.OPEN()
        return current
    Inside_OPEN.min_depth = 1

    @depthcontrol
    def Inside_CONST(self):
        current = self.create_node(UnlexerRule(name='Inside_CONST'))
        current += self.unlexer.CONST()
        return current
    Inside_CONST.min_depth = 1

    @depthcontrol
    def Inside_LATEINIT(self):
        current = self.create_node(UnlexerRule(name='Inside_LATEINIT'))
        current += self.unlexer.LATEINIT()
        return current
    Inside_LATEINIT.min_depth = 1

    @depthcontrol
    def Inside_VARARG(self):
        current = self.create_node(UnlexerRule(name='Inside_VARARG'))
        current += self.unlexer.VARARG()
        return current
    Inside_VARARG.min_depth = 1

    @depthcontrol
    def Inside_NOINLINE(self):
        current = self.create_node(UnlexerRule(name='Inside_NOINLINE'))
        current += self.unlexer.NOINLINE()
        return current
    Inside_NOINLINE.min_depth = 1

    @depthcontrol
    def Inside_CROSSINLINE(self):
        current = self.create_node(UnlexerRule(name='Inside_CROSSINLINE'))
        current += self.unlexer.CROSSINLINE()
        return current
    Inside_CROSSINLINE.min_depth = 1

    @depthcontrol
    def Inside_REIFIED(self):
        current = self.create_node(UnlexerRule(name='Inside_REIFIED'))
        current += self.unlexer.REIFIED()
        return current
    Inside_REIFIED.min_depth = 1

    @depthcontrol
    def Inside_BooleanLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_BooleanLiteral'))
        current += self.unlexer.BooleanLiteral()
        return current
    Inside_BooleanLiteral.min_depth = 1

    @depthcontrol
    def Inside_IntegerLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_IntegerLiteral'))
        current += self.unlexer.IntegerLiteral()
        return current
    Inside_IntegerLiteral.min_depth = 1

    @depthcontrol
    def Inside_HexLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_HexLiteral'))
        current += self.unlexer.HexLiteral()
        return current
    Inside_HexLiteral.min_depth = 2

    @depthcontrol
    def Inside_BinLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_BinLiteral'))
        current += self.unlexer.BinLiteral()
        return current
    Inside_BinLiteral.min_depth = 2

    @depthcontrol
    def Inside_CharacterLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_CharacterLiteral'))
        current += self.unlexer.CharacterLiteral()
        return current
    Inside_CharacterLiteral.min_depth = 1

    @depthcontrol
    def Inside_RealLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_RealLiteral'))
        current += self.unlexer.RealLiteral()
        return current
    Inside_RealLiteral.min_depth = 3

    @depthcontrol
    def Inside_NullLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_NullLiteral'))
        current += self.unlexer.NullLiteral()
        return current
    Inside_NullLiteral.min_depth = 1

    @depthcontrol
    def Inside_LongLiteral(self):
        current = self.create_node(UnlexerRule(name='Inside_LongLiteral'))
        current += self.unlexer.LongLiteral()
        return current
    Inside_LongLiteral.min_depth = 2

    @depthcontrol
    def Inside_Identifier(self):
        current = self.create_node(UnlexerRule(name='Inside_Identifier'))
        current += self.unlexer.Identifier()
        return current
    Inside_Identifier.min_depth = 1

    @depthcontrol
    def Inside_LabelReference(self):
        current = self.create_node(UnlexerRule(name='Inside_LabelReference'))
        current += self.unlexer.LabelReference()
        return current
    Inside_LabelReference.min_depth = 2

    @depthcontrol
    def Inside_LabelDefinition(self):
        current = self.create_node(UnlexerRule(name='Inside_LabelDefinition'))
        current += self.unlexer.LabelDefinition()
        return current
    Inside_LabelDefinition.min_depth = 2

    @depthcontrol
    def Inside_Comment(self):
        current = self.create_node(UnlexerRule(name='Inside_Comment'))
        choice = self.choice([0 if [1, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_389', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_389', choice)] = self.unlexer.weights.get(('alt_389', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.LineComment()
        elif choice == 1:
            current += self.unlexer.DelimitedComment()
        return current
    Inside_Comment.min_depth = 1

    @depthcontrol
    def Inside_WS(self):
        current = self.create_node(UnlexerRule(name='Inside_WS'))
        current += self.unlexer.WS()
        return current
    Inside_WS.min_depth = 1

    @depthcontrol
    def Inside_NL(self):
        current = self.create_node(UnlexerRule(name='Inside_NL'))
        current += self.unlexer.NL()
        return current
    Inside_NL.min_depth = 1

    @depthcontrol
    def QUOTE_CLOSE(self):
        current = self.create_node(UnlexerRule(name='QUOTE_CLOSE'))
        current += self.create_node(UnlexerRule(src='"'))
        return current
    QUOTE_CLOSE.min_depth = 0

    @depthcontrol
    def LineStrRef(self):
        current = self.create_node(UnlexerRule(name='LineStrRef'))
        current += self.unlexer.FieldIdentifier()
        return current
    LineStrRef.min_depth = 2

    @depthcontrol
    def LineStrText(self):
        current = self.create_node(UnlexerRule(name='LineStrText'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_393', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_393', choice)] = self.unlexer.weights.get(('alt_393', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += UnlexerRule(src=self.char_from_list(charset_17))

        elif choice == 1:
            current += self.create_node(UnlexerRule(src='$'))
        return current
    LineStrText.min_depth = 0

    @depthcontrol
    def LineStrEscapedChar(self):
        current = self.create_node(UnlexerRule(name='LineStrEscapedChar'))
        choice = self.choice([0 if [0, 2][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_397', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_397', choice)] = self.unlexer.weights.get(('alt_397', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='\\'))
            current += UnlexerRule(src=self.any_char())
        elif choice == 1:
            current += self.unlexer.UniCharacterLiteral()
        return current
    LineStrEscapedChar.min_depth = 0

    @depthcontrol
    def LineStrExprStart(self):
        current = self.create_node(UnlexerRule(name='LineStrExprStart'))
        current += self.create_node(UnlexerRule(src='${'))
        return current
    LineStrExprStart.min_depth = 0

    @depthcontrol
    def TRIPLE_QUOTE_CLOSE(self):
        current = self.create_node(UnlexerRule(name='TRIPLE_QUOTE_CLOSE'))
        if self.unlexer.max_depth >= 1:
            for _ in self.zero_or_one():
                current += self.unlexer.MultiLineStringQuote()

        current += self.create_node(UnlexerRule(src='"""'))
        return current
    TRIPLE_QUOTE_CLOSE.min_depth = 0

    @depthcontrol
    def MultiLineStringQuote(self):
        current = self.create_node(UnlexerRule(name='MultiLineStringQuote'))
        if self.unlexer.max_depth >= 0:
            for _ in self.one_or_more():
                current += self.create_node(UnlexerRule(src='"'))

        return current
    MultiLineStringQuote.min_depth = 0

    @depthcontrol
    def MultiLineStrRef(self):
        current = self.create_node(UnlexerRule(name='MultiLineStrRef'))
        current += self.unlexer.FieldIdentifier()
        return current
    MultiLineStrRef.min_depth = 2

    @depthcontrol
    def MultiLineStrText(self):
        current = self.create_node(UnlexerRule(name='MultiLineStrText'))
        choice = self.choice([0 if [0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_405', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_405', choice)] = self.unlexer.weights.get(('alt_405', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            if self.unlexer.max_depth >= 0:
                for _ in self.one_or_more():
                    current += UnlexerRule(src=self.char_from_list(charset_18))

        elif choice == 1:
            current += self.create_node(UnlexerRule(src='$'))
        return current
    MultiLineStrText.min_depth = 0

    @depthcontrol
    def MultiLineStrEscapedChar(self):
        current = self.create_node(UnlexerRule(name='MultiLineStrEscapedChar'))
        current += self.create_node(UnlexerRule(src='\\'))
        current += UnlexerRule(src=self.any_char())
        return current
    MultiLineStrEscapedChar.min_depth = 0

    @depthcontrol
    def MultiLineStrExprStart(self):
        current = self.create_node(UnlexerRule(name='MultiLineStrExprStart'))
        current += self.create_node(UnlexerRule(src='${'))
        return current
    MultiLineStrExprStart.min_depth = 0

    @depthcontrol
    def MultiLineNL(self):
        current = self.create_node(UnlexerRule(name='MultiLineNL'))
        current += self.unlexer.NL()
        return current
    MultiLineNL.min_depth = 1

    @depthcontrol
    def StrExpr_RCURL(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RCURL'))
        current += self.unlexer.RCURL()
        return current
    StrExpr_RCURL.min_depth = 1

    @depthcontrol
    def StrExpr_LPAREN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LPAREN'))
        current += self.unlexer.LPAREN()
        return current
    StrExpr_LPAREN.min_depth = 1

    @depthcontrol
    def StrExpr_LSQUARE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LSQUARE'))
        current += self.unlexer.LSQUARE()
        return current
    StrExpr_LSQUARE.min_depth = 1

    @depthcontrol
    def StrExpr_RPAREN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RPAREN'))
        current += self.create_node(UnlexerRule(src=')'))
        return current
    StrExpr_RPAREN.min_depth = 0

    @depthcontrol
    def StrExpr_RSQUARE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RSQUARE'))
        current += self.create_node(UnlexerRule(src=']'))
        return current
    StrExpr_RSQUARE.min_depth = 0

    @depthcontrol
    def StrExpr_LCURL(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LCURL'))
        current += self.unlexer.LCURL()
        return current
    StrExpr_LCURL.min_depth = 1

    @depthcontrol
    def StrExpr_DOT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DOT'))
        current += self.unlexer.DOT()
        return current
    StrExpr_DOT.min_depth = 1

    @depthcontrol
    def StrExpr_COMMA(self):
        current = self.create_node(UnlexerRule(name='StrExpr_COMMA'))
        current += self.unlexer.COMMA()
        return current
    StrExpr_COMMA.min_depth = 1

    @depthcontrol
    def StrExpr_MULT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_MULT'))
        current += self.unlexer.MULT()
        return current
    StrExpr_MULT.min_depth = 1

    @depthcontrol
    def StrExpr_MOD(self):
        current = self.create_node(UnlexerRule(name='StrExpr_MOD'))
        current += self.unlexer.MOD()
        return current
    StrExpr_MOD.min_depth = 1

    @depthcontrol
    def StrExpr_DIV(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DIV'))
        current += self.unlexer.DIV()
        return current
    StrExpr_DIV.min_depth = 1

    @depthcontrol
    def StrExpr_ADD(self):
        current = self.create_node(UnlexerRule(name='StrExpr_ADD'))
        current += self.unlexer.ADD()
        return current
    StrExpr_ADD.min_depth = 1

    @depthcontrol
    def StrExpr_SUB(self):
        current = self.create_node(UnlexerRule(name='StrExpr_SUB'))
        current += self.unlexer.SUB()
        return current
    StrExpr_SUB.min_depth = 1

    @depthcontrol
    def StrExpr_INCR(self):
        current = self.create_node(UnlexerRule(name='StrExpr_INCR'))
        current += self.unlexer.INCR()
        return current
    StrExpr_INCR.min_depth = 1

    @depthcontrol
    def StrExpr_DECR(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DECR'))
        current += self.unlexer.DECR()
        return current
    StrExpr_DECR.min_depth = 1

    @depthcontrol
    def StrExpr_CONJ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_CONJ'))
        current += self.unlexer.CONJ()
        return current
    StrExpr_CONJ.min_depth = 1

    @depthcontrol
    def StrExpr_DISJ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DISJ'))
        current += self.unlexer.DISJ()
        return current
    StrExpr_DISJ.min_depth = 1

    @depthcontrol
    def StrExpr_EXCL(self):
        current = self.create_node(UnlexerRule(name='StrExpr_EXCL'))
        current += self.unlexer.EXCL()
        return current
    StrExpr_EXCL.min_depth = 1

    @depthcontrol
    def StrExpr_COLON(self):
        current = self.create_node(UnlexerRule(name='StrExpr_COLON'))
        current += self.unlexer.COLON()
        return current
    StrExpr_COLON.min_depth = 1

    @depthcontrol
    def StrExpr_SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='StrExpr_SEMICOLON'))
        current += self.unlexer.SEMICOLON()
        return current
    StrExpr_SEMICOLON.min_depth = 1

    @depthcontrol
    def StrExpr_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_ASSIGNMENT'))
        current += self.unlexer.ASSIGNMENT()
        return current
    StrExpr_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_ADD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_ADD_ASSIGNMENT'))
        current += self.unlexer.ADD_ASSIGNMENT()
        return current
    StrExpr_ADD_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_SUB_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_SUB_ASSIGNMENT'))
        current += self.unlexer.SUB_ASSIGNMENT()
        return current
    StrExpr_SUB_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_MULT_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_MULT_ASSIGNMENT'))
        current += self.unlexer.MULT_ASSIGNMENT()
        return current
    StrExpr_MULT_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_DIV_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DIV_ASSIGNMENT'))
        current += self.unlexer.DIV_ASSIGNMENT()
        return current
    StrExpr_DIV_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_MOD_ASSIGNMENT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_MOD_ASSIGNMENT'))
        current += self.unlexer.MOD_ASSIGNMENT()
        return current
    StrExpr_MOD_ASSIGNMENT.min_depth = 1

    @depthcontrol
    def StrExpr_ARROW(self):
        current = self.create_node(UnlexerRule(name='StrExpr_ARROW'))
        current += self.unlexer.ARROW()
        return current
    StrExpr_ARROW.min_depth = 1

    @depthcontrol
    def StrExpr_DOUBLE_ARROW(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DOUBLE_ARROW'))
        current += self.unlexer.DOUBLE_ARROW()
        return current
    StrExpr_DOUBLE_ARROW.min_depth = 1

    @depthcontrol
    def StrExpr_RANGE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RANGE'))
        current += self.unlexer.RANGE()
        return current
    StrExpr_RANGE.min_depth = 1

    @depthcontrol
    def StrExpr_COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='StrExpr_COLONCOLON'))
        current += self.unlexer.COLONCOLON()
        return current
    StrExpr_COLONCOLON.min_depth = 1

    @depthcontrol
    def StrExpr_Q_COLONCOLON(self):
        current = self.create_node(UnlexerRule(name='StrExpr_Q_COLONCOLON'))
        current += self.unlexer.Q_COLONCOLON()
        return current
    StrExpr_Q_COLONCOLON.min_depth = 1

    @depthcontrol
    def StrExpr_DOUBLE_SEMICOLON(self):
        current = self.create_node(UnlexerRule(name='StrExpr_DOUBLE_SEMICOLON'))
        current += self.unlexer.DOUBLE_SEMICOLON()
        return current
    StrExpr_DOUBLE_SEMICOLON.min_depth = 1

    @depthcontrol
    def StrExpr_HASH(self):
        current = self.create_node(UnlexerRule(name='StrExpr_HASH'))
        current += self.unlexer.HASH()
        return current
    StrExpr_HASH.min_depth = 1

    @depthcontrol
    def StrExpr_AT(self):
        current = self.create_node(UnlexerRule(name='StrExpr_AT'))
        current += self.unlexer.AT()
        return current
    StrExpr_AT.min_depth = 1

    @depthcontrol
    def StrExpr_QUEST(self):
        current = self.create_node(UnlexerRule(name='StrExpr_QUEST'))
        current += self.unlexer.QUEST()
        return current
    StrExpr_QUEST.min_depth = 1

    @depthcontrol
    def StrExpr_ELVIS(self):
        current = self.create_node(UnlexerRule(name='StrExpr_ELVIS'))
        current += self.unlexer.ELVIS()
        return current
    StrExpr_ELVIS.min_depth = 1

    @depthcontrol
    def StrExpr_LANGLE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LANGLE'))
        current += self.unlexer.LANGLE()
        return current
    StrExpr_LANGLE.min_depth = 1

    @depthcontrol
    def StrExpr_RANGLE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RANGLE'))
        current += self.unlexer.RANGLE()
        return current
    StrExpr_RANGLE.min_depth = 1

    @depthcontrol
    def StrExpr_LE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LE'))
        current += self.unlexer.LE()
        return current
    StrExpr_LE.min_depth = 1

    @depthcontrol
    def StrExpr_GE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_GE'))
        current += self.unlexer.GE()
        return current
    StrExpr_GE.min_depth = 1

    @depthcontrol
    def StrExpr_EXCL_EQ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_EXCL_EQ'))
        current += self.unlexer.EXCL_EQ()
        return current
    StrExpr_EXCL_EQ.min_depth = 1

    @depthcontrol
    def StrExpr_EXCL_EQEQ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_EXCL_EQEQ'))
        current += self.unlexer.EXCL_EQEQ()
        return current
    StrExpr_EXCL_EQEQ.min_depth = 1

    @depthcontrol
    def StrExpr_AS(self):
        current = self.create_node(UnlexerRule(name='StrExpr_AS'))
        current += self.unlexer.AS()
        return current
    StrExpr_AS.min_depth = 1

    @depthcontrol
    def StrExpr_IS(self):
        current = self.create_node(UnlexerRule(name='StrExpr_IS'))
        current += self.unlexer.IS()
        return current
    StrExpr_IS.min_depth = 1

    @depthcontrol
    def StrExpr_IN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_IN'))
        current += self.unlexer.IN()
        return current
    StrExpr_IN.min_depth = 1

    @depthcontrol
    def StrExpr_NOT_IS(self):
        current = self.create_node(UnlexerRule(name='StrExpr_NOT_IS'))
        current += self.unlexer.NOT_IS()
        return current
    StrExpr_NOT_IS.min_depth = 2

    @depthcontrol
    def StrExpr_NOT_IN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_NOT_IN'))
        current += self.unlexer.NOT_IN()
        return current
    StrExpr_NOT_IN.min_depth = 2

    @depthcontrol
    def StrExpr_AS_SAFE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_AS_SAFE'))
        current += self.unlexer.AS_SAFE()
        return current
    StrExpr_AS_SAFE.min_depth = 1

    @depthcontrol
    def StrExpr_EQEQ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_EQEQ'))
        current += self.unlexer.EQEQ()
        return current
    StrExpr_EQEQ.min_depth = 1

    @depthcontrol
    def StrExpr_EQEQEQ(self):
        current = self.create_node(UnlexerRule(name='StrExpr_EQEQEQ'))
        current += self.unlexer.EQEQEQ()
        return current
    StrExpr_EQEQEQ.min_depth = 1

    @depthcontrol
    def StrExpr_SINGLE_QUOTE(self):
        current = self.create_node(UnlexerRule(name='StrExpr_SINGLE_QUOTE'))
        current += self.unlexer.SINGLE_QUOTE()
        return current
    StrExpr_SINGLE_QUOTE.min_depth = 1

    @depthcontrol
    def StrExpr_QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_QUOTE_OPEN'))
        current += self.unlexer.QUOTE_OPEN()
        return current
    StrExpr_QUOTE_OPEN.min_depth = 1

    @depthcontrol
    def StrExpr_TRIPLE_QUOTE_OPEN(self):
        current = self.create_node(UnlexerRule(name='StrExpr_TRIPLE_QUOTE_OPEN'))
        current += self.unlexer.TRIPLE_QUOTE_OPEN()
        return current
    StrExpr_TRIPLE_QUOTE_OPEN.min_depth = 1

    @depthcontrol
    def StrExpr_BooleanLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_BooleanLiteral'))
        current += self.unlexer.BooleanLiteral()
        return current
    StrExpr_BooleanLiteral.min_depth = 1

    @depthcontrol
    def StrExpr_IntegerLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_IntegerLiteral'))
        current += self.unlexer.IntegerLiteral()
        return current
    StrExpr_IntegerLiteral.min_depth = 1

    @depthcontrol
    def StrExpr_HexLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_HexLiteral'))
        current += self.unlexer.HexLiteral()
        return current
    StrExpr_HexLiteral.min_depth = 2

    @depthcontrol
    def StrExpr_BinLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_BinLiteral'))
        current += self.unlexer.BinLiteral()
        return current
    StrExpr_BinLiteral.min_depth = 2

    @depthcontrol
    def StrExpr_CharacterLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_CharacterLiteral'))
        current += self.unlexer.CharacterLiteral()
        return current
    StrExpr_CharacterLiteral.min_depth = 1

    @depthcontrol
    def StrExpr_RealLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_RealLiteral'))
        current += self.unlexer.RealLiteral()
        return current
    StrExpr_RealLiteral.min_depth = 3

    @depthcontrol
    def StrExpr_NullLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_NullLiteral'))
        current += self.unlexer.NullLiteral()
        return current
    StrExpr_NullLiteral.min_depth = 1

    @depthcontrol
    def StrExpr_LongLiteral(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LongLiteral'))
        current += self.unlexer.LongLiteral()
        return current
    StrExpr_LongLiteral.min_depth = 2

    @depthcontrol
    def StrExpr_Identifier(self):
        current = self.create_node(UnlexerRule(name='StrExpr_Identifier'))
        current += self.unlexer.Identifier()
        return current
    StrExpr_Identifier.min_depth = 1

    @depthcontrol
    def StrExpr_LabelReference(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LabelReference'))
        current += self.unlexer.LabelReference()
        return current
    StrExpr_LabelReference.min_depth = 2

    @depthcontrol
    def StrExpr_LabelDefinition(self):
        current = self.create_node(UnlexerRule(name='StrExpr_LabelDefinition'))
        current += self.unlexer.LabelDefinition()
        return current
    StrExpr_LabelDefinition.min_depth = 2

    @depthcontrol
    def StrExpr_Comment(self):
        current = self.create_node(UnlexerRule(name='StrExpr_Comment'))
        choice = self.choice([0 if [1, 1][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_413', i), 1) for i, w in enumerate([1, 1])])
        self.unlexer.weights[('alt_413', choice)] = self.unlexer.weights.get(('alt_413', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.unlexer.LineComment()
        elif choice == 1:
            current += self.unlexer.DelimitedComment()
        return current
    StrExpr_Comment.min_depth = 1

    @depthcontrol
    def StrExpr_WS(self):
        current = self.create_node(UnlexerRule(name='StrExpr_WS'))
        current += self.unlexer.WS()
        return current
    StrExpr_WS.min_depth = 1

    @depthcontrol
    def StrExpr_NL(self):
        current = self.create_node(UnlexerRule(name='StrExpr_NL'))
        current += self.unlexer.NL()
        return current
    StrExpr_NL.min_depth = 1

    @depthcontrol
    def UNICODE_CLASS_LL(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_LL'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_416', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_416', choice)] = self.unlexer.weights.get(('alt_416', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(97, 122))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='\u00B5'))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(223, 246))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(248, 255))))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src='\u0101'))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src='\u0103'))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src='\u0105'))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src='\u0107'))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src='\u0109'))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src='\u010B'))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src='\u010D'))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src='\u010F'))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src='\u0111'))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src='\u0113'))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src='\u0115'))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src='\u0117'))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src='\u0119'))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src='\u011B'))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src='\u011D'))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src='\u011F'))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src='\u0121'))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src='\u0123'))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src='\u0125'))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src='\u0127'))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src='\u0129'))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src='\u012B'))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src='\u012D'))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src='\u012F'))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src='\u0131'))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src='\u0133'))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src='\u0135'))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src='\u0137'))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src='\u0138'))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src='\u013A'))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src='\u013C'))
        elif choice == 35:
            current += self.create_node(UnlexerRule(src='\u013E'))
        elif choice == 36:
            current += self.create_node(UnlexerRule(src='\u0140'))
        elif choice == 37:
            current += self.create_node(UnlexerRule(src='\u0142'))
        elif choice == 38:
            current += self.create_node(UnlexerRule(src='\u0144'))
        elif choice == 39:
            current += self.create_node(UnlexerRule(src='\u0146'))
        elif choice == 40:
            current += self.create_node(UnlexerRule(src='\u0148'))
        elif choice == 41:
            current += self.create_node(UnlexerRule(src='\u0149'))
        elif choice == 42:
            current += self.create_node(UnlexerRule(src='\u014B'))
        elif choice == 43:
            current += self.create_node(UnlexerRule(src='\u014D'))
        elif choice == 44:
            current += self.create_node(UnlexerRule(src='\u014F'))
        elif choice == 45:
            current += self.create_node(UnlexerRule(src='\u0151'))
        elif choice == 46:
            current += self.create_node(UnlexerRule(src='\u0153'))
        elif choice == 47:
            current += self.create_node(UnlexerRule(src='\u0155'))
        elif choice == 48:
            current += self.create_node(UnlexerRule(src='\u0157'))
        elif choice == 49:
            current += self.create_node(UnlexerRule(src='\u0159'))
        elif choice == 50:
            current += self.create_node(UnlexerRule(src='\u015B'))
        elif choice == 51:
            current += self.create_node(UnlexerRule(src='\u015D'))
        elif choice == 52:
            current += self.create_node(UnlexerRule(src='\u015F'))
        elif choice == 53:
            current += self.create_node(UnlexerRule(src='\u0161'))
        elif choice == 54:
            current += self.create_node(UnlexerRule(src='\u0163'))
        elif choice == 55:
            current += self.create_node(UnlexerRule(src='\u0165'))
        elif choice == 56:
            current += self.create_node(UnlexerRule(src='\u0167'))
        elif choice == 57:
            current += self.create_node(UnlexerRule(src='\u0169'))
        elif choice == 58:
            current += self.create_node(UnlexerRule(src='\u016B'))
        elif choice == 59:
            current += self.create_node(UnlexerRule(src='\u016D'))
        elif choice == 60:
            current += self.create_node(UnlexerRule(src='\u016F'))
        elif choice == 61:
            current += self.create_node(UnlexerRule(src='\u0171'))
        elif choice == 62:
            current += self.create_node(UnlexerRule(src='\u0173'))
        elif choice == 63:
            current += self.create_node(UnlexerRule(src='\u0175'))
        elif choice == 64:
            current += self.create_node(UnlexerRule(src='\u0177'))
        elif choice == 65:
            current += self.create_node(UnlexerRule(src='\u017A'))
        elif choice == 66:
            current += self.create_node(UnlexerRule(src='\u017C'))
        elif choice == 67:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(382, 384))))
        elif choice == 68:
            current += self.create_node(UnlexerRule(src='\u0183'))
        elif choice == 69:
            current += self.create_node(UnlexerRule(src='\u0185'))
        elif choice == 70:
            current += self.create_node(UnlexerRule(src='\u0188'))
        elif choice == 71:
            current += self.create_node(UnlexerRule(src='\u018C'))
        elif choice == 72:
            current += self.create_node(UnlexerRule(src='\u018D'))
        elif choice == 73:
            current += self.create_node(UnlexerRule(src='\u0192'))
        elif choice == 74:
            current += self.create_node(UnlexerRule(src='\u0195'))
        elif choice == 75:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(409, 411))))
        elif choice == 76:
            current += self.create_node(UnlexerRule(src='\u019E'))
        elif choice == 77:
            current += self.create_node(UnlexerRule(src='\u01A1'))
        elif choice == 78:
            current += self.create_node(UnlexerRule(src='\u01A3'))
        elif choice == 79:
            current += self.create_node(UnlexerRule(src='\u01A5'))
        elif choice == 80:
            current += self.create_node(UnlexerRule(src='\u01A8'))
        elif choice == 81:
            current += self.create_node(UnlexerRule(src='\u01AA'))
        elif choice == 82:
            current += self.create_node(UnlexerRule(src='\u01AB'))
        elif choice == 83:
            current += self.create_node(UnlexerRule(src='\u01AD'))
        elif choice == 84:
            current += self.create_node(UnlexerRule(src='\u01B0'))
        elif choice == 85:
            current += self.create_node(UnlexerRule(src='\u01B4'))
        elif choice == 86:
            current += self.create_node(UnlexerRule(src='\u01B6'))
        elif choice == 87:
            current += self.create_node(UnlexerRule(src='\u01B9'))
        elif choice == 88:
            current += self.create_node(UnlexerRule(src='\u01BA'))
        elif choice == 89:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(445, 447))))
        elif choice == 90:
            current += self.create_node(UnlexerRule(src='\u01C6'))
        elif choice == 91:
            current += self.create_node(UnlexerRule(src='\u01C9'))
        elif choice == 92:
            current += self.create_node(UnlexerRule(src='\u01CC'))
        elif choice == 93:
            current += self.create_node(UnlexerRule(src='\u01CE'))
        elif choice == 94:
            current += self.create_node(UnlexerRule(src='\u01D0'))
        elif choice == 95:
            current += self.create_node(UnlexerRule(src='\u01D2'))
        elif choice == 96:
            current += self.create_node(UnlexerRule(src='\u01D4'))
        elif choice == 97:
            current += self.create_node(UnlexerRule(src='\u01D6'))
        elif choice == 98:
            current += self.create_node(UnlexerRule(src='\u01D8'))
        elif choice == 99:
            current += self.create_node(UnlexerRule(src='\u01DA'))
        elif choice == 100:
            current += self.create_node(UnlexerRule(src='\u01DC'))
        elif choice == 101:
            current += self.create_node(UnlexerRule(src='\u01DD'))
        elif choice == 102:
            current += self.create_node(UnlexerRule(src='\u01DF'))
        elif choice == 103:
            current += self.create_node(UnlexerRule(src='\u01E1'))
        elif choice == 104:
            current += self.create_node(UnlexerRule(src='\u01E3'))
        elif choice == 105:
            current += self.create_node(UnlexerRule(src='\u01E5'))
        elif choice == 106:
            current += self.create_node(UnlexerRule(src='\u01E7'))
        elif choice == 107:
            current += self.create_node(UnlexerRule(src='\u01E9'))
        elif choice == 108:
            current += self.create_node(UnlexerRule(src='\u01EB'))
        elif choice == 109:
            current += self.create_node(UnlexerRule(src='\u01ED'))
        elif choice == 110:
            current += self.create_node(UnlexerRule(src='\u01EF'))
        elif choice == 111:
            current += self.create_node(UnlexerRule(src='\u01F0'))
        elif choice == 112:
            current += self.create_node(UnlexerRule(src='\u01F3'))
        elif choice == 113:
            current += self.create_node(UnlexerRule(src='\u01F5'))
        elif choice == 114:
            current += self.create_node(UnlexerRule(src='\u01F9'))
        elif choice == 115:
            current += self.create_node(UnlexerRule(src='\u01FB'))
        elif choice == 116:
            current += self.create_node(UnlexerRule(src='\u01FD'))
        elif choice == 117:
            current += self.create_node(UnlexerRule(src='\u01FF'))
        elif choice == 118:
            current += self.create_node(UnlexerRule(src='\u0201'))
        elif choice == 119:
            current += self.create_node(UnlexerRule(src='\u0203'))
        elif choice == 120:
            current += self.create_node(UnlexerRule(src='\u0205'))
        elif choice == 121:
            current += self.create_node(UnlexerRule(src='\u0207'))
        elif choice == 122:
            current += self.create_node(UnlexerRule(src='\u0209'))
        elif choice == 123:
            current += self.create_node(UnlexerRule(src='\u020B'))
        elif choice == 124:
            current += self.create_node(UnlexerRule(src='\u020D'))
        elif choice == 125:
            current += self.create_node(UnlexerRule(src='\u020F'))
        elif choice == 126:
            current += self.create_node(UnlexerRule(src='\u0211'))
        elif choice == 127:
            current += self.create_node(UnlexerRule(src='\u0213'))
        elif choice == 128:
            current += self.create_node(UnlexerRule(src='\u0215'))
        elif choice == 129:
            current += self.create_node(UnlexerRule(src='\u0217'))
        elif choice == 130:
            current += self.create_node(UnlexerRule(src='\u0219'))
        elif choice == 131:
            current += self.create_node(UnlexerRule(src='\u021B'))
        elif choice == 132:
            current += self.create_node(UnlexerRule(src='\u021D'))
        elif choice == 133:
            current += self.create_node(UnlexerRule(src='\u021F'))
        elif choice == 134:
            current += self.create_node(UnlexerRule(src='\u0221'))
        elif choice == 135:
            current += self.create_node(UnlexerRule(src='\u0223'))
        elif choice == 136:
            current += self.create_node(UnlexerRule(src='\u0225'))
        elif choice == 137:
            current += self.create_node(UnlexerRule(src='\u0227'))
        elif choice == 138:
            current += self.create_node(UnlexerRule(src='\u0229'))
        elif choice == 139:
            current += self.create_node(UnlexerRule(src='\u022B'))
        elif choice == 140:
            current += self.create_node(UnlexerRule(src='\u022D'))
        elif choice == 141:
            current += self.create_node(UnlexerRule(src='\u022F'))
        elif choice == 142:
            current += self.create_node(UnlexerRule(src='\u0231'))
        elif choice == 143:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(563, 569))))
        elif choice == 144:
            current += self.create_node(UnlexerRule(src='\u023C'))
        elif choice == 145:
            current += self.create_node(UnlexerRule(src='\u023F'))
        elif choice == 146:
            current += self.create_node(UnlexerRule(src='\u0240'))
        elif choice == 147:
            current += self.create_node(UnlexerRule(src='\u0242'))
        elif choice == 148:
            current += self.create_node(UnlexerRule(src='\u0247'))
        elif choice == 149:
            current += self.create_node(UnlexerRule(src='\u0249'))
        elif choice == 150:
            current += self.create_node(UnlexerRule(src='\u024B'))
        elif choice == 151:
            current += self.create_node(UnlexerRule(src='\u024D'))
        elif choice == 152:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(591, 659))))
        elif choice == 153:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(661, 687))))
        elif choice == 154:
            current += self.create_node(UnlexerRule(src='\u0371'))
        elif choice == 155:
            current += self.create_node(UnlexerRule(src='\u0373'))
        elif choice == 156:
            current += self.create_node(UnlexerRule(src='\u0377'))
        elif choice == 157:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(891, 893))))
        elif choice == 158:
            current += self.create_node(UnlexerRule(src='\u0390'))
        elif choice == 159:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(940, 974))))
        elif choice == 160:
            current += self.create_node(UnlexerRule(src='\u03D0'))
        elif choice == 161:
            current += self.create_node(UnlexerRule(src='\u03D1'))
        elif choice == 162:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(981, 983))))
        elif choice == 163:
            current += self.create_node(UnlexerRule(src='\u03D9'))
        elif choice == 164:
            current += self.create_node(UnlexerRule(src='\u03DB'))
        elif choice == 165:
            current += self.create_node(UnlexerRule(src='\u03DD'))
        elif choice == 166:
            current += self.create_node(UnlexerRule(src='\u03DF'))
        elif choice == 167:
            current += self.create_node(UnlexerRule(src='\u03E1'))
        elif choice == 168:
            current += self.create_node(UnlexerRule(src='\u03E3'))
        elif choice == 169:
            current += self.create_node(UnlexerRule(src='\u03E5'))
        elif choice == 170:
            current += self.create_node(UnlexerRule(src='\u03E7'))
        elif choice == 171:
            current += self.create_node(UnlexerRule(src='\u03E9'))
        elif choice == 172:
            current += self.create_node(UnlexerRule(src='\u03EB'))
        elif choice == 173:
            current += self.create_node(UnlexerRule(src='\u03ED'))
        elif choice == 174:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1007, 1011))))
        elif choice == 175:
            current += self.create_node(UnlexerRule(src='\u03F5'))
        elif choice == 176:
            current += self.create_node(UnlexerRule(src='\u03F8'))
        elif choice == 177:
            current += self.create_node(UnlexerRule(src='\u03FB'))
        elif choice == 178:
            current += self.create_node(UnlexerRule(src='\u03FC'))
        elif choice == 179:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1072, 1119))))
        elif choice == 180:
            current += self.create_node(UnlexerRule(src='\u0461'))
        elif choice == 181:
            current += self.create_node(UnlexerRule(src='\u0463'))
        elif choice == 182:
            current += self.create_node(UnlexerRule(src='\u0465'))
        elif choice == 183:
            current += self.create_node(UnlexerRule(src='\u0467'))
        elif choice == 184:
            current += self.create_node(UnlexerRule(src='\u0469'))
        elif choice == 185:
            current += self.create_node(UnlexerRule(src='\u046B'))
        elif choice == 186:
            current += self.create_node(UnlexerRule(src='\u046D'))
        elif choice == 187:
            current += self.create_node(UnlexerRule(src='\u046F'))
        elif choice == 188:
            current += self.create_node(UnlexerRule(src='\u0471'))
        elif choice == 189:
            current += self.create_node(UnlexerRule(src='\u0473'))
        elif choice == 190:
            current += self.create_node(UnlexerRule(src='\u0475'))
        elif choice == 191:
            current += self.create_node(UnlexerRule(src='\u0477'))
        elif choice == 192:
            current += self.create_node(UnlexerRule(src='\u0479'))
        elif choice == 193:
            current += self.create_node(UnlexerRule(src='\u047B'))
        elif choice == 194:
            current += self.create_node(UnlexerRule(src='\u047D'))
        elif choice == 195:
            current += self.create_node(UnlexerRule(src='\u047F'))
        elif choice == 196:
            current += self.create_node(UnlexerRule(src='\u0481'))
        elif choice == 197:
            current += self.create_node(UnlexerRule(src='\u048B'))
        elif choice == 198:
            current += self.create_node(UnlexerRule(src='\u048D'))
        elif choice == 199:
            current += self.create_node(UnlexerRule(src='\u048F'))
        elif choice == 200:
            current += self.create_node(UnlexerRule(src='\u0491'))
        elif choice == 201:
            current += self.create_node(UnlexerRule(src='\u0493'))
        elif choice == 202:
            current += self.create_node(UnlexerRule(src='\u0495'))
        elif choice == 203:
            current += self.create_node(UnlexerRule(src='\u0497'))
        elif choice == 204:
            current += self.create_node(UnlexerRule(src='\u0499'))
        elif choice == 205:
            current += self.create_node(UnlexerRule(src='\u049B'))
        elif choice == 206:
            current += self.create_node(UnlexerRule(src='\u049D'))
        elif choice == 207:
            current += self.create_node(UnlexerRule(src='\u049F'))
        elif choice == 208:
            current += self.create_node(UnlexerRule(src='\u04A1'))
        elif choice == 209:
            current += self.create_node(UnlexerRule(src='\u04A3'))
        elif choice == 210:
            current += self.create_node(UnlexerRule(src='\u04A5'))
        elif choice == 211:
            current += self.create_node(UnlexerRule(src='\u04A7'))
        elif choice == 212:
            current += self.create_node(UnlexerRule(src='\u04A9'))
        elif choice == 213:
            current += self.create_node(UnlexerRule(src='\u04AB'))
        elif choice == 214:
            current += self.create_node(UnlexerRule(src='\u04AD'))
        elif choice == 215:
            current += self.create_node(UnlexerRule(src='\u04AF'))
        elif choice == 216:
            current += self.create_node(UnlexerRule(src='\u04B1'))
        elif choice == 217:
            current += self.create_node(UnlexerRule(src='\u04B3'))
        elif choice == 218:
            current += self.create_node(UnlexerRule(src='\u04B5'))
        elif choice == 219:
            current += self.create_node(UnlexerRule(src='\u04B7'))
        elif choice == 220:
            current += self.create_node(UnlexerRule(src='\u04B9'))
        elif choice == 221:
            current += self.create_node(UnlexerRule(src='\u04BB'))
        elif choice == 222:
            current += self.create_node(UnlexerRule(src='\u04BD'))
        elif choice == 223:
            current += self.create_node(UnlexerRule(src='\u04BF'))
        elif choice == 224:
            current += self.create_node(UnlexerRule(src='\u04C2'))
        elif choice == 225:
            current += self.create_node(UnlexerRule(src='\u04C4'))
        elif choice == 226:
            current += self.create_node(UnlexerRule(src='\u04C6'))
        elif choice == 227:
            current += self.create_node(UnlexerRule(src='\u04C8'))
        elif choice == 228:
            current += self.create_node(UnlexerRule(src='\u04CA'))
        elif choice == 229:
            current += self.create_node(UnlexerRule(src='\u04CC'))
        elif choice == 230:
            current += self.create_node(UnlexerRule(src='\u04CE'))
        elif choice == 231:
            current += self.create_node(UnlexerRule(src='\u04CF'))
        elif choice == 232:
            current += self.create_node(UnlexerRule(src='\u04D1'))
        elif choice == 233:
            current += self.create_node(UnlexerRule(src='\u04D3'))
        elif choice == 234:
            current += self.create_node(UnlexerRule(src='\u04D5'))
        elif choice == 235:
            current += self.create_node(UnlexerRule(src='\u04D7'))
        elif choice == 236:
            current += self.create_node(UnlexerRule(src='\u04D9'))
        elif choice == 237:
            current += self.create_node(UnlexerRule(src='\u04DB'))
        elif choice == 238:
            current += self.create_node(UnlexerRule(src='\u04DD'))
        elif choice == 239:
            current += self.create_node(UnlexerRule(src='\u04DF'))
        elif choice == 240:
            current += self.create_node(UnlexerRule(src='\u04E1'))
        elif choice == 241:
            current += self.create_node(UnlexerRule(src='\u04E3'))
        elif choice == 242:
            current += self.create_node(UnlexerRule(src='\u04E5'))
        elif choice == 243:
            current += self.create_node(UnlexerRule(src='\u04E7'))
        elif choice == 244:
            current += self.create_node(UnlexerRule(src='\u04E9'))
        elif choice == 245:
            current += self.create_node(UnlexerRule(src='\u04EB'))
        elif choice == 246:
            current += self.create_node(UnlexerRule(src='\u04ED'))
        elif choice == 247:
            current += self.create_node(UnlexerRule(src='\u04EF'))
        elif choice == 248:
            current += self.create_node(UnlexerRule(src='\u04F1'))
        elif choice == 249:
            current += self.create_node(UnlexerRule(src='\u04F3'))
        elif choice == 250:
            current += self.create_node(UnlexerRule(src='\u04F5'))
        elif choice == 251:
            current += self.create_node(UnlexerRule(src='\u04F7'))
        elif choice == 252:
            current += self.create_node(UnlexerRule(src='\u04F9'))
        elif choice == 253:
            current += self.create_node(UnlexerRule(src='\u04FB'))
        elif choice == 254:
            current += self.create_node(UnlexerRule(src='\u04FD'))
        elif choice == 255:
            current += self.create_node(UnlexerRule(src='\u04FF'))
        elif choice == 256:
            current += self.create_node(UnlexerRule(src='\u0501'))
        elif choice == 257:
            current += self.create_node(UnlexerRule(src='\u0503'))
        elif choice == 258:
            current += self.create_node(UnlexerRule(src='\u0505'))
        elif choice == 259:
            current += self.create_node(UnlexerRule(src='\u0507'))
        elif choice == 260:
            current += self.create_node(UnlexerRule(src='\u0509'))
        elif choice == 261:
            current += self.create_node(UnlexerRule(src='\u050B'))
        elif choice == 262:
            current += self.create_node(UnlexerRule(src='\u050D'))
        elif choice == 263:
            current += self.create_node(UnlexerRule(src='\u050F'))
        elif choice == 264:
            current += self.create_node(UnlexerRule(src='\u0511'))
        elif choice == 265:
            current += self.create_node(UnlexerRule(src='\u0513'))
        elif choice == 266:
            current += self.create_node(UnlexerRule(src='\u0515'))
        elif choice == 267:
            current += self.create_node(UnlexerRule(src='\u0517'))
        elif choice == 268:
            current += self.create_node(UnlexerRule(src='\u0519'))
        elif choice == 269:
            current += self.create_node(UnlexerRule(src='\u051B'))
        elif choice == 270:
            current += self.create_node(UnlexerRule(src='\u051D'))
        elif choice == 271:
            current += self.create_node(UnlexerRule(src='\u051F'))
        elif choice == 272:
            current += self.create_node(UnlexerRule(src='\u0521'))
        elif choice == 273:
            current += self.create_node(UnlexerRule(src='\u0523'))
        elif choice == 274:
            current += self.create_node(UnlexerRule(src='\u0525'))
        elif choice == 275:
            current += self.create_node(UnlexerRule(src='\u0527'))
        elif choice == 276:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1377, 1415))))
        elif choice == 277:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7424, 7467))))
        elif choice == 278:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7531, 7543))))
        elif choice == 279:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7545, 7578))))
        elif choice == 280:
            current += self.create_node(UnlexerRule(src='\u1E01'))
        elif choice == 281:
            current += self.create_node(UnlexerRule(src='\u1E03'))
        elif choice == 282:
            current += self.create_node(UnlexerRule(src='\u1E05'))
        elif choice == 283:
            current += self.create_node(UnlexerRule(src='\u1E07'))
        elif choice == 284:
            current += self.create_node(UnlexerRule(src='\u1E09'))
        elif choice == 285:
            current += self.create_node(UnlexerRule(src='\u1E0B'))
        elif choice == 286:
            current += self.create_node(UnlexerRule(src='\u1E0D'))
        elif choice == 287:
            current += self.create_node(UnlexerRule(src='\u1E0F'))
        elif choice == 288:
            current += self.create_node(UnlexerRule(src='\u1E11'))
        elif choice == 289:
            current += self.create_node(UnlexerRule(src='\u1E13'))
        elif choice == 290:
            current += self.create_node(UnlexerRule(src='\u1E15'))
        elif choice == 291:
            current += self.create_node(UnlexerRule(src='\u1E17'))
        elif choice == 292:
            current += self.create_node(UnlexerRule(src='\u1E19'))
        elif choice == 293:
            current += self.create_node(UnlexerRule(src='\u1E1B'))
        elif choice == 294:
            current += self.create_node(UnlexerRule(src='\u1E1D'))
        elif choice == 295:
            current += self.create_node(UnlexerRule(src='\u1E1F'))
        elif choice == 296:
            current += self.create_node(UnlexerRule(src='\u1E21'))
        elif choice == 297:
            current += self.create_node(UnlexerRule(src='\u1E23'))
        elif choice == 298:
            current += self.create_node(UnlexerRule(src='\u1E25'))
        elif choice == 299:
            current += self.create_node(UnlexerRule(src='\u1E27'))
        elif choice == 300:
            current += self.create_node(UnlexerRule(src='\u1E29'))
        elif choice == 301:
            current += self.create_node(UnlexerRule(src='\u1E2B'))
        elif choice == 302:
            current += self.create_node(UnlexerRule(src='\u1E2D'))
        elif choice == 303:
            current += self.create_node(UnlexerRule(src='\u1E2F'))
        elif choice == 304:
            current += self.create_node(UnlexerRule(src='\u1E31'))
        elif choice == 305:
            current += self.create_node(UnlexerRule(src='\u1E33'))
        elif choice == 306:
            current += self.create_node(UnlexerRule(src='\u1E35'))
        elif choice == 307:
            current += self.create_node(UnlexerRule(src='\u1E37'))
        elif choice == 308:
            current += self.create_node(UnlexerRule(src='\u1E39'))
        elif choice == 309:
            current += self.create_node(UnlexerRule(src='\u1E3B'))
        elif choice == 310:
            current += self.create_node(UnlexerRule(src='\u1E3D'))
        elif choice == 311:
            current += self.create_node(UnlexerRule(src='\u1E3F'))
        elif choice == 312:
            current += self.create_node(UnlexerRule(src='\u1E41'))
        elif choice == 313:
            current += self.create_node(UnlexerRule(src='\u1E43'))
        elif choice == 314:
            current += self.create_node(UnlexerRule(src='\u1E45'))
        elif choice == 315:
            current += self.create_node(UnlexerRule(src='\u1E47'))
        elif choice == 316:
            current += self.create_node(UnlexerRule(src='\u1E49'))
        elif choice == 317:
            current += self.create_node(UnlexerRule(src='\u1E4B'))
        elif choice == 318:
            current += self.create_node(UnlexerRule(src='\u1E4D'))
        elif choice == 319:
            current += self.create_node(UnlexerRule(src='\u1E4F'))
        elif choice == 320:
            current += self.create_node(UnlexerRule(src='\u1E51'))
        elif choice == 321:
            current += self.create_node(UnlexerRule(src='\u1E53'))
        elif choice == 322:
            current += self.create_node(UnlexerRule(src='\u1E55'))
        elif choice == 323:
            current += self.create_node(UnlexerRule(src='\u1E57'))
        elif choice == 324:
            current += self.create_node(UnlexerRule(src='\u1E59'))
        elif choice == 325:
            current += self.create_node(UnlexerRule(src='\u1E5B'))
        elif choice == 326:
            current += self.create_node(UnlexerRule(src='\u1E5D'))
        elif choice == 327:
            current += self.create_node(UnlexerRule(src='\u1E5F'))
        elif choice == 328:
            current += self.create_node(UnlexerRule(src='\u1E61'))
        elif choice == 329:
            current += self.create_node(UnlexerRule(src='\u1E63'))
        elif choice == 330:
            current += self.create_node(UnlexerRule(src='\u1E65'))
        elif choice == 331:
            current += self.create_node(UnlexerRule(src='\u1E67'))
        elif choice == 332:
            current += self.create_node(UnlexerRule(src='\u1E69'))
        elif choice == 333:
            current += self.create_node(UnlexerRule(src='\u1E6B'))
        elif choice == 334:
            current += self.create_node(UnlexerRule(src='\u1E6D'))
        elif choice == 335:
            current += self.create_node(UnlexerRule(src='\u1E6F'))
        elif choice == 336:
            current += self.create_node(UnlexerRule(src='\u1E71'))
        elif choice == 337:
            current += self.create_node(UnlexerRule(src='\u1E73'))
        elif choice == 338:
            current += self.create_node(UnlexerRule(src='\u1E75'))
        elif choice == 339:
            current += self.create_node(UnlexerRule(src='\u1E77'))
        elif choice == 340:
            current += self.create_node(UnlexerRule(src='\u1E79'))
        elif choice == 341:
            current += self.create_node(UnlexerRule(src='\u1E7B'))
        elif choice == 342:
            current += self.create_node(UnlexerRule(src='\u1E7D'))
        elif choice == 343:
            current += self.create_node(UnlexerRule(src='\u1E7F'))
        elif choice == 344:
            current += self.create_node(UnlexerRule(src='\u1E81'))
        elif choice == 345:
            current += self.create_node(UnlexerRule(src='\u1E83'))
        elif choice == 346:
            current += self.create_node(UnlexerRule(src='\u1E85'))
        elif choice == 347:
            current += self.create_node(UnlexerRule(src='\u1E87'))
        elif choice == 348:
            current += self.create_node(UnlexerRule(src='\u1E89'))
        elif choice == 349:
            current += self.create_node(UnlexerRule(src='\u1E8B'))
        elif choice == 350:
            current += self.create_node(UnlexerRule(src='\u1E8D'))
        elif choice == 351:
            current += self.create_node(UnlexerRule(src='\u1E8F'))
        elif choice == 352:
            current += self.create_node(UnlexerRule(src='\u1E91'))
        elif choice == 353:
            current += self.create_node(UnlexerRule(src='\u1E93'))
        elif choice == 354:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7829, 7837))))
        elif choice == 355:
            current += self.create_node(UnlexerRule(src='\u1E9F'))
        elif choice == 356:
            current += self.create_node(UnlexerRule(src='\u1EA1'))
        elif choice == 357:
            current += self.create_node(UnlexerRule(src='\u1EA3'))
        elif choice == 358:
            current += self.create_node(UnlexerRule(src='\u1EA5'))
        elif choice == 359:
            current += self.create_node(UnlexerRule(src='\u1EA7'))
        elif choice == 360:
            current += self.create_node(UnlexerRule(src='\u1EA9'))
        elif choice == 361:
            current += self.create_node(UnlexerRule(src='\u1EAB'))
        elif choice == 362:
            current += self.create_node(UnlexerRule(src='\u1EAD'))
        elif choice == 363:
            current += self.create_node(UnlexerRule(src='\u1EAF'))
        elif choice == 364:
            current += self.create_node(UnlexerRule(src='\u1EB1'))
        elif choice == 365:
            current += self.create_node(UnlexerRule(src='\u1EB3'))
        elif choice == 366:
            current += self.create_node(UnlexerRule(src='\u1EB5'))
        elif choice == 367:
            current += self.create_node(UnlexerRule(src='\u1EB7'))
        elif choice == 368:
            current += self.create_node(UnlexerRule(src='\u1EB9'))
        elif choice == 369:
            current += self.create_node(UnlexerRule(src='\u1EBB'))
        elif choice == 370:
            current += self.create_node(UnlexerRule(src='\u1EBD'))
        elif choice == 371:
            current += self.create_node(UnlexerRule(src='\u1EBF'))
        elif choice == 372:
            current += self.create_node(UnlexerRule(src='\u1EC1'))
        elif choice == 373:
            current += self.create_node(UnlexerRule(src='\u1EC3'))
        elif choice == 374:
            current += self.create_node(UnlexerRule(src='\u1EC5'))
        elif choice == 375:
            current += self.create_node(UnlexerRule(src='\u1EC7'))
        elif choice == 376:
            current += self.create_node(UnlexerRule(src='\u1EC9'))
        elif choice == 377:
            current += self.create_node(UnlexerRule(src='\u1ECB'))
        elif choice == 378:
            current += self.create_node(UnlexerRule(src='\u1ECD'))
        elif choice == 379:
            current += self.create_node(UnlexerRule(src='\u1ECF'))
        elif choice == 380:
            current += self.create_node(UnlexerRule(src='\u1ED1'))
        elif choice == 381:
            current += self.create_node(UnlexerRule(src='\u1ED3'))
        elif choice == 382:
            current += self.create_node(UnlexerRule(src='\u1ED5'))
        elif choice == 383:
            current += self.create_node(UnlexerRule(src='\u1ED7'))
        elif choice == 384:
            current += self.create_node(UnlexerRule(src='\u1ED9'))
        elif choice == 385:
            current += self.create_node(UnlexerRule(src='\u1EDB'))
        elif choice == 386:
            current += self.create_node(UnlexerRule(src='\u1EDD'))
        elif choice == 387:
            current += self.create_node(UnlexerRule(src='\u1EDF'))
        elif choice == 388:
            current += self.create_node(UnlexerRule(src='\u1EE1'))
        elif choice == 389:
            current += self.create_node(UnlexerRule(src='\u1EE3'))
        elif choice == 390:
            current += self.create_node(UnlexerRule(src='\u1EE5'))
        elif choice == 391:
            current += self.create_node(UnlexerRule(src='\u1EE7'))
        elif choice == 392:
            current += self.create_node(UnlexerRule(src='\u1EE9'))
        elif choice == 393:
            current += self.create_node(UnlexerRule(src='\u1EEB'))
        elif choice == 394:
            current += self.create_node(UnlexerRule(src='\u1EED'))
        elif choice == 395:
            current += self.create_node(UnlexerRule(src='\u1EEF'))
        elif choice == 396:
            current += self.create_node(UnlexerRule(src='\u1EF1'))
        elif choice == 397:
            current += self.create_node(UnlexerRule(src='\u1EF3'))
        elif choice == 398:
            current += self.create_node(UnlexerRule(src='\u1EF5'))
        elif choice == 399:
            current += self.create_node(UnlexerRule(src='\u1EF7'))
        elif choice == 400:
            current += self.create_node(UnlexerRule(src='\u1EF9'))
        elif choice == 401:
            current += self.create_node(UnlexerRule(src='\u1EFB'))
        elif choice == 402:
            current += self.create_node(UnlexerRule(src='\u1EFD'))
        elif choice == 403:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7935, 7943))))
        elif choice == 404:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7952, 7957))))
        elif choice == 405:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7968, 7975))))
        elif choice == 406:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7984, 7991))))
        elif choice == 407:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8000, 8005))))
        elif choice == 408:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8016, 8023))))
        elif choice == 409:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8032, 8039))))
        elif choice == 410:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8048, 8061))))
        elif choice == 411:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8064, 8071))))
        elif choice == 412:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8080, 8087))))
        elif choice == 413:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8096, 8103))))
        elif choice == 414:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8112, 8116))))
        elif choice == 415:
            current += self.create_node(UnlexerRule(src='\u1FB6'))
        elif choice == 416:
            current += self.create_node(UnlexerRule(src='\u1FB7'))
        elif choice == 417:
            current += self.create_node(UnlexerRule(src='\u1FBE'))
        elif choice == 418:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8130, 8132))))
        elif choice == 419:
            current += self.create_node(UnlexerRule(src='\u1FC6'))
        elif choice == 420:
            current += self.create_node(UnlexerRule(src='\u1FC7'))
        elif choice == 421:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8144, 8147))))
        elif choice == 422:
            current += self.create_node(UnlexerRule(src='\u1FD6'))
        elif choice == 423:
            current += self.create_node(UnlexerRule(src='\u1FD7'))
        elif choice == 424:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8160, 8167))))
        elif choice == 425:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8178, 8180))))
        elif choice == 426:
            current += self.create_node(UnlexerRule(src='\u1FF6'))
        elif choice == 427:
            current += self.create_node(UnlexerRule(src='\u1FF7'))
        elif choice == 428:
            current += self.create_node(UnlexerRule(src='\u210A'))
        elif choice == 429:
            current += self.create_node(UnlexerRule(src='\u210E'))
        elif choice == 430:
            current += self.create_node(UnlexerRule(src='\u210F'))
        elif choice == 431:
            current += self.create_node(UnlexerRule(src='\u2113'))
        elif choice == 432:
            current += self.create_node(UnlexerRule(src='\u212F'))
        elif choice == 433:
            current += self.create_node(UnlexerRule(src='\u2134'))
        elif choice == 434:
            current += self.create_node(UnlexerRule(src='\u2139'))
        elif choice == 435:
            current += self.create_node(UnlexerRule(src='\u213C'))
        elif choice == 436:
            current += self.create_node(UnlexerRule(src='\u213D'))
        elif choice == 437:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8518, 8521))))
        elif choice == 438:
            current += self.create_node(UnlexerRule(src='\u214E'))
        elif choice == 439:
            current += self.create_node(UnlexerRule(src='\u2184'))
        elif choice == 440:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11312, 11358))))
        elif choice == 441:
            current += self.create_node(UnlexerRule(src='\u2C61'))
        elif choice == 442:
            current += self.create_node(UnlexerRule(src='\u2C65'))
        elif choice == 443:
            current += self.create_node(UnlexerRule(src='\u2C66'))
        elif choice == 444:
            current += self.create_node(UnlexerRule(src='\u2C68'))
        elif choice == 445:
            current += self.create_node(UnlexerRule(src='\u2C6A'))
        elif choice == 446:
            current += self.create_node(UnlexerRule(src='\u2C6C'))
        elif choice == 447:
            current += self.create_node(UnlexerRule(src='\u2C71'))
        elif choice == 448:
            current += self.create_node(UnlexerRule(src='\u2C73'))
        elif choice == 449:
            current += self.create_node(UnlexerRule(src='\u2C74'))
        elif choice == 450:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11382, 11387))))
        elif choice == 451:
            current += self.create_node(UnlexerRule(src='\u2C81'))
        elif choice == 452:
            current += self.create_node(UnlexerRule(src='\u2C83'))
        elif choice == 453:
            current += self.create_node(UnlexerRule(src='\u2C85'))
        elif choice == 454:
            current += self.create_node(UnlexerRule(src='\u2C87'))
        elif choice == 455:
            current += self.create_node(UnlexerRule(src='\u2C89'))
        elif choice == 456:
            current += self.create_node(UnlexerRule(src='\u2C8B'))
        elif choice == 457:
            current += self.create_node(UnlexerRule(src='\u2C8D'))
        elif choice == 458:
            current += self.create_node(UnlexerRule(src='\u2C8F'))
        elif choice == 459:
            current += self.create_node(UnlexerRule(src='\u2C91'))
        elif choice == 460:
            current += self.create_node(UnlexerRule(src='\u2C93'))
        elif choice == 461:
            current += self.create_node(UnlexerRule(src='\u2C95'))
        elif choice == 462:
            current += self.create_node(UnlexerRule(src='\u2C97'))
        elif choice == 463:
            current += self.create_node(UnlexerRule(src='\u2C99'))
        elif choice == 464:
            current += self.create_node(UnlexerRule(src='\u2C9B'))
        elif choice == 465:
            current += self.create_node(UnlexerRule(src='\u2C9D'))
        elif choice == 466:
            current += self.create_node(UnlexerRule(src='\u2C9F'))
        elif choice == 467:
            current += self.create_node(UnlexerRule(src='\u2CA1'))
        elif choice == 468:
            current += self.create_node(UnlexerRule(src='\u2CA3'))
        elif choice == 469:
            current += self.create_node(UnlexerRule(src='\u2CA5'))
        elif choice == 470:
            current += self.create_node(UnlexerRule(src='\u2CA7'))
        elif choice == 471:
            current += self.create_node(UnlexerRule(src='\u2CA9'))
        elif choice == 472:
            current += self.create_node(UnlexerRule(src='\u2CAB'))
        elif choice == 473:
            current += self.create_node(UnlexerRule(src='\u2CAD'))
        elif choice == 474:
            current += self.create_node(UnlexerRule(src='\u2CAF'))
        elif choice == 475:
            current += self.create_node(UnlexerRule(src='\u2CB1'))
        elif choice == 476:
            current += self.create_node(UnlexerRule(src='\u2CB3'))
        elif choice == 477:
            current += self.create_node(UnlexerRule(src='\u2CB5'))
        elif choice == 478:
            current += self.create_node(UnlexerRule(src='\u2CB7'))
        elif choice == 479:
            current += self.create_node(UnlexerRule(src='\u2CB9'))
        elif choice == 480:
            current += self.create_node(UnlexerRule(src='\u2CBB'))
        elif choice == 481:
            current += self.create_node(UnlexerRule(src='\u2CBD'))
        elif choice == 482:
            current += self.create_node(UnlexerRule(src='\u2CBF'))
        elif choice == 483:
            current += self.create_node(UnlexerRule(src='\u2CC1'))
        elif choice == 484:
            current += self.create_node(UnlexerRule(src='\u2CC3'))
        elif choice == 485:
            current += self.create_node(UnlexerRule(src='\u2CC5'))
        elif choice == 486:
            current += self.create_node(UnlexerRule(src='\u2CC7'))
        elif choice == 487:
            current += self.create_node(UnlexerRule(src='\u2CC9'))
        elif choice == 488:
            current += self.create_node(UnlexerRule(src='\u2CCB'))
        elif choice == 489:
            current += self.create_node(UnlexerRule(src='\u2CCD'))
        elif choice == 490:
            current += self.create_node(UnlexerRule(src='\u2CCF'))
        elif choice == 491:
            current += self.create_node(UnlexerRule(src='\u2CD1'))
        elif choice == 492:
            current += self.create_node(UnlexerRule(src='\u2CD3'))
        elif choice == 493:
            current += self.create_node(UnlexerRule(src='\u2CD5'))
        elif choice == 494:
            current += self.create_node(UnlexerRule(src='\u2CD7'))
        elif choice == 495:
            current += self.create_node(UnlexerRule(src='\u2CD9'))
        elif choice == 496:
            current += self.create_node(UnlexerRule(src='\u2CDB'))
        elif choice == 497:
            current += self.create_node(UnlexerRule(src='\u2CDD'))
        elif choice == 498:
            current += self.create_node(UnlexerRule(src='\u2CDF'))
        elif choice == 499:
            current += self.create_node(UnlexerRule(src='\u2CE1'))
        elif choice == 500:
            current += self.create_node(UnlexerRule(src='\u2CE3'))
        elif choice == 501:
            current += self.create_node(UnlexerRule(src='\u2CE4'))
        elif choice == 502:
            current += self.create_node(UnlexerRule(src='\u2CEC'))
        elif choice == 503:
            current += self.create_node(UnlexerRule(src='\u2CEE'))
        elif choice == 504:
            current += self.create_node(UnlexerRule(src='\u2CF3'))
        elif choice == 505:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11520, 11557))))
        elif choice == 506:
            current += self.create_node(UnlexerRule(src='\u2D27'))
        elif choice == 507:
            current += self.create_node(UnlexerRule(src='\u2D2D'))
        elif choice == 508:
            current += self.create_node(UnlexerRule(src='\uA641'))
        elif choice == 509:
            current += self.create_node(UnlexerRule(src='\uA643'))
        elif choice == 510:
            current += self.create_node(UnlexerRule(src='\uA645'))
        elif choice == 511:
            current += self.create_node(UnlexerRule(src='\uA647'))
        elif choice == 512:
            current += self.create_node(UnlexerRule(src='\uA649'))
        elif choice == 513:
            current += self.create_node(UnlexerRule(src='\uA64B'))
        elif choice == 514:
            current += self.create_node(UnlexerRule(src='\uA64D'))
        elif choice == 515:
            current += self.create_node(UnlexerRule(src='\uA64F'))
        elif choice == 516:
            current += self.create_node(UnlexerRule(src='\uA651'))
        elif choice == 517:
            current += self.create_node(UnlexerRule(src='\uA653'))
        elif choice == 518:
            current += self.create_node(UnlexerRule(src='\uA655'))
        elif choice == 519:
            current += self.create_node(UnlexerRule(src='\uA657'))
        elif choice == 520:
            current += self.create_node(UnlexerRule(src='\uA659'))
        elif choice == 521:
            current += self.create_node(UnlexerRule(src='\uA65B'))
        elif choice == 522:
            current += self.create_node(UnlexerRule(src='\uA65D'))
        elif choice == 523:
            current += self.create_node(UnlexerRule(src='\uA65F'))
        elif choice == 524:
            current += self.create_node(UnlexerRule(src='\uA661'))
        elif choice == 525:
            current += self.create_node(UnlexerRule(src='\uA663'))
        elif choice == 526:
            current += self.create_node(UnlexerRule(src='\uA665'))
        elif choice == 527:
            current += self.create_node(UnlexerRule(src='\uA667'))
        elif choice == 528:
            current += self.create_node(UnlexerRule(src='\uA669'))
        elif choice == 529:
            current += self.create_node(UnlexerRule(src='\uA66B'))
        elif choice == 530:
            current += self.create_node(UnlexerRule(src='\uA66D'))
        elif choice == 531:
            current += self.create_node(UnlexerRule(src='\uA681'))
        elif choice == 532:
            current += self.create_node(UnlexerRule(src='\uA683'))
        elif choice == 533:
            current += self.create_node(UnlexerRule(src='\uA685'))
        elif choice == 534:
            current += self.create_node(UnlexerRule(src='\uA687'))
        elif choice == 535:
            current += self.create_node(UnlexerRule(src='\uA689'))
        elif choice == 536:
            current += self.create_node(UnlexerRule(src='\uA68B'))
        elif choice == 537:
            current += self.create_node(UnlexerRule(src='\uA68D'))
        elif choice == 538:
            current += self.create_node(UnlexerRule(src='\uA68F'))
        elif choice == 539:
            current += self.create_node(UnlexerRule(src='\uA691'))
        elif choice == 540:
            current += self.create_node(UnlexerRule(src='\uA693'))
        elif choice == 541:
            current += self.create_node(UnlexerRule(src='\uA695'))
        elif choice == 542:
            current += self.create_node(UnlexerRule(src='\uA697'))
        elif choice == 543:
            current += self.create_node(UnlexerRule(src='\uA723'))
        elif choice == 544:
            current += self.create_node(UnlexerRule(src='\uA725'))
        elif choice == 545:
            current += self.create_node(UnlexerRule(src='\uA727'))
        elif choice == 546:
            current += self.create_node(UnlexerRule(src='\uA729'))
        elif choice == 547:
            current += self.create_node(UnlexerRule(src='\uA72B'))
        elif choice == 548:
            current += self.create_node(UnlexerRule(src='\uA72D'))
        elif choice == 549:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42799, 42801))))
        elif choice == 550:
            current += self.create_node(UnlexerRule(src='\uA733'))
        elif choice == 551:
            current += self.create_node(UnlexerRule(src='\uA735'))
        elif choice == 552:
            current += self.create_node(UnlexerRule(src='\uA737'))
        elif choice == 553:
            current += self.create_node(UnlexerRule(src='\uA739'))
        elif choice == 554:
            current += self.create_node(UnlexerRule(src='\uA73B'))
        elif choice == 555:
            current += self.create_node(UnlexerRule(src='\uA73D'))
        elif choice == 556:
            current += self.create_node(UnlexerRule(src='\uA73F'))
        elif choice == 557:
            current += self.create_node(UnlexerRule(src='\uA741'))
        elif choice == 558:
            current += self.create_node(UnlexerRule(src='\uA743'))
        elif choice == 559:
            current += self.create_node(UnlexerRule(src='\uA745'))
        elif choice == 560:
            current += self.create_node(UnlexerRule(src='\uA747'))
        elif choice == 561:
            current += self.create_node(UnlexerRule(src='\uA749'))
        elif choice == 562:
            current += self.create_node(UnlexerRule(src='\uA74B'))
        elif choice == 563:
            current += self.create_node(UnlexerRule(src='\uA74D'))
        elif choice == 564:
            current += self.create_node(UnlexerRule(src='\uA74F'))
        elif choice == 565:
            current += self.create_node(UnlexerRule(src='\uA751'))
        elif choice == 566:
            current += self.create_node(UnlexerRule(src='\uA753'))
        elif choice == 567:
            current += self.create_node(UnlexerRule(src='\uA755'))
        elif choice == 568:
            current += self.create_node(UnlexerRule(src='\uA757'))
        elif choice == 569:
            current += self.create_node(UnlexerRule(src='\uA759'))
        elif choice == 570:
            current += self.create_node(UnlexerRule(src='\uA75B'))
        elif choice == 571:
            current += self.create_node(UnlexerRule(src='\uA75D'))
        elif choice == 572:
            current += self.create_node(UnlexerRule(src='\uA75F'))
        elif choice == 573:
            current += self.create_node(UnlexerRule(src='\uA761'))
        elif choice == 574:
            current += self.create_node(UnlexerRule(src='\uA763'))
        elif choice == 575:
            current += self.create_node(UnlexerRule(src='\uA765'))
        elif choice == 576:
            current += self.create_node(UnlexerRule(src='\uA767'))
        elif choice == 577:
            current += self.create_node(UnlexerRule(src='\uA769'))
        elif choice == 578:
            current += self.create_node(UnlexerRule(src='\uA76B'))
        elif choice == 579:
            current += self.create_node(UnlexerRule(src='\uA76D'))
        elif choice == 580:
            current += self.create_node(UnlexerRule(src='\uA76F'))
        elif choice == 581:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42865, 42872))))
        elif choice == 582:
            current += self.create_node(UnlexerRule(src='\uA77A'))
        elif choice == 583:
            current += self.create_node(UnlexerRule(src='\uA77C'))
        elif choice == 584:
            current += self.create_node(UnlexerRule(src='\uA77F'))
        elif choice == 585:
            current += self.create_node(UnlexerRule(src='\uA781'))
        elif choice == 586:
            current += self.create_node(UnlexerRule(src='\uA783'))
        elif choice == 587:
            current += self.create_node(UnlexerRule(src='\uA785'))
        elif choice == 588:
            current += self.create_node(UnlexerRule(src='\uA787'))
        elif choice == 589:
            current += self.create_node(UnlexerRule(src='\uA78C'))
        elif choice == 590:
            current += self.create_node(UnlexerRule(src='\uA78E'))
        elif choice == 591:
            current += self.create_node(UnlexerRule(src='\uA791'))
        elif choice == 592:
            current += self.create_node(UnlexerRule(src='\uA793'))
        elif choice == 593:
            current += self.create_node(UnlexerRule(src='\uA7A1'))
        elif choice == 594:
            current += self.create_node(UnlexerRule(src='\uA7A3'))
        elif choice == 595:
            current += self.create_node(UnlexerRule(src='\uA7A5'))
        elif choice == 596:
            current += self.create_node(UnlexerRule(src='\uA7A7'))
        elif choice == 597:
            current += self.create_node(UnlexerRule(src='\uA7A9'))
        elif choice == 598:
            current += self.create_node(UnlexerRule(src='\uA7FA'))
        elif choice == 599:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64256, 64262))))
        elif choice == 600:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64275, 64279))))
        elif choice == 601:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65345, 65370))))
        return current
    UNICODE_CLASS_LL.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_LM(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_LM'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_1577', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_1577', choice)] = self.unlexer.weights.get(('alt_1577', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(688, 705))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(710, 721))))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(736, 740))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src='\u02EC'))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src='\u02EE'))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src='\u0374'))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src='\u037A'))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src='\u0559'))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src='\u0640'))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src='\u06E5'))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src='\u06E6'))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src='\u07F4'))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src='\u07F5'))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src='\u07FA'))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src='\u081A'))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src='\u0824'))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src='\u0828'))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src='\u0971'))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src='\u0E46'))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src='\u0EC6'))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src='\u10FC'))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src='\u17D7'))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src='\u1843'))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src='\u1AA7'))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7288, 7293))))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7468, 7530))))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src='\u1D78'))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7579, 7615))))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src='\u2071'))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src='\u207F'))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8336, 8348))))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src='\u2C7C'))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src='\u2C7D'))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src='\u2D6F'))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src='\u2E2F'))
        elif choice == 35:
            current += self.create_node(UnlexerRule(src='\u3005'))
        elif choice == 36:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12337, 12341))))
        elif choice == 37:
            current += self.create_node(UnlexerRule(src='\u303B'))
        elif choice == 38:
            current += self.create_node(UnlexerRule(src='\u309D'))
        elif choice == 39:
            current += self.create_node(UnlexerRule(src='\u309E'))
        elif choice == 40:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12540, 12542))))
        elif choice == 41:
            current += self.create_node(UnlexerRule(src='\uA015'))
        elif choice == 42:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42232, 42237))))
        elif choice == 43:
            current += self.create_node(UnlexerRule(src='\uA60C'))
        elif choice == 44:
            current += self.create_node(UnlexerRule(src='\uA67F'))
        elif choice == 45:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42775, 42783))))
        elif choice == 46:
            current += self.create_node(UnlexerRule(src='\uA770'))
        elif choice == 47:
            current += self.create_node(UnlexerRule(src='\uA788'))
        elif choice == 48:
            current += self.create_node(UnlexerRule(src='\uA7F8'))
        elif choice == 49:
            current += self.create_node(UnlexerRule(src='\uA7F9'))
        elif choice == 50:
            current += self.create_node(UnlexerRule(src='\uA9CF'))
        elif choice == 51:
            current += self.create_node(UnlexerRule(src='\uAA70'))
        elif choice == 52:
            current += self.create_node(UnlexerRule(src='\uAADD'))
        elif choice == 53:
            current += self.create_node(UnlexerRule(src='\uAAF3'))
        elif choice == 54:
            current += self.create_node(UnlexerRule(src='\uAAF4'))
        elif choice == 55:
            current += self.create_node(UnlexerRule(src='\uFF70'))
        elif choice == 56:
            current += self.create_node(UnlexerRule(src='\uFF9E'))
        elif choice == 57:
            current += self.create_node(UnlexerRule(src='\uFF9F'))
        return current
    UNICODE_CLASS_LM.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_LO(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_LO'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_1683', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_1683', choice)] = self.unlexer.weights.get(('alt_1683', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='\u00AA'))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='\u00BA'))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src='\u01BB'))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(448, 451))))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src='\u0294'))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1488, 1514))))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1520, 1522))))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1568, 1599))))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1601, 1610))))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src='\u066E'))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src='\u066F'))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1649, 1747))))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src='\u06D5'))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src='\u06EE'))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src='\u06EF'))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1786, 1788))))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src='\u06FF'))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src='\u0710'))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1810, 1839))))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1869, 1957))))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src='\u07B1'))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1994, 2026))))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2048, 2069))))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2112, 2136))))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src='\u08A0'))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2210, 2220))))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2308, 2361))))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src='\u093D'))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src='\u0950'))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2392, 2401))))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2418, 2423))))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2425, 2431))))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2437, 2444))))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src='\u098F'))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src='\u0990'))
        elif choice == 35:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2451, 2472))))
        elif choice == 36:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2474, 2480))))
        elif choice == 37:
            current += self.create_node(UnlexerRule(src='\u09B2'))
        elif choice == 38:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2486, 2489))))
        elif choice == 39:
            current += self.create_node(UnlexerRule(src='\u09BD'))
        elif choice == 40:
            current += self.create_node(UnlexerRule(src='\u09CE'))
        elif choice == 41:
            current += self.create_node(UnlexerRule(src='\u09DC'))
        elif choice == 42:
            current += self.create_node(UnlexerRule(src='\u09DD'))
        elif choice == 43:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2527, 2529))))
        elif choice == 44:
            current += self.create_node(UnlexerRule(src='\u09F0'))
        elif choice == 45:
            current += self.create_node(UnlexerRule(src='\u09F1'))
        elif choice == 46:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2565, 2570))))
        elif choice == 47:
            current += self.create_node(UnlexerRule(src='\u0A0F'))
        elif choice == 48:
            current += self.create_node(UnlexerRule(src='\u0A10'))
        elif choice == 49:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2579, 2600))))
        elif choice == 50:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2602, 2608))))
        elif choice == 51:
            current += self.create_node(UnlexerRule(src='\u0A32'))
        elif choice == 52:
            current += self.create_node(UnlexerRule(src='\u0A33'))
        elif choice == 53:
            current += self.create_node(UnlexerRule(src='\u0A35'))
        elif choice == 54:
            current += self.create_node(UnlexerRule(src='\u0A36'))
        elif choice == 55:
            current += self.create_node(UnlexerRule(src='\u0A38'))
        elif choice == 56:
            current += self.create_node(UnlexerRule(src='\u0A39'))
        elif choice == 57:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2649, 2652))))
        elif choice == 58:
            current += self.create_node(UnlexerRule(src='\u0A5E'))
        elif choice == 59:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2674, 2676))))
        elif choice == 60:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2693, 2701))))
        elif choice == 61:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2703, 2705))))
        elif choice == 62:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2707, 2728))))
        elif choice == 63:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2730, 2736))))
        elif choice == 64:
            current += self.create_node(UnlexerRule(src='\u0AB2'))
        elif choice == 65:
            current += self.create_node(UnlexerRule(src='\u0AB3'))
        elif choice == 66:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2741, 2745))))
        elif choice == 67:
            current += self.create_node(UnlexerRule(src='\u0ABD'))
        elif choice == 68:
            current += self.create_node(UnlexerRule(src='\u0AD0'))
        elif choice == 69:
            current += self.create_node(UnlexerRule(src='\u0AE0'))
        elif choice == 70:
            current += self.create_node(UnlexerRule(src='\u0AE1'))
        elif choice == 71:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2821, 2828))))
        elif choice == 72:
            current += self.create_node(UnlexerRule(src='\u0B0F'))
        elif choice == 73:
            current += self.create_node(UnlexerRule(src='\u0B10'))
        elif choice == 74:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2835, 2856))))
        elif choice == 75:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2858, 2864))))
        elif choice == 76:
            current += self.create_node(UnlexerRule(src='\u0B32'))
        elif choice == 77:
            current += self.create_node(UnlexerRule(src='\u0B33'))
        elif choice == 78:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2869, 2873))))
        elif choice == 79:
            current += self.create_node(UnlexerRule(src='\u0B3D'))
        elif choice == 80:
            current += self.create_node(UnlexerRule(src='\u0B5C'))
        elif choice == 81:
            current += self.create_node(UnlexerRule(src='\u0B5D'))
        elif choice == 82:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2911, 2913))))
        elif choice == 83:
            current += self.create_node(UnlexerRule(src='\u0B71'))
        elif choice == 84:
            current += self.create_node(UnlexerRule(src='\u0B83'))
        elif choice == 85:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2949, 2954))))
        elif choice == 86:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2958, 2960))))
        elif choice == 87:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2962, 2965))))
        elif choice == 88:
            current += self.create_node(UnlexerRule(src='\u0B99'))
        elif choice == 89:
            current += self.create_node(UnlexerRule(src='\u0B9A'))
        elif choice == 90:
            current += self.create_node(UnlexerRule(src='\u0B9C'))
        elif choice == 91:
            current += self.create_node(UnlexerRule(src='\u0B9E'))
        elif choice == 92:
            current += self.create_node(UnlexerRule(src='\u0B9F'))
        elif choice == 93:
            current += self.create_node(UnlexerRule(src='\u0BA3'))
        elif choice == 94:
            current += self.create_node(UnlexerRule(src='\u0BA4'))
        elif choice == 95:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2984, 2986))))
        elif choice == 96:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2990, 3001))))
        elif choice == 97:
            current += self.create_node(UnlexerRule(src='\u0BD0'))
        elif choice == 98:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3077, 3084))))
        elif choice == 99:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3086, 3088))))
        elif choice == 100:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3090, 3112))))
        elif choice == 101:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3114, 3123))))
        elif choice == 102:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3125, 3129))))
        elif choice == 103:
            current += self.create_node(UnlexerRule(src='\u0C3D'))
        elif choice == 104:
            current += self.create_node(UnlexerRule(src='\u0C58'))
        elif choice == 105:
            current += self.create_node(UnlexerRule(src='\u0C59'))
        elif choice == 106:
            current += self.create_node(UnlexerRule(src='\u0C60'))
        elif choice == 107:
            current += self.create_node(UnlexerRule(src='\u0C61'))
        elif choice == 108:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3205, 3212))))
        elif choice == 109:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3214, 3216))))
        elif choice == 110:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3218, 3240))))
        elif choice == 111:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3242, 3251))))
        elif choice == 112:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3253, 3257))))
        elif choice == 113:
            current += self.create_node(UnlexerRule(src='\u0CBD'))
        elif choice == 114:
            current += self.create_node(UnlexerRule(src='\u0CDE'))
        elif choice == 115:
            current += self.create_node(UnlexerRule(src='\u0CE0'))
        elif choice == 116:
            current += self.create_node(UnlexerRule(src='\u0CE1'))
        elif choice == 117:
            current += self.create_node(UnlexerRule(src='\u0CF1'))
        elif choice == 118:
            current += self.create_node(UnlexerRule(src='\u0CF2'))
        elif choice == 119:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3333, 3340))))
        elif choice == 120:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3342, 3344))))
        elif choice == 121:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3346, 3386))))
        elif choice == 122:
            current += self.create_node(UnlexerRule(src='\u0D3D'))
        elif choice == 123:
            current += self.create_node(UnlexerRule(src='\u0D4E'))
        elif choice == 124:
            current += self.create_node(UnlexerRule(src='\u0D60'))
        elif choice == 125:
            current += self.create_node(UnlexerRule(src='\u0D61'))
        elif choice == 126:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3450, 3455))))
        elif choice == 127:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3461, 3478))))
        elif choice == 128:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3482, 3505))))
        elif choice == 129:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3507, 3515))))
        elif choice == 130:
            current += self.create_node(UnlexerRule(src='\u0DBD'))
        elif choice == 131:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3520, 3526))))
        elif choice == 132:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3585, 3632))))
        elif choice == 133:
            current += self.create_node(UnlexerRule(src='\u0E32'))
        elif choice == 134:
            current += self.create_node(UnlexerRule(src='\u0E33'))
        elif choice == 135:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3648, 3653))))
        elif choice == 136:
            current += self.create_node(UnlexerRule(src='\u0E81'))
        elif choice == 137:
            current += self.create_node(UnlexerRule(src='\u0E82'))
        elif choice == 138:
            current += self.create_node(UnlexerRule(src='\u0E84'))
        elif choice == 139:
            current += self.create_node(UnlexerRule(src='\u0E87'))
        elif choice == 140:
            current += self.create_node(UnlexerRule(src='\u0E88'))
        elif choice == 141:
            current += self.create_node(UnlexerRule(src='\u0E8A'))
        elif choice == 142:
            current += self.create_node(UnlexerRule(src='\u0E8D'))
        elif choice == 143:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3732, 3735))))
        elif choice == 144:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3737, 3743))))
        elif choice == 145:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3745, 3747))))
        elif choice == 146:
            current += self.create_node(UnlexerRule(src='\u0EA5'))
        elif choice == 147:
            current += self.create_node(UnlexerRule(src='\u0EA7'))
        elif choice == 148:
            current += self.create_node(UnlexerRule(src='\u0EAA'))
        elif choice == 149:
            current += self.create_node(UnlexerRule(src='\u0EAB'))
        elif choice == 150:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3757, 3760))))
        elif choice == 151:
            current += self.create_node(UnlexerRule(src='\u0EB2'))
        elif choice == 152:
            current += self.create_node(UnlexerRule(src='\u0EB3'))
        elif choice == 153:
            current += self.create_node(UnlexerRule(src='\u0EBD'))
        elif choice == 154:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3776, 3780))))
        elif choice == 155:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3804, 3807))))
        elif choice == 156:
            current += self.create_node(UnlexerRule(src='\u0F00'))
        elif choice == 157:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3904, 3911))))
        elif choice == 158:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3913, 3948))))
        elif choice == 159:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3976, 3980))))
        elif choice == 160:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4096, 4138))))
        elif choice == 161:
            current += self.create_node(UnlexerRule(src='\u103F'))
        elif choice == 162:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4176, 4181))))
        elif choice == 163:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4186, 4189))))
        elif choice == 164:
            current += self.create_node(UnlexerRule(src='\u1061'))
        elif choice == 165:
            current += self.create_node(UnlexerRule(src='\u1065'))
        elif choice == 166:
            current += self.create_node(UnlexerRule(src='\u1066'))
        elif choice == 167:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4206, 4208))))
        elif choice == 168:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4213, 4225))))
        elif choice == 169:
            current += self.create_node(UnlexerRule(src='\u108E'))
        elif choice == 170:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4304, 4346))))
        elif choice == 171:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4349, 4680))))
        elif choice == 172:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4682, 4685))))
        elif choice == 173:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4688, 4694))))
        elif choice == 174:
            current += self.create_node(UnlexerRule(src='\u1258'))
        elif choice == 175:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4698, 4701))))
        elif choice == 176:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4704, 4744))))
        elif choice == 177:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4746, 4749))))
        elif choice == 178:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4752, 4784))))
        elif choice == 179:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4786, 4789))))
        elif choice == 180:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4792, 4798))))
        elif choice == 181:
            current += self.create_node(UnlexerRule(src='\u12C0'))
        elif choice == 182:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4802, 4805))))
        elif choice == 183:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4808, 4822))))
        elif choice == 184:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4824, 4880))))
        elif choice == 185:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4882, 4885))))
        elif choice == 186:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4888, 4954))))
        elif choice == 187:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4992, 5007))))
        elif choice == 188:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5024, 5108))))
        elif choice == 189:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5121, 5740))))
        elif choice == 190:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5743, 5759))))
        elif choice == 191:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5761, 5786))))
        elif choice == 192:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5792, 5866))))
        elif choice == 193:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5888, 5900))))
        elif choice == 194:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5902, 5905))))
        elif choice == 195:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5920, 5937))))
        elif choice == 196:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5952, 5969))))
        elif choice == 197:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5984, 5996))))
        elif choice == 198:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5998, 6000))))
        elif choice == 199:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6016, 6067))))
        elif choice == 200:
            current += self.create_node(UnlexerRule(src='\u17DC'))
        elif choice == 201:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6176, 6210))))
        elif choice == 202:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6212, 6263))))
        elif choice == 203:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6272, 6312))))
        elif choice == 204:
            current += self.create_node(UnlexerRule(src='\u18AA'))
        elif choice == 205:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6320, 6389))))
        elif choice == 206:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6400, 6428))))
        elif choice == 207:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6480, 6509))))
        elif choice == 208:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6512, 6516))))
        elif choice == 209:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6528, 6571))))
        elif choice == 210:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6593, 6599))))
        elif choice == 211:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6656, 6678))))
        elif choice == 212:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6688, 6740))))
        elif choice == 213:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6917, 6963))))
        elif choice == 214:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6981, 6987))))
        elif choice == 215:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7043, 7072))))
        elif choice == 216:
            current += self.create_node(UnlexerRule(src='\u1BAE'))
        elif choice == 217:
            current += self.create_node(UnlexerRule(src='\u1BAF'))
        elif choice == 218:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7098, 7141))))
        elif choice == 219:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7168, 7203))))
        elif choice == 220:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7245, 7247))))
        elif choice == 221:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7258, 7287))))
        elif choice == 222:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7401, 7404))))
        elif choice == 223:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7406, 7409))))
        elif choice == 224:
            current += self.create_node(UnlexerRule(src='\u1CF5'))
        elif choice == 225:
            current += self.create_node(UnlexerRule(src='\u1CF6'))
        elif choice == 226:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8501, 8504))))
        elif choice == 227:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11568, 11623))))
        elif choice == 228:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11648, 11670))))
        elif choice == 229:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11680, 11686))))
        elif choice == 230:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11688, 11694))))
        elif choice == 231:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11696, 11702))))
        elif choice == 232:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11704, 11710))))
        elif choice == 233:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11712, 11718))))
        elif choice == 234:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11720, 11726))))
        elif choice == 235:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11728, 11734))))
        elif choice == 236:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11736, 11742))))
        elif choice == 237:
            current += self.create_node(UnlexerRule(src='\u3006'))
        elif choice == 238:
            current += self.create_node(UnlexerRule(src='\u303C'))
        elif choice == 239:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12353, 12438))))
        elif choice == 240:
            current += self.create_node(UnlexerRule(src='\u309F'))
        elif choice == 241:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12449, 12538))))
        elif choice == 242:
            current += self.create_node(UnlexerRule(src='\u30FF'))
        elif choice == 243:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12549, 12589))))
        elif choice == 244:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12593, 12686))))
        elif choice == 245:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12704, 12730))))
        elif choice == 246:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12784, 12799))))
        elif choice == 247:
            current += self.create_node(UnlexerRule(src='\u3400'))
        elif choice == 248:
            current += self.create_node(UnlexerRule(src='\u4DB5'))
        elif choice == 249:
            current += self.create_node(UnlexerRule(src='\u4E00'))
        elif choice == 250:
            current += self.create_node(UnlexerRule(src='\u9FCC'))
        elif choice == 251:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(40960, 40980))))
        elif choice == 252:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(40982, 42124))))
        elif choice == 253:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42192, 42231))))
        elif choice == 254:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42240, 42507))))
        elif choice == 255:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42512, 42527))))
        elif choice == 256:
            current += self.create_node(UnlexerRule(src='\uA62A'))
        elif choice == 257:
            current += self.create_node(UnlexerRule(src='\uA62B'))
        elif choice == 258:
            current += self.create_node(UnlexerRule(src='\uA66E'))
        elif choice == 259:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42656, 42725))))
        elif choice == 260:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43003, 43009))))
        elif choice == 261:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43011, 43013))))
        elif choice == 262:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43015, 43018))))
        elif choice == 263:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43020, 43042))))
        elif choice == 264:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43072, 43123))))
        elif choice == 265:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43138, 43187))))
        elif choice == 266:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43250, 43255))))
        elif choice == 267:
            current += self.create_node(UnlexerRule(src='\uA8FB'))
        elif choice == 268:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43274, 43301))))
        elif choice == 269:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43312, 43334))))
        elif choice == 270:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43360, 43388))))
        elif choice == 271:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43396, 43442))))
        elif choice == 272:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43520, 43560))))
        elif choice == 273:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43584, 43586))))
        elif choice == 274:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43588, 43595))))
        elif choice == 275:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43616, 43631))))
        elif choice == 276:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43633, 43638))))
        elif choice == 277:
            current += self.create_node(UnlexerRule(src='\uAA7A'))
        elif choice == 278:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43648, 43695))))
        elif choice == 279:
            current += self.create_node(UnlexerRule(src='\uAAB1'))
        elif choice == 280:
            current += self.create_node(UnlexerRule(src='\uAAB5'))
        elif choice == 281:
            current += self.create_node(UnlexerRule(src='\uAAB6'))
        elif choice == 282:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43705, 43709))))
        elif choice == 283:
            current += self.create_node(UnlexerRule(src='\uAAC0'))
        elif choice == 284:
            current += self.create_node(UnlexerRule(src='\uAAC2'))
        elif choice == 285:
            current += self.create_node(UnlexerRule(src='\uAADB'))
        elif choice == 286:
            current += self.create_node(UnlexerRule(src='\uAADC'))
        elif choice == 287:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43744, 43754))))
        elif choice == 288:
            current += self.create_node(UnlexerRule(src='\uAAF2'))
        elif choice == 289:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43777, 43782))))
        elif choice == 290:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43785, 43790))))
        elif choice == 291:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43793, 43798))))
        elif choice == 292:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43808, 43814))))
        elif choice == 293:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43816, 43822))))
        elif choice == 294:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43968, 44002))))
        elif choice == 295:
            current += self.create_node(UnlexerRule(src='\uAC00'))
        elif choice == 296:
            current += self.create_node(UnlexerRule(src='\uD7A3'))
        elif choice == 297:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(55216, 55238))))
        elif choice == 298:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(55243, 55291))))
        elif choice == 299:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(63744, 64109))))
        elif choice == 300:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64112, 64217))))
        elif choice == 301:
            current += self.create_node(UnlexerRule(src='\uFB1D'))
        elif choice == 302:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64287, 64296))))
        elif choice == 303:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64298, 64310))))
        elif choice == 304:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64312, 64316))))
        elif choice == 305:
            current += self.create_node(UnlexerRule(src='\uFB3E'))
        elif choice == 306:
            current += self.create_node(UnlexerRule(src='\uFB40'))
        elif choice == 307:
            current += self.create_node(UnlexerRule(src='\uFB41'))
        elif choice == 308:
            current += self.create_node(UnlexerRule(src='\uFB43'))
        elif choice == 309:
            current += self.create_node(UnlexerRule(src='\uFB44'))
        elif choice == 310:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64326, 64433))))
        elif choice == 311:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64467, 64829))))
        elif choice == 312:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64848, 64911))))
        elif choice == 313:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(64914, 64967))))
        elif choice == 314:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65008, 65019))))
        elif choice == 315:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65136, 65140))))
        elif choice == 316:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65142, 65276))))
        elif choice == 317:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65382, 65391))))
        elif choice == 318:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65393, 65437))))
        elif choice == 319:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65440, 65470))))
        elif choice == 320:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65474, 65479))))
        elif choice == 321:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65482, 65487))))
        elif choice == 322:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65490, 65495))))
        elif choice == 323:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65498, 65500))))
        return current
    UNICODE_CLASS_LO.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_LT(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_LT'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_2139', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_2139', choice)] = self.unlexer.weights.get(('alt_2139', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src='\u01C5'))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src='\u01C8'))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src='\u01CB'))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src='\u01F2'))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8072, 8079))))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8088, 8095))))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8104, 8111))))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src='\u1FBC'))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src='\u1FCC'))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src='\u1FFC'))
        return current
    UNICODE_CLASS_LT.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_LU(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_LU'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_2157', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_2157', choice)] = self.unlexer.weights.get(('alt_2157', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65, 90))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(192, 214))))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(216, 222))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src='\u0100'))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src='\u0102'))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src='\u0104'))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src='\u0106'))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src='\u0108'))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src='\u010A'))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src='\u010C'))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src='\u010E'))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src='\u0110'))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src='\u0112'))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src='\u0114'))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src='\u0116'))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src='\u0118'))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src='\u011A'))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src='\u011C'))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src='\u011E'))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src='\u0120'))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src='\u0122'))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src='\u0124'))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src='\u0126'))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src='\u0128'))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src='\u012A'))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src='\u012C'))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src='\u012E'))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src='\u0130'))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src='\u0132'))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src='\u0134'))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src='\u0136'))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src='\u0139'))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src='\u013B'))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src='\u013D'))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src='\u013F'))
        elif choice == 35:
            current += self.create_node(UnlexerRule(src='\u0141'))
        elif choice == 36:
            current += self.create_node(UnlexerRule(src='\u0143'))
        elif choice == 37:
            current += self.create_node(UnlexerRule(src='\u0145'))
        elif choice == 38:
            current += self.create_node(UnlexerRule(src='\u0147'))
        elif choice == 39:
            current += self.create_node(UnlexerRule(src='\u014A'))
        elif choice == 40:
            current += self.create_node(UnlexerRule(src='\u014C'))
        elif choice == 41:
            current += self.create_node(UnlexerRule(src='\u014E'))
        elif choice == 42:
            current += self.create_node(UnlexerRule(src='\u0150'))
        elif choice == 43:
            current += self.create_node(UnlexerRule(src='\u0152'))
        elif choice == 44:
            current += self.create_node(UnlexerRule(src='\u0154'))
        elif choice == 45:
            current += self.create_node(UnlexerRule(src='\u0156'))
        elif choice == 46:
            current += self.create_node(UnlexerRule(src='\u0158'))
        elif choice == 47:
            current += self.create_node(UnlexerRule(src='\u015A'))
        elif choice == 48:
            current += self.create_node(UnlexerRule(src='\u015C'))
        elif choice == 49:
            current += self.create_node(UnlexerRule(src='\u015E'))
        elif choice == 50:
            current += self.create_node(UnlexerRule(src='\u0160'))
        elif choice == 51:
            current += self.create_node(UnlexerRule(src='\u0162'))
        elif choice == 52:
            current += self.create_node(UnlexerRule(src='\u0164'))
        elif choice == 53:
            current += self.create_node(UnlexerRule(src='\u0166'))
        elif choice == 54:
            current += self.create_node(UnlexerRule(src='\u0168'))
        elif choice == 55:
            current += self.create_node(UnlexerRule(src='\u016A'))
        elif choice == 56:
            current += self.create_node(UnlexerRule(src='\u016C'))
        elif choice == 57:
            current += self.create_node(UnlexerRule(src='\u016E'))
        elif choice == 58:
            current += self.create_node(UnlexerRule(src='\u0170'))
        elif choice == 59:
            current += self.create_node(UnlexerRule(src='\u0172'))
        elif choice == 60:
            current += self.create_node(UnlexerRule(src='\u0174'))
        elif choice == 61:
            current += self.create_node(UnlexerRule(src='\u0176'))
        elif choice == 62:
            current += self.create_node(UnlexerRule(src='\u0178'))
        elif choice == 63:
            current += self.create_node(UnlexerRule(src='\u0179'))
        elif choice == 64:
            current += self.create_node(UnlexerRule(src='\u017B'))
        elif choice == 65:
            current += self.create_node(UnlexerRule(src='\u017D'))
        elif choice == 66:
            current += self.create_node(UnlexerRule(src='\u0181'))
        elif choice == 67:
            current += self.create_node(UnlexerRule(src='\u0182'))
        elif choice == 68:
            current += self.create_node(UnlexerRule(src='\u0184'))
        elif choice == 69:
            current += self.create_node(UnlexerRule(src='\u0186'))
        elif choice == 70:
            current += self.create_node(UnlexerRule(src='\u0187'))
        elif choice == 71:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(393, 395))))
        elif choice == 72:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(398, 401))))
        elif choice == 73:
            current += self.create_node(UnlexerRule(src='\u0193'))
        elif choice == 74:
            current += self.create_node(UnlexerRule(src='\u0194'))
        elif choice == 75:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(406, 408))))
        elif choice == 76:
            current += self.create_node(UnlexerRule(src='\u019C'))
        elif choice == 77:
            current += self.create_node(UnlexerRule(src='\u019D'))
        elif choice == 78:
            current += self.create_node(UnlexerRule(src='\u019F'))
        elif choice == 79:
            current += self.create_node(UnlexerRule(src='\u01A0'))
        elif choice == 80:
            current += self.create_node(UnlexerRule(src='\u01A2'))
        elif choice == 81:
            current += self.create_node(UnlexerRule(src='\u01A4'))
        elif choice == 82:
            current += self.create_node(UnlexerRule(src='\u01A6'))
        elif choice == 83:
            current += self.create_node(UnlexerRule(src='\u01A7'))
        elif choice == 84:
            current += self.create_node(UnlexerRule(src='\u01A9'))
        elif choice == 85:
            current += self.create_node(UnlexerRule(src='\u01AC'))
        elif choice == 86:
            current += self.create_node(UnlexerRule(src='\u01AE'))
        elif choice == 87:
            current += self.create_node(UnlexerRule(src='\u01AF'))
        elif choice == 88:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(433, 435))))
        elif choice == 89:
            current += self.create_node(UnlexerRule(src='\u01B5'))
        elif choice == 90:
            current += self.create_node(UnlexerRule(src='\u01B7'))
        elif choice == 91:
            current += self.create_node(UnlexerRule(src='\u01B8'))
        elif choice == 92:
            current += self.create_node(UnlexerRule(src='\u01BC'))
        elif choice == 93:
            current += self.create_node(UnlexerRule(src='\u01C4'))
        elif choice == 94:
            current += self.create_node(UnlexerRule(src='\u01C7'))
        elif choice == 95:
            current += self.create_node(UnlexerRule(src='\u01CA'))
        elif choice == 96:
            current += self.create_node(UnlexerRule(src='\u01CD'))
        elif choice == 97:
            current += self.create_node(UnlexerRule(src='\u01CF'))
        elif choice == 98:
            current += self.create_node(UnlexerRule(src='\u01D1'))
        elif choice == 99:
            current += self.create_node(UnlexerRule(src='\u01D3'))
        elif choice == 100:
            current += self.create_node(UnlexerRule(src='\u01D5'))
        elif choice == 101:
            current += self.create_node(UnlexerRule(src='\u01D7'))
        elif choice == 102:
            current += self.create_node(UnlexerRule(src='\u01D9'))
        elif choice == 103:
            current += self.create_node(UnlexerRule(src='\u01DB'))
        elif choice == 104:
            current += self.create_node(UnlexerRule(src='\u01DE'))
        elif choice == 105:
            current += self.create_node(UnlexerRule(src='\u01E0'))
        elif choice == 106:
            current += self.create_node(UnlexerRule(src='\u01E2'))
        elif choice == 107:
            current += self.create_node(UnlexerRule(src='\u01E4'))
        elif choice == 108:
            current += self.create_node(UnlexerRule(src='\u01E6'))
        elif choice == 109:
            current += self.create_node(UnlexerRule(src='\u01E8'))
        elif choice == 110:
            current += self.create_node(UnlexerRule(src='\u01EA'))
        elif choice == 111:
            current += self.create_node(UnlexerRule(src='\u01EC'))
        elif choice == 112:
            current += self.create_node(UnlexerRule(src='\u01EE'))
        elif choice == 113:
            current += self.create_node(UnlexerRule(src='\u01F1'))
        elif choice == 114:
            current += self.create_node(UnlexerRule(src='\u01F4'))
        elif choice == 115:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(502, 504))))
        elif choice == 116:
            current += self.create_node(UnlexerRule(src='\u01FA'))
        elif choice == 117:
            current += self.create_node(UnlexerRule(src='\u01FC'))
        elif choice == 118:
            current += self.create_node(UnlexerRule(src='\u01FE'))
        elif choice == 119:
            current += self.create_node(UnlexerRule(src='\u0200'))
        elif choice == 120:
            current += self.create_node(UnlexerRule(src='\u0202'))
        elif choice == 121:
            current += self.create_node(UnlexerRule(src='\u0204'))
        elif choice == 122:
            current += self.create_node(UnlexerRule(src='\u0206'))
        elif choice == 123:
            current += self.create_node(UnlexerRule(src='\u0208'))
        elif choice == 124:
            current += self.create_node(UnlexerRule(src='\u020A'))
        elif choice == 125:
            current += self.create_node(UnlexerRule(src='\u020C'))
        elif choice == 126:
            current += self.create_node(UnlexerRule(src='\u020E'))
        elif choice == 127:
            current += self.create_node(UnlexerRule(src='\u0210'))
        elif choice == 128:
            current += self.create_node(UnlexerRule(src='\u0212'))
        elif choice == 129:
            current += self.create_node(UnlexerRule(src='\u0214'))
        elif choice == 130:
            current += self.create_node(UnlexerRule(src='\u0216'))
        elif choice == 131:
            current += self.create_node(UnlexerRule(src='\u0218'))
        elif choice == 132:
            current += self.create_node(UnlexerRule(src='\u021A'))
        elif choice == 133:
            current += self.create_node(UnlexerRule(src='\u021C'))
        elif choice == 134:
            current += self.create_node(UnlexerRule(src='\u021E'))
        elif choice == 135:
            current += self.create_node(UnlexerRule(src='\u0220'))
        elif choice == 136:
            current += self.create_node(UnlexerRule(src='\u0222'))
        elif choice == 137:
            current += self.create_node(UnlexerRule(src='\u0224'))
        elif choice == 138:
            current += self.create_node(UnlexerRule(src='\u0226'))
        elif choice == 139:
            current += self.create_node(UnlexerRule(src='\u0228'))
        elif choice == 140:
            current += self.create_node(UnlexerRule(src='\u022A'))
        elif choice == 141:
            current += self.create_node(UnlexerRule(src='\u022C'))
        elif choice == 142:
            current += self.create_node(UnlexerRule(src='\u022E'))
        elif choice == 143:
            current += self.create_node(UnlexerRule(src='\u0230'))
        elif choice == 144:
            current += self.create_node(UnlexerRule(src='\u0232'))
        elif choice == 145:
            current += self.create_node(UnlexerRule(src='\u023A'))
        elif choice == 146:
            current += self.create_node(UnlexerRule(src='\u023B'))
        elif choice == 147:
            current += self.create_node(UnlexerRule(src='\u023D'))
        elif choice == 148:
            current += self.create_node(UnlexerRule(src='\u023E'))
        elif choice == 149:
            current += self.create_node(UnlexerRule(src='\u0241'))
        elif choice == 150:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(579, 582))))
        elif choice == 151:
            current += self.create_node(UnlexerRule(src='\u0248'))
        elif choice == 152:
            current += self.create_node(UnlexerRule(src='\u024A'))
        elif choice == 153:
            current += self.create_node(UnlexerRule(src='\u024C'))
        elif choice == 154:
            current += self.create_node(UnlexerRule(src='\u024E'))
        elif choice == 155:
            current += self.create_node(UnlexerRule(src='\u0370'))
        elif choice == 156:
            current += self.create_node(UnlexerRule(src='\u0372'))
        elif choice == 157:
            current += self.create_node(UnlexerRule(src='\u0376'))
        elif choice == 158:
            current += self.create_node(UnlexerRule(src='\u0386'))
        elif choice == 159:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(904, 906))))
        elif choice == 160:
            current += self.create_node(UnlexerRule(src='\u038C'))
        elif choice == 161:
            current += self.create_node(UnlexerRule(src='\u038E'))
        elif choice == 162:
            current += self.create_node(UnlexerRule(src='\u038F'))
        elif choice == 163:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(913, 929))))
        elif choice == 164:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(931, 939))))
        elif choice == 165:
            current += self.create_node(UnlexerRule(src='\u03CF'))
        elif choice == 166:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(978, 980))))
        elif choice == 167:
            current += self.create_node(UnlexerRule(src='\u03D8'))
        elif choice == 168:
            current += self.create_node(UnlexerRule(src='\u03DA'))
        elif choice == 169:
            current += self.create_node(UnlexerRule(src='\u03DC'))
        elif choice == 170:
            current += self.create_node(UnlexerRule(src='\u03DE'))
        elif choice == 171:
            current += self.create_node(UnlexerRule(src='\u03E0'))
        elif choice == 172:
            current += self.create_node(UnlexerRule(src='\u03E2'))
        elif choice == 173:
            current += self.create_node(UnlexerRule(src='\u03E4'))
        elif choice == 174:
            current += self.create_node(UnlexerRule(src='\u03E6'))
        elif choice == 175:
            current += self.create_node(UnlexerRule(src='\u03E8'))
        elif choice == 176:
            current += self.create_node(UnlexerRule(src='\u03EA'))
        elif choice == 177:
            current += self.create_node(UnlexerRule(src='\u03EC'))
        elif choice == 178:
            current += self.create_node(UnlexerRule(src='\u03EE'))
        elif choice == 179:
            current += self.create_node(UnlexerRule(src='\u03F4'))
        elif choice == 180:
            current += self.create_node(UnlexerRule(src='\u03F7'))
        elif choice == 181:
            current += self.create_node(UnlexerRule(src='\u03F9'))
        elif choice == 182:
            current += self.create_node(UnlexerRule(src='\u03FA'))
        elif choice == 183:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1021, 1071))))
        elif choice == 184:
            current += self.create_node(UnlexerRule(src='\u0460'))
        elif choice == 185:
            current += self.create_node(UnlexerRule(src='\u0462'))
        elif choice == 186:
            current += self.create_node(UnlexerRule(src='\u0464'))
        elif choice == 187:
            current += self.create_node(UnlexerRule(src='\u0466'))
        elif choice == 188:
            current += self.create_node(UnlexerRule(src='\u0468'))
        elif choice == 189:
            current += self.create_node(UnlexerRule(src='\u046A'))
        elif choice == 190:
            current += self.create_node(UnlexerRule(src='\u046C'))
        elif choice == 191:
            current += self.create_node(UnlexerRule(src='\u046E'))
        elif choice == 192:
            current += self.create_node(UnlexerRule(src='\u0470'))
        elif choice == 193:
            current += self.create_node(UnlexerRule(src='\u0472'))
        elif choice == 194:
            current += self.create_node(UnlexerRule(src='\u0474'))
        elif choice == 195:
            current += self.create_node(UnlexerRule(src='\u0476'))
        elif choice == 196:
            current += self.create_node(UnlexerRule(src='\u0478'))
        elif choice == 197:
            current += self.create_node(UnlexerRule(src='\u047A'))
        elif choice == 198:
            current += self.create_node(UnlexerRule(src='\u047C'))
        elif choice == 199:
            current += self.create_node(UnlexerRule(src='\u047E'))
        elif choice == 200:
            current += self.create_node(UnlexerRule(src='\u0480'))
        elif choice == 201:
            current += self.create_node(UnlexerRule(src='\u048A'))
        elif choice == 202:
            current += self.create_node(UnlexerRule(src='\u048C'))
        elif choice == 203:
            current += self.create_node(UnlexerRule(src='\u048E'))
        elif choice == 204:
            current += self.create_node(UnlexerRule(src='\u0490'))
        elif choice == 205:
            current += self.create_node(UnlexerRule(src='\u0492'))
        elif choice == 206:
            current += self.create_node(UnlexerRule(src='\u0494'))
        elif choice == 207:
            current += self.create_node(UnlexerRule(src='\u0496'))
        elif choice == 208:
            current += self.create_node(UnlexerRule(src='\u0498'))
        elif choice == 209:
            current += self.create_node(UnlexerRule(src='\u049A'))
        elif choice == 210:
            current += self.create_node(UnlexerRule(src='\u049C'))
        elif choice == 211:
            current += self.create_node(UnlexerRule(src='\u049E'))
        elif choice == 212:
            current += self.create_node(UnlexerRule(src='\u04A0'))
        elif choice == 213:
            current += self.create_node(UnlexerRule(src='\u04A2'))
        elif choice == 214:
            current += self.create_node(UnlexerRule(src='\u04A4'))
        elif choice == 215:
            current += self.create_node(UnlexerRule(src='\u04A6'))
        elif choice == 216:
            current += self.create_node(UnlexerRule(src='\u04A8'))
        elif choice == 217:
            current += self.create_node(UnlexerRule(src='\u04AA'))
        elif choice == 218:
            current += self.create_node(UnlexerRule(src='\u04AC'))
        elif choice == 219:
            current += self.create_node(UnlexerRule(src='\u04AE'))
        elif choice == 220:
            current += self.create_node(UnlexerRule(src='\u04B0'))
        elif choice == 221:
            current += self.create_node(UnlexerRule(src='\u04B2'))
        elif choice == 222:
            current += self.create_node(UnlexerRule(src='\u04B4'))
        elif choice == 223:
            current += self.create_node(UnlexerRule(src='\u04B6'))
        elif choice == 224:
            current += self.create_node(UnlexerRule(src='\u04B8'))
        elif choice == 225:
            current += self.create_node(UnlexerRule(src='\u04BA'))
        elif choice == 226:
            current += self.create_node(UnlexerRule(src='\u04BC'))
        elif choice == 227:
            current += self.create_node(UnlexerRule(src='\u04BE'))
        elif choice == 228:
            current += self.create_node(UnlexerRule(src='\u04C0'))
        elif choice == 229:
            current += self.create_node(UnlexerRule(src='\u04C1'))
        elif choice == 230:
            current += self.create_node(UnlexerRule(src='\u04C3'))
        elif choice == 231:
            current += self.create_node(UnlexerRule(src='\u04C5'))
        elif choice == 232:
            current += self.create_node(UnlexerRule(src='\u04C7'))
        elif choice == 233:
            current += self.create_node(UnlexerRule(src='\u04C9'))
        elif choice == 234:
            current += self.create_node(UnlexerRule(src='\u04CB'))
        elif choice == 235:
            current += self.create_node(UnlexerRule(src='\u04CD'))
        elif choice == 236:
            current += self.create_node(UnlexerRule(src='\u04D0'))
        elif choice == 237:
            current += self.create_node(UnlexerRule(src='\u04D2'))
        elif choice == 238:
            current += self.create_node(UnlexerRule(src='\u04D4'))
        elif choice == 239:
            current += self.create_node(UnlexerRule(src='\u04D6'))
        elif choice == 240:
            current += self.create_node(UnlexerRule(src='\u04D8'))
        elif choice == 241:
            current += self.create_node(UnlexerRule(src='\u04DA'))
        elif choice == 242:
            current += self.create_node(UnlexerRule(src='\u04DC'))
        elif choice == 243:
            current += self.create_node(UnlexerRule(src='\u04DE'))
        elif choice == 244:
            current += self.create_node(UnlexerRule(src='\u04E0'))
        elif choice == 245:
            current += self.create_node(UnlexerRule(src='\u04E2'))
        elif choice == 246:
            current += self.create_node(UnlexerRule(src='\u04E4'))
        elif choice == 247:
            current += self.create_node(UnlexerRule(src='\u04E6'))
        elif choice == 248:
            current += self.create_node(UnlexerRule(src='\u04E8'))
        elif choice == 249:
            current += self.create_node(UnlexerRule(src='\u04EA'))
        elif choice == 250:
            current += self.create_node(UnlexerRule(src='\u04EC'))
        elif choice == 251:
            current += self.create_node(UnlexerRule(src='\u04EE'))
        elif choice == 252:
            current += self.create_node(UnlexerRule(src='\u04F0'))
        elif choice == 253:
            current += self.create_node(UnlexerRule(src='\u04F2'))
        elif choice == 254:
            current += self.create_node(UnlexerRule(src='\u04F4'))
        elif choice == 255:
            current += self.create_node(UnlexerRule(src='\u04F6'))
        elif choice == 256:
            current += self.create_node(UnlexerRule(src='\u04F8'))
        elif choice == 257:
            current += self.create_node(UnlexerRule(src='\u04FA'))
        elif choice == 258:
            current += self.create_node(UnlexerRule(src='\u04FC'))
        elif choice == 259:
            current += self.create_node(UnlexerRule(src='\u04FE'))
        elif choice == 260:
            current += self.create_node(UnlexerRule(src='\u0500'))
        elif choice == 261:
            current += self.create_node(UnlexerRule(src='\u0502'))
        elif choice == 262:
            current += self.create_node(UnlexerRule(src='\u0504'))
        elif choice == 263:
            current += self.create_node(UnlexerRule(src='\u0506'))
        elif choice == 264:
            current += self.create_node(UnlexerRule(src='\u0508'))
        elif choice == 265:
            current += self.create_node(UnlexerRule(src='\u050A'))
        elif choice == 266:
            current += self.create_node(UnlexerRule(src='\u050C'))
        elif choice == 267:
            current += self.create_node(UnlexerRule(src='\u050E'))
        elif choice == 268:
            current += self.create_node(UnlexerRule(src='\u0510'))
        elif choice == 269:
            current += self.create_node(UnlexerRule(src='\u0512'))
        elif choice == 270:
            current += self.create_node(UnlexerRule(src='\u0514'))
        elif choice == 271:
            current += self.create_node(UnlexerRule(src='\u0516'))
        elif choice == 272:
            current += self.create_node(UnlexerRule(src='\u0518'))
        elif choice == 273:
            current += self.create_node(UnlexerRule(src='\u051A'))
        elif choice == 274:
            current += self.create_node(UnlexerRule(src='\u051C'))
        elif choice == 275:
            current += self.create_node(UnlexerRule(src='\u051E'))
        elif choice == 276:
            current += self.create_node(UnlexerRule(src='\u0520'))
        elif choice == 277:
            current += self.create_node(UnlexerRule(src='\u0522'))
        elif choice == 278:
            current += self.create_node(UnlexerRule(src='\u0524'))
        elif choice == 279:
            current += self.create_node(UnlexerRule(src='\u0526'))
        elif choice == 280:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1329, 1366))))
        elif choice == 281:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4256, 4293))))
        elif choice == 282:
            current += self.create_node(UnlexerRule(src='\u10C7'))
        elif choice == 283:
            current += self.create_node(UnlexerRule(src='\u10CD'))
        elif choice == 284:
            current += self.create_node(UnlexerRule(src='\u1E00'))
        elif choice == 285:
            current += self.create_node(UnlexerRule(src='\u1E02'))
        elif choice == 286:
            current += self.create_node(UnlexerRule(src='\u1E04'))
        elif choice == 287:
            current += self.create_node(UnlexerRule(src='\u1E06'))
        elif choice == 288:
            current += self.create_node(UnlexerRule(src='\u1E08'))
        elif choice == 289:
            current += self.create_node(UnlexerRule(src='\u1E0A'))
        elif choice == 290:
            current += self.create_node(UnlexerRule(src='\u1E0C'))
        elif choice == 291:
            current += self.create_node(UnlexerRule(src='\u1E0E'))
        elif choice == 292:
            current += self.create_node(UnlexerRule(src='\u1E10'))
        elif choice == 293:
            current += self.create_node(UnlexerRule(src='\u1E12'))
        elif choice == 294:
            current += self.create_node(UnlexerRule(src='\u1E14'))
        elif choice == 295:
            current += self.create_node(UnlexerRule(src='\u1E16'))
        elif choice == 296:
            current += self.create_node(UnlexerRule(src='\u1E18'))
        elif choice == 297:
            current += self.create_node(UnlexerRule(src='\u1E1A'))
        elif choice == 298:
            current += self.create_node(UnlexerRule(src='\u1E1C'))
        elif choice == 299:
            current += self.create_node(UnlexerRule(src='\u1E1E'))
        elif choice == 300:
            current += self.create_node(UnlexerRule(src='\u1E20'))
        elif choice == 301:
            current += self.create_node(UnlexerRule(src='\u1E22'))
        elif choice == 302:
            current += self.create_node(UnlexerRule(src='\u1E24'))
        elif choice == 303:
            current += self.create_node(UnlexerRule(src='\u1E26'))
        elif choice == 304:
            current += self.create_node(UnlexerRule(src='\u1E28'))
        elif choice == 305:
            current += self.create_node(UnlexerRule(src='\u1E2A'))
        elif choice == 306:
            current += self.create_node(UnlexerRule(src='\u1E2C'))
        elif choice == 307:
            current += self.create_node(UnlexerRule(src='\u1E2E'))
        elif choice == 308:
            current += self.create_node(UnlexerRule(src='\u1E30'))
        elif choice == 309:
            current += self.create_node(UnlexerRule(src='\u1E32'))
        elif choice == 310:
            current += self.create_node(UnlexerRule(src='\u1E34'))
        elif choice == 311:
            current += self.create_node(UnlexerRule(src='\u1E36'))
        elif choice == 312:
            current += self.create_node(UnlexerRule(src='\u1E38'))
        elif choice == 313:
            current += self.create_node(UnlexerRule(src='\u1E3A'))
        elif choice == 314:
            current += self.create_node(UnlexerRule(src='\u1E3C'))
        elif choice == 315:
            current += self.create_node(UnlexerRule(src='\u1E3E'))
        elif choice == 316:
            current += self.create_node(UnlexerRule(src='\u1E40'))
        elif choice == 317:
            current += self.create_node(UnlexerRule(src='\u1E42'))
        elif choice == 318:
            current += self.create_node(UnlexerRule(src='\u1E44'))
        elif choice == 319:
            current += self.create_node(UnlexerRule(src='\u1E46'))
        elif choice == 320:
            current += self.create_node(UnlexerRule(src='\u1E48'))
        elif choice == 321:
            current += self.create_node(UnlexerRule(src='\u1E4A'))
        elif choice == 322:
            current += self.create_node(UnlexerRule(src='\u1E4C'))
        elif choice == 323:
            current += self.create_node(UnlexerRule(src='\u1E4E'))
        elif choice == 324:
            current += self.create_node(UnlexerRule(src='\u1E50'))
        elif choice == 325:
            current += self.create_node(UnlexerRule(src='\u1E52'))
        elif choice == 326:
            current += self.create_node(UnlexerRule(src='\u1E54'))
        elif choice == 327:
            current += self.create_node(UnlexerRule(src='\u1E56'))
        elif choice == 328:
            current += self.create_node(UnlexerRule(src='\u1E58'))
        elif choice == 329:
            current += self.create_node(UnlexerRule(src='\u1E5A'))
        elif choice == 330:
            current += self.create_node(UnlexerRule(src='\u1E5C'))
        elif choice == 331:
            current += self.create_node(UnlexerRule(src='\u1E5E'))
        elif choice == 332:
            current += self.create_node(UnlexerRule(src='\u1E60'))
        elif choice == 333:
            current += self.create_node(UnlexerRule(src='\u1E62'))
        elif choice == 334:
            current += self.create_node(UnlexerRule(src='\u1E64'))
        elif choice == 335:
            current += self.create_node(UnlexerRule(src='\u1E66'))
        elif choice == 336:
            current += self.create_node(UnlexerRule(src='\u1E68'))
        elif choice == 337:
            current += self.create_node(UnlexerRule(src='\u1E6A'))
        elif choice == 338:
            current += self.create_node(UnlexerRule(src='\u1E6C'))
        elif choice == 339:
            current += self.create_node(UnlexerRule(src='\u1E6E'))
        elif choice == 340:
            current += self.create_node(UnlexerRule(src='\u1E70'))
        elif choice == 341:
            current += self.create_node(UnlexerRule(src='\u1E72'))
        elif choice == 342:
            current += self.create_node(UnlexerRule(src='\u1E74'))
        elif choice == 343:
            current += self.create_node(UnlexerRule(src='\u1E76'))
        elif choice == 344:
            current += self.create_node(UnlexerRule(src='\u1E78'))
        elif choice == 345:
            current += self.create_node(UnlexerRule(src='\u1E7A'))
        elif choice == 346:
            current += self.create_node(UnlexerRule(src='\u1E7C'))
        elif choice == 347:
            current += self.create_node(UnlexerRule(src='\u1E7E'))
        elif choice == 348:
            current += self.create_node(UnlexerRule(src='\u1E80'))
        elif choice == 349:
            current += self.create_node(UnlexerRule(src='\u1E82'))
        elif choice == 350:
            current += self.create_node(UnlexerRule(src='\u1E84'))
        elif choice == 351:
            current += self.create_node(UnlexerRule(src='\u1E86'))
        elif choice == 352:
            current += self.create_node(UnlexerRule(src='\u1E88'))
        elif choice == 353:
            current += self.create_node(UnlexerRule(src='\u1E8A'))
        elif choice == 354:
            current += self.create_node(UnlexerRule(src='\u1E8C'))
        elif choice == 355:
            current += self.create_node(UnlexerRule(src='\u1E8E'))
        elif choice == 356:
            current += self.create_node(UnlexerRule(src='\u1E90'))
        elif choice == 357:
            current += self.create_node(UnlexerRule(src='\u1E92'))
        elif choice == 358:
            current += self.create_node(UnlexerRule(src='\u1E94'))
        elif choice == 359:
            current += self.create_node(UnlexerRule(src='\u1E9E'))
        elif choice == 360:
            current += self.create_node(UnlexerRule(src='\u1EA0'))
        elif choice == 361:
            current += self.create_node(UnlexerRule(src='\u1EA2'))
        elif choice == 362:
            current += self.create_node(UnlexerRule(src='\u1EA4'))
        elif choice == 363:
            current += self.create_node(UnlexerRule(src='\u1EA6'))
        elif choice == 364:
            current += self.create_node(UnlexerRule(src='\u1EA8'))
        elif choice == 365:
            current += self.create_node(UnlexerRule(src='\u1EAA'))
        elif choice == 366:
            current += self.create_node(UnlexerRule(src='\u1EAC'))
        elif choice == 367:
            current += self.create_node(UnlexerRule(src='\u1EAE'))
        elif choice == 368:
            current += self.create_node(UnlexerRule(src='\u1EB0'))
        elif choice == 369:
            current += self.create_node(UnlexerRule(src='\u1EB2'))
        elif choice == 370:
            current += self.create_node(UnlexerRule(src='\u1EB4'))
        elif choice == 371:
            current += self.create_node(UnlexerRule(src='\u1EB6'))
        elif choice == 372:
            current += self.create_node(UnlexerRule(src='\u1EB8'))
        elif choice == 373:
            current += self.create_node(UnlexerRule(src='\u1EBA'))
        elif choice == 374:
            current += self.create_node(UnlexerRule(src='\u1EBC'))
        elif choice == 375:
            current += self.create_node(UnlexerRule(src='\u1EBE'))
        elif choice == 376:
            current += self.create_node(UnlexerRule(src='\u1EC0'))
        elif choice == 377:
            current += self.create_node(UnlexerRule(src='\u1EC2'))
        elif choice == 378:
            current += self.create_node(UnlexerRule(src='\u1EC4'))
        elif choice == 379:
            current += self.create_node(UnlexerRule(src='\u1EC6'))
        elif choice == 380:
            current += self.create_node(UnlexerRule(src='\u1EC8'))
        elif choice == 381:
            current += self.create_node(UnlexerRule(src='\u1ECA'))
        elif choice == 382:
            current += self.create_node(UnlexerRule(src='\u1ECC'))
        elif choice == 383:
            current += self.create_node(UnlexerRule(src='\u1ECE'))
        elif choice == 384:
            current += self.create_node(UnlexerRule(src='\u1ED0'))
        elif choice == 385:
            current += self.create_node(UnlexerRule(src='\u1ED2'))
        elif choice == 386:
            current += self.create_node(UnlexerRule(src='\u1ED4'))
        elif choice == 387:
            current += self.create_node(UnlexerRule(src='\u1ED6'))
        elif choice == 388:
            current += self.create_node(UnlexerRule(src='\u1ED8'))
        elif choice == 389:
            current += self.create_node(UnlexerRule(src='\u1EDA'))
        elif choice == 390:
            current += self.create_node(UnlexerRule(src='\u1EDC'))
        elif choice == 391:
            current += self.create_node(UnlexerRule(src='\u1EDE'))
        elif choice == 392:
            current += self.create_node(UnlexerRule(src='\u1EE0'))
        elif choice == 393:
            current += self.create_node(UnlexerRule(src='\u1EE2'))
        elif choice == 394:
            current += self.create_node(UnlexerRule(src='\u1EE4'))
        elif choice == 395:
            current += self.create_node(UnlexerRule(src='\u1EE6'))
        elif choice == 396:
            current += self.create_node(UnlexerRule(src='\u1EE8'))
        elif choice == 397:
            current += self.create_node(UnlexerRule(src='\u1EEA'))
        elif choice == 398:
            current += self.create_node(UnlexerRule(src='\u1EEC'))
        elif choice == 399:
            current += self.create_node(UnlexerRule(src='\u1EEE'))
        elif choice == 400:
            current += self.create_node(UnlexerRule(src='\u1EF0'))
        elif choice == 401:
            current += self.create_node(UnlexerRule(src='\u1EF2'))
        elif choice == 402:
            current += self.create_node(UnlexerRule(src='\u1EF4'))
        elif choice == 403:
            current += self.create_node(UnlexerRule(src='\u1EF6'))
        elif choice == 404:
            current += self.create_node(UnlexerRule(src='\u1EF8'))
        elif choice == 405:
            current += self.create_node(UnlexerRule(src='\u1EFA'))
        elif choice == 406:
            current += self.create_node(UnlexerRule(src='\u1EFC'))
        elif choice == 407:
            current += self.create_node(UnlexerRule(src='\u1EFE'))
        elif choice == 408:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7944, 7951))))
        elif choice == 409:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7960, 7965))))
        elif choice == 410:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7976, 7983))))
        elif choice == 411:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7992, 7999))))
        elif choice == 412:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8008, 8013))))
        elif choice == 413:
            current += self.create_node(UnlexerRule(src='\u1F59'))
        elif choice == 414:
            current += self.create_node(UnlexerRule(src='\u1F5B'))
        elif choice == 415:
            current += self.create_node(UnlexerRule(src='\u1F5D'))
        elif choice == 416:
            current += self.create_node(UnlexerRule(src='\u1F5F'))
        elif choice == 417:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8040, 8047))))
        elif choice == 418:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8120, 8123))))
        elif choice == 419:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8136, 8139))))
        elif choice == 420:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8152, 8155))))
        elif choice == 421:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8168, 8172))))
        elif choice == 422:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8184, 8187))))
        elif choice == 423:
            current += self.create_node(UnlexerRule(src='\u2102'))
        elif choice == 424:
            current += self.create_node(UnlexerRule(src='\u2107'))
        elif choice == 425:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8459, 8461))))
        elif choice == 426:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8464, 8466))))
        elif choice == 427:
            current += self.create_node(UnlexerRule(src='\u2115'))
        elif choice == 428:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8473, 8477))))
        elif choice == 429:
            current += self.create_node(UnlexerRule(src='\u2124'))
        elif choice == 430:
            current += self.create_node(UnlexerRule(src='\u2126'))
        elif choice == 431:
            current += self.create_node(UnlexerRule(src='\u2128'))
        elif choice == 432:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8490, 8493))))
        elif choice == 433:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8496, 8499))))
        elif choice == 434:
            current += self.create_node(UnlexerRule(src='\u213E'))
        elif choice == 435:
            current += self.create_node(UnlexerRule(src='\u213F'))
        elif choice == 436:
            current += self.create_node(UnlexerRule(src='\u2145'))
        elif choice == 437:
            current += self.create_node(UnlexerRule(src='\u2183'))
        elif choice == 438:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11264, 11310))))
        elif choice == 439:
            current += self.create_node(UnlexerRule(src='\u2C60'))
        elif choice == 440:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11362, 11364))))
        elif choice == 441:
            current += self.create_node(UnlexerRule(src='\u2C67'))
        elif choice == 442:
            current += self.create_node(UnlexerRule(src='\u2C69'))
        elif choice == 443:
            current += self.create_node(UnlexerRule(src='\u2C6B'))
        elif choice == 444:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11373, 11376))))
        elif choice == 445:
            current += self.create_node(UnlexerRule(src='\u2C72'))
        elif choice == 446:
            current += self.create_node(UnlexerRule(src='\u2C75'))
        elif choice == 447:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(11390, 11392))))
        elif choice == 448:
            current += self.create_node(UnlexerRule(src='\u2C82'))
        elif choice == 449:
            current += self.create_node(UnlexerRule(src='\u2C84'))
        elif choice == 450:
            current += self.create_node(UnlexerRule(src='\u2C86'))
        elif choice == 451:
            current += self.create_node(UnlexerRule(src='\u2C88'))
        elif choice == 452:
            current += self.create_node(UnlexerRule(src='\u2C8A'))
        elif choice == 453:
            current += self.create_node(UnlexerRule(src='\u2C8C'))
        elif choice == 454:
            current += self.create_node(UnlexerRule(src='\u2C8E'))
        elif choice == 455:
            current += self.create_node(UnlexerRule(src='\u2C90'))
        elif choice == 456:
            current += self.create_node(UnlexerRule(src='\u2C92'))
        elif choice == 457:
            current += self.create_node(UnlexerRule(src='\u2C94'))
        elif choice == 458:
            current += self.create_node(UnlexerRule(src='\u2C96'))
        elif choice == 459:
            current += self.create_node(UnlexerRule(src='\u2C98'))
        elif choice == 460:
            current += self.create_node(UnlexerRule(src='\u2C9A'))
        elif choice == 461:
            current += self.create_node(UnlexerRule(src='\u2C9C'))
        elif choice == 462:
            current += self.create_node(UnlexerRule(src='\u2C9E'))
        elif choice == 463:
            current += self.create_node(UnlexerRule(src='\u2CA0'))
        elif choice == 464:
            current += self.create_node(UnlexerRule(src='\u2CA2'))
        elif choice == 465:
            current += self.create_node(UnlexerRule(src='\u2CA4'))
        elif choice == 466:
            current += self.create_node(UnlexerRule(src='\u2CA6'))
        elif choice == 467:
            current += self.create_node(UnlexerRule(src='\u2CA8'))
        elif choice == 468:
            current += self.create_node(UnlexerRule(src='\u2CAA'))
        elif choice == 469:
            current += self.create_node(UnlexerRule(src='\u2CAC'))
        elif choice == 470:
            current += self.create_node(UnlexerRule(src='\u2CAE'))
        elif choice == 471:
            current += self.create_node(UnlexerRule(src='\u2CB0'))
        elif choice == 472:
            current += self.create_node(UnlexerRule(src='\u2CB2'))
        elif choice == 473:
            current += self.create_node(UnlexerRule(src='\u2CB4'))
        elif choice == 474:
            current += self.create_node(UnlexerRule(src='\u2CB6'))
        elif choice == 475:
            current += self.create_node(UnlexerRule(src='\u2CB8'))
        elif choice == 476:
            current += self.create_node(UnlexerRule(src='\u2CBA'))
        elif choice == 477:
            current += self.create_node(UnlexerRule(src='\u2CBC'))
        elif choice == 478:
            current += self.create_node(UnlexerRule(src='\u2CBE'))
        elif choice == 479:
            current += self.create_node(UnlexerRule(src='\u2CC0'))
        elif choice == 480:
            current += self.create_node(UnlexerRule(src='\u2CC2'))
        elif choice == 481:
            current += self.create_node(UnlexerRule(src='\u2CC4'))
        elif choice == 482:
            current += self.create_node(UnlexerRule(src='\u2CC6'))
        elif choice == 483:
            current += self.create_node(UnlexerRule(src='\u2CC8'))
        elif choice == 484:
            current += self.create_node(UnlexerRule(src='\u2CCA'))
        elif choice == 485:
            current += self.create_node(UnlexerRule(src='\u2CCC'))
        elif choice == 486:
            current += self.create_node(UnlexerRule(src='\u2CCE'))
        elif choice == 487:
            current += self.create_node(UnlexerRule(src='\u2CD0'))
        elif choice == 488:
            current += self.create_node(UnlexerRule(src='\u2CD2'))
        elif choice == 489:
            current += self.create_node(UnlexerRule(src='\u2CD4'))
        elif choice == 490:
            current += self.create_node(UnlexerRule(src='\u2CD6'))
        elif choice == 491:
            current += self.create_node(UnlexerRule(src='\u2CD8'))
        elif choice == 492:
            current += self.create_node(UnlexerRule(src='\u2CDA'))
        elif choice == 493:
            current += self.create_node(UnlexerRule(src='\u2CDC'))
        elif choice == 494:
            current += self.create_node(UnlexerRule(src='\u2CDE'))
        elif choice == 495:
            current += self.create_node(UnlexerRule(src='\u2CE0'))
        elif choice == 496:
            current += self.create_node(UnlexerRule(src='\u2CE2'))
        elif choice == 497:
            current += self.create_node(UnlexerRule(src='\u2CEB'))
        elif choice == 498:
            current += self.create_node(UnlexerRule(src='\u2CED'))
        elif choice == 499:
            current += self.create_node(UnlexerRule(src='\u2CF2'))
        elif choice == 500:
            current += self.create_node(UnlexerRule(src='\uA640'))
        elif choice == 501:
            current += self.create_node(UnlexerRule(src='\uA642'))
        elif choice == 502:
            current += self.create_node(UnlexerRule(src='\uA644'))
        elif choice == 503:
            current += self.create_node(UnlexerRule(src='\uA646'))
        elif choice == 504:
            current += self.create_node(UnlexerRule(src='\uA648'))
        elif choice == 505:
            current += self.create_node(UnlexerRule(src='\uA64A'))
        elif choice == 506:
            current += self.create_node(UnlexerRule(src='\uA64C'))
        elif choice == 507:
            current += self.create_node(UnlexerRule(src='\uA64E'))
        elif choice == 508:
            current += self.create_node(UnlexerRule(src='\uA650'))
        elif choice == 509:
            current += self.create_node(UnlexerRule(src='\uA652'))
        elif choice == 510:
            current += self.create_node(UnlexerRule(src='\uA654'))
        elif choice == 511:
            current += self.create_node(UnlexerRule(src='\uA656'))
        elif choice == 512:
            current += self.create_node(UnlexerRule(src='\uA658'))
        elif choice == 513:
            current += self.create_node(UnlexerRule(src='\uA65A'))
        elif choice == 514:
            current += self.create_node(UnlexerRule(src='\uA65C'))
        elif choice == 515:
            current += self.create_node(UnlexerRule(src='\uA65E'))
        elif choice == 516:
            current += self.create_node(UnlexerRule(src='\uA660'))
        elif choice == 517:
            current += self.create_node(UnlexerRule(src='\uA662'))
        elif choice == 518:
            current += self.create_node(UnlexerRule(src='\uA664'))
        elif choice == 519:
            current += self.create_node(UnlexerRule(src='\uA666'))
        elif choice == 520:
            current += self.create_node(UnlexerRule(src='\uA668'))
        elif choice == 521:
            current += self.create_node(UnlexerRule(src='\uA66A'))
        elif choice == 522:
            current += self.create_node(UnlexerRule(src='\uA66C'))
        elif choice == 523:
            current += self.create_node(UnlexerRule(src='\uA680'))
        elif choice == 524:
            current += self.create_node(UnlexerRule(src='\uA682'))
        elif choice == 525:
            current += self.create_node(UnlexerRule(src='\uA684'))
        elif choice == 526:
            current += self.create_node(UnlexerRule(src='\uA686'))
        elif choice == 527:
            current += self.create_node(UnlexerRule(src='\uA688'))
        elif choice == 528:
            current += self.create_node(UnlexerRule(src='\uA68A'))
        elif choice == 529:
            current += self.create_node(UnlexerRule(src='\uA68C'))
        elif choice == 530:
            current += self.create_node(UnlexerRule(src='\uA68E'))
        elif choice == 531:
            current += self.create_node(UnlexerRule(src='\uA690'))
        elif choice == 532:
            current += self.create_node(UnlexerRule(src='\uA692'))
        elif choice == 533:
            current += self.create_node(UnlexerRule(src='\uA694'))
        elif choice == 534:
            current += self.create_node(UnlexerRule(src='\uA696'))
        elif choice == 535:
            current += self.create_node(UnlexerRule(src='\uA722'))
        elif choice == 536:
            current += self.create_node(UnlexerRule(src='\uA724'))
        elif choice == 537:
            current += self.create_node(UnlexerRule(src='\uA726'))
        elif choice == 538:
            current += self.create_node(UnlexerRule(src='\uA728'))
        elif choice == 539:
            current += self.create_node(UnlexerRule(src='\uA72A'))
        elif choice == 540:
            current += self.create_node(UnlexerRule(src='\uA72C'))
        elif choice == 541:
            current += self.create_node(UnlexerRule(src='\uA72E'))
        elif choice == 542:
            current += self.create_node(UnlexerRule(src='\uA732'))
        elif choice == 543:
            current += self.create_node(UnlexerRule(src='\uA734'))
        elif choice == 544:
            current += self.create_node(UnlexerRule(src='\uA736'))
        elif choice == 545:
            current += self.create_node(UnlexerRule(src='\uA738'))
        elif choice == 546:
            current += self.create_node(UnlexerRule(src='\uA73A'))
        elif choice == 547:
            current += self.create_node(UnlexerRule(src='\uA73C'))
        elif choice == 548:
            current += self.create_node(UnlexerRule(src='\uA73E'))
        elif choice == 549:
            current += self.create_node(UnlexerRule(src='\uA740'))
        elif choice == 550:
            current += self.create_node(UnlexerRule(src='\uA742'))
        elif choice == 551:
            current += self.create_node(UnlexerRule(src='\uA744'))
        elif choice == 552:
            current += self.create_node(UnlexerRule(src='\uA746'))
        elif choice == 553:
            current += self.create_node(UnlexerRule(src='\uA748'))
        elif choice == 554:
            current += self.create_node(UnlexerRule(src='\uA74A'))
        elif choice == 555:
            current += self.create_node(UnlexerRule(src='\uA74C'))
        elif choice == 556:
            current += self.create_node(UnlexerRule(src='\uA74E'))
        elif choice == 557:
            current += self.create_node(UnlexerRule(src='\uA750'))
        elif choice == 558:
            current += self.create_node(UnlexerRule(src='\uA752'))
        elif choice == 559:
            current += self.create_node(UnlexerRule(src='\uA754'))
        elif choice == 560:
            current += self.create_node(UnlexerRule(src='\uA756'))
        elif choice == 561:
            current += self.create_node(UnlexerRule(src='\uA758'))
        elif choice == 562:
            current += self.create_node(UnlexerRule(src='\uA75A'))
        elif choice == 563:
            current += self.create_node(UnlexerRule(src='\uA75C'))
        elif choice == 564:
            current += self.create_node(UnlexerRule(src='\uA75E'))
        elif choice == 565:
            current += self.create_node(UnlexerRule(src='\uA760'))
        elif choice == 566:
            current += self.create_node(UnlexerRule(src='\uA762'))
        elif choice == 567:
            current += self.create_node(UnlexerRule(src='\uA764'))
        elif choice == 568:
            current += self.create_node(UnlexerRule(src='\uA766'))
        elif choice == 569:
            current += self.create_node(UnlexerRule(src='\uA768'))
        elif choice == 570:
            current += self.create_node(UnlexerRule(src='\uA76A'))
        elif choice == 571:
            current += self.create_node(UnlexerRule(src='\uA76C'))
        elif choice == 572:
            current += self.create_node(UnlexerRule(src='\uA76E'))
        elif choice == 573:
            current += self.create_node(UnlexerRule(src='\uA779'))
        elif choice == 574:
            current += self.create_node(UnlexerRule(src='\uA77B'))
        elif choice == 575:
            current += self.create_node(UnlexerRule(src='\uA77D'))
        elif choice == 576:
            current += self.create_node(UnlexerRule(src='\uA77E'))
        elif choice == 577:
            current += self.create_node(UnlexerRule(src='\uA780'))
        elif choice == 578:
            current += self.create_node(UnlexerRule(src='\uA782'))
        elif choice == 579:
            current += self.create_node(UnlexerRule(src='\uA784'))
        elif choice == 580:
            current += self.create_node(UnlexerRule(src='\uA786'))
        elif choice == 581:
            current += self.create_node(UnlexerRule(src='\uA78B'))
        elif choice == 582:
            current += self.create_node(UnlexerRule(src='\uA78D'))
        elif choice == 583:
            current += self.create_node(UnlexerRule(src='\uA790'))
        elif choice == 584:
            current += self.create_node(UnlexerRule(src='\uA792'))
        elif choice == 585:
            current += self.create_node(UnlexerRule(src='\uA7A0'))
        elif choice == 586:
            current += self.create_node(UnlexerRule(src='\uA7A2'))
        elif choice == 587:
            current += self.create_node(UnlexerRule(src='\uA7A4'))
        elif choice == 588:
            current += self.create_node(UnlexerRule(src='\uA7A6'))
        elif choice == 589:
            current += self.create_node(UnlexerRule(src='\uA7A8'))
        elif choice == 590:
            current += self.create_node(UnlexerRule(src='\uA7AA'))
        elif choice == 591:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65313, 65338))))
        return current
    UNICODE_CLASS_LU.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_ND(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_ND'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_3305', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_3305', choice)] = self.unlexer.weights.get(('alt_3305', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(48, 57))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1632, 1641))))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1776, 1785))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(1984, 1993))))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2406, 2415))))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2534, 2543))))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2662, 2671))))
        elif choice == 7:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2790, 2799))))
        elif choice == 8:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(2918, 2927))))
        elif choice == 9:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3046, 3055))))
        elif choice == 10:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3174, 3183))))
        elif choice == 11:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3302, 3311))))
        elif choice == 12:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3430, 3439))))
        elif choice == 13:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3664, 3673))))
        elif choice == 14:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3792, 3801))))
        elif choice == 15:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(3872, 3881))))
        elif choice == 16:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4160, 4169))))
        elif choice == 17:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(4240, 4249))))
        elif choice == 18:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6112, 6121))))
        elif choice == 19:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6160, 6169))))
        elif choice == 20:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6470, 6479))))
        elif choice == 21:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6608, 6617))))
        elif choice == 22:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6784, 6793))))
        elif choice == 23:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6800, 6809))))
        elif choice == 24:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(6992, 7001))))
        elif choice == 25:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7088, 7097))))
        elif choice == 26:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7232, 7241))))
        elif choice == 27:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(7248, 7257))))
        elif choice == 28:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42528, 42537))))
        elif choice == 29:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43216, 43225))))
        elif choice == 30:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43264, 43273))))
        elif choice == 31:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43472, 43481))))
        elif choice == 32:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(43600, 43609))))
        elif choice == 33:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(44016, 44025))))
        elif choice == 34:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(65296, 65305))))
        return current
    UNICODE_CLASS_ND.min_depth = 0

    @depthcontrol
    def UNICODE_CLASS_NL(self):
        current = self.create_node(UnlexerRule(name='UNICODE_CLASS_NL'))
        choice = self.choice([0 if [0, 0, 0, 0, 0, 0, 0][i] > self.unlexer.max_depth else w * self.unlexer.weights.get(('alt_3341', i), 1) for i, w in enumerate([1, 1, 1, 1, 1, 1, 1])])
        self.unlexer.weights[('alt_3341', choice)] = self.unlexer.weights.get(('alt_3341', choice), 1) * self.unlexer.cooldown
        if choice == 0:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(5870, 5872))))
        elif choice == 1:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8544, 8578))))
        elif choice == 2:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(8581, 8584))))
        elif choice == 3:
            current += self.create_node(UnlexerRule(src='\u3007'))
        elif choice == 4:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12321, 12329))))
        elif choice == 5:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(12344, 12346))))
        elif choice == 6:
            current += self.create_node(UnlexerRule(src=self.char_from_list(range(42726, 42735))))
        return current
    UNICODE_CLASS_NL.min_depth = 0

